/*
 *
 * Copyright (C) 2014 Rigaku Americas Corporation
 *                    9009 New Trails Drive
 *                    The Woodlands, TX, USA  77381
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    * Redistributions of source code must retain the above copyright
 *      notice(s), this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice(s), this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    * Neither the name of the Rigaku Americas Corporation nor the
 *      names of its contributors may be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RIGAKU AMERICAS CORPORATION BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 */
/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory Version 5.0.
 *
 * Identification: 
 */
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("c++_options", "")
!(BX) bx_info("c++_libs", "-lSgm -lXm -lXt -lgl -lX11 -lgen")
!(BX) bx_info("c++_cflags", "-DFUNCPROTO -DXTFUNCPROTO")
!(BX) bx_info("c++_cc", "g++")
!(BX) bx_info("c++_excludeungenerated", "false")
!(BX) bx_info("c++_target", "dtprocess")
!(BX) bx_info("c++_information", "")
!(BX) bx_info("c++_user_main_loop", "", false)
!(BX) bx_info("c++_del_nested_classes", "false")
!(BX) bx_info("c++_ignore_shell_geometry", "false")
!(BX) bx_info("c++_visible_windows_only", "false")
!(BX) bx_info("c++_rm_exp_callbacks", "false")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "false")
!(BX) bx_info("c++_use_locales", "false")
!(BX) bx_info("c++_name", "dtprocess")
!(BX) bx_info("c++_class", "Dtprocess")
!(BX) bx_info("c++_hdrext", "h")
!(BX) bx_info("c++_srcext", "cc")
!(BX) bx_info("c++_app_defaults", "app-defaults", true)
!(BX) bx_info("c++_callbacks", "callbacks-cc", false)
!(BX) bx_info("c++_utilities", "bxutils-cc", false)
!(BX) bx_info("c++_constants", "defs-cc", false)
!(BX) bx_info("c++_main", "main-cc", true)
!(BX) bx_info("c++_baseclass", "UIComponent", false)
!(BX) bx_info("c++_makefile", "Makefile", false)
!(BX) bx_info("c++_imakefile", "Imakefile", false)
!(BX) bx_info("c++_dirpath", "")
!(BX) bx_info("include_path", ".",
!(BX)		"/usr/lib/X11/builderXcessory/classes", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("purify_command", "purify", false)
!(BX) bx_info("system_directory", "/d3/bxpro")
!(BX) bx_info("builder_version", "Builder Xcessory Version 5.0")
!(BX) bx_info("build_lang", "CXX")
!(BX) bx_info("default_cpp_args", "")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

!
! Include Files: 
!

include file './CUIfileFilter.uil';
include file './CUIscrolledlist.uil';
include file './CUIviewheader.uil';
include file './CUInumberField.uil';
include file './CUItextnumArrow.uil';
include file './CUIom9.uil';
include file './CUIheaderEdit.uil';


procedure vFilterSelect();
procedure vFileFilterCB();
procedure vSelectCB();
procedure vViewHeaderDismissCB();
procedure vButtonCB();
procedure AddKeywordCB();
procedure ReplaceValueCB();
procedure DeleteKeywordCB();
procedure KeywordChangedCB();
procedure KeywordSelectedCB();
procedure ChangeMenuCB();
procedure ClassHelpCB();
procedure ChangeUnitCellCB();
procedure ChangeCrystSpaceGroup();
procedure ChangeCrystMosaicityCB();
procedure ChangeCrystOrientCB();
procedure ChangeDetGonioCB();
procedure ChangeSourceWavelengthCB();
procedure ChangeSourceRotCB();
procedure ChangeDirectBeamCB();
procedure ChangeHeaderCB(string);
procedure ChangeCommentCB(string);
procedure vDAExposeCB();
procedure vPopDialog();
procedure vCommandCB();
procedure vProgressCB();
procedure vEditClearCB();
procedure vUtilsCB();
procedure vFlowChartCB();
procedure vCalibrateCB();
procedure vFindCB();
procedure vIndexCB();
procedure vRefineCB();
procedure vIntegrateCB();
procedure vHelpCB();
procedure vFindTextFieldCB();
procedure vIndexTextFieldCB();
procedure vRefineTextFieldCB();
procedure vIntegrateTextFieldCB();
procedure vUnpostHelpCB();
procedure vPredictCB();
procedure vPredictTextFieldCB();
procedure vScaleCB();
procedure vScaleTextFieldCB();
procedure vPostHelpCB(string);
procedure vCalibrateTextFieldCB();
procedure vMergeCB();
procedure vMergeTextFieldCB();
procedure vOrientCB();
procedure vUnPostHelp();
procedure vToggleButtonCB();
procedure vStrategyTextFieldCB();
procedure vStrategyCB();
procedure vOrientTextFieldCB();
procedure vLogfileCB();
procedure vExitCB(integer);

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};


object cUIheaderEdit : XmSelectionDialog widget {
    arguments {
!(BX) BxNclass = "CUIheaderEdit";
!(BX) BxNsubclassDerived = "False";
        XmNdialogType = XmDIALOG_PROMPT;
        XmNchildPlacement = XmPLACE_TOP;
        XmNresizePolicy = XmRESIZE_NONE;
    };
    controls {
        Xm_Selection unmanaged {
        };
        Xm_Text unmanaged {
        };
        Xm_Apply managed {
        };
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsGetValueError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsValueError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsReplaceValueError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsAddKeywordError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsDeleteKeywordError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsKeywordLengthError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsKeywordCharacterError;
         managed XmForm cUIheaderEdit_foEdit;
    };
    callbacks {
        XmNhelpCallback = procedure ClassHelpCB();
        XmNokCallback = procedure ChangeHeaderCB("ok");
        XmNcancelCallback = procedure ChangeHeaderCB("cancel");
        XmNapplyCallback = procedure ChangeHeaderCB("apply");
    };
};

!(BX)object xmDialogShellHeaderEdit : XmDialogShell widget {
!(BX)    arguments {
!(BX)        _XmNtitle = "d*TREK -  dtprocess:  Edit heade" &
!(BX) "r dialog";
!(BX)        XmNwidth = 792;
!(BX)        XmNheight = 475;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmSelectionDialog cUIheaderEdit;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUItextnumArrow : XmFormDialog widget {
    arguments {
!(BX) BxNclass = "CUItextnumArrow";
!(BX) BxNsubclassDerived = "False";
        XmNautoUnmanage = false;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 682;
        XmNy = 959;
        XmNwidth = 160;
        XmNheight = 120;
    };
    controls {
         managed XmLabel cUItextnumArrow_lbDecimal;
         managed XmArrowButton cUItextnumArrow_abUp10;
         managed XmArrowButton cUItextnumArrow_abUp9;
         managed XmArrowButton cUItextnumArrow_abUp8;
         managed XmArrowButton cUItextnumArrow_abUp7;
         managed XmArrowButton cUItextnumArrow_abUp6;
         managed XmArrowButton cUItextnumArrow_abUp5;
         managed XmArrowButton cUItextnumArrow_abDown10;
         managed XmArrowButton cUItextnumArrow_abDown9;
         managed XmArrowButton cUItextnumArrow_abDown8;
         managed XmArrowButton cUItextnumArrow_abDown7;
         managed XmArrowButton cUItextnumArrow_abDown6;
         managed XmArrowButton cUItextnumArrow_abDown5;
         managed XmPushButton cUItextnumArrow_pbRecall;
         managed XmArrowButton cUItextnumArrow_abUp4;
         managed XmArrowButton cUItextnumArrow_abDown4;
         managed XmArrowButton cUItextnumArrow_abDown3;
         managed XmArrowButton cUItextnumArrow_abUp3;
         managed XmPushButton cUItextnumArrow_pbCancel;
         managed XmPushButton cUItextnumArrow_pbClear;
         managed XmArrowButton cUItextnumArrow_abDown2;
         managed XmArrowButton cUItextnumArrow_abUp2;
         managed XmArrowButton cUItextnumArrow_abDown1;
         managed XmArrowButton cUItextnumArrow_abUp1;
         managed XmPushButton cUItextnumArrow_pbEnter;
    };
    callbacks {
    };
};

!(BX)object xmDialogShellTextNum : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNtitle = "Adjust a number";
!(BX)        XmNwidth = 160;
!(BX)        XmNheight = 120;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog cUItextnumArrow;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object mbProgress : XmMessageDialog widget {
    arguments {
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("d*TREK: dtprocess - Progress mes" &
!(BX) "sage");
!(BX)   _XmNcancelLabelString = compound_string("Abort");
!(BX)   _XmNmessageString = compound_string("Something in progress...");
        XmNx = 580;
        XmNy = 1024;
        XmNwidth = 318;
        XmNheight = 118;
    };
    controls {
    };
    callbacks {
        XmNcancelCallback = procedure vProgressCB();
    };
};

!(BX)object xmDialogShellProgress : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 318;
!(BX)        XmNheight = 118;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog mbProgress;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object mbError : XmMessageDialog widget {
    arguments {
!(BX)   _XmNdialogTitle = compound_string("d*TREK:  dtcollect - Error messa" &
!(BX) "ge");
        XmNx = 512;
        XmNy = 1024;
        XmNwidth = 342;
        XmNheight = 101;
    };
    controls {
    };
    callbacks {
    };
};

!(BX)object xmDialogShellError : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 342;
!(BX)        XmNheight = 101;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog mbError;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIfileFilter : XmFileSelectionDialog widget {
    arguments {
!(BX) BxNclass = "CUIfileFilter";
!(BX) BxNsubclassDerived = "False";
        XmNx = 584;
        XmNy = 974;
        XmNwidth = 438;
        XmNheight = 479;
    };
    controls {
         managed XmOptionMenu cUIfileFilter_omFileFilter;
    };
    callbacks {
        XmNhelpCallback = procedure vFileFilterCB();
        XmNokCallback = procedure vFileFilterCB();
        XmNcancelCallback = procedure vFileFilterCB();
        XmNapplyCallback = procedure vFileFilterCB();
    };
};

!(BX)object xmDialogShellFileFilter : XmDialogShell widget {
!(BX)    arguments {
!(BX)        _XmNtitle = "d*TREK - dtprocess: File filter";
!(BX)        XmNwidth = 438;
!(BX)        XmNheight = 479;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFileSelectionDialog cUIfileFilter;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object pbFileOpen : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Open...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Open a header file with dtproce" &
 "ss values");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbFileSaveAs : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Save As...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Save a header file with current" &
 " dtprocess values");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbFileHeader : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Header template...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select a header for input to su" &
 "bshells");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbFileTemplate : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Image file template ...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select an image file for subshe" &
 "lls");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbFileReflnlist : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Reflnlist ...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select a reflnlist file for sub" &
 "shells");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbFileLogfile : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Log file...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select a log file to view");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbFilePrint : XmPushButton widget {
    arguments {
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Print");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Print the currently viewed log " &
 "file");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object spFile : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbFileCD : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Change directory...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Change the working directory");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbFileMkdir : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Make a directory...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Make a new directory");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object spFile2 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbFileExit : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Exit");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Exit from dtprocess");
        XmNactivateCallback = procedure vExitCB(0);
    };
};

object pdFile : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 290;
        XmNheight = 278;
    };
    controls {
         managed XmPushButton pbFileOpen;
         managed XmPushButton pbFileSaveAs;
         managed XmPushButton pbFileHeader;
         managed XmPushButton pbFileTemplate;
         managed XmPushButton pbFileReflnlist;
         managed XmPushButton pbFileLogfile;
         managed XmPushButton pbFilePrint;
         managed XmSeparator spFile;
         managed XmPushButton pbFileCD;
         managed XmPushButton pbFileMkdir;
         managed XmSeparator spFile2;
         managed XmPushButton pbFileExit;
    };
    callbacks {
    };
};

object cbFile : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("File");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pdFile;
    };
    callbacks {
    };
};

object pbEditHeader : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Edit header items...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Edit some header items");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object spEdit : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbEditClearAll : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("All text");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Clear all text in output window" &
 "");
        XmNactivateCallback = procedure vEditClearCB();
    };
};

object pbEditClearSelected : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Selected text");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Clear selected text in output w" &
 "indow");
        XmNactivateCallback = procedure vEditClearCB();
    };
};

object pdEditClear : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 170;
        XmNheight = 58;
    };
    controls {
         managed XmPushButton pbEditClearAll;
         managed XmPushButton pbEditClearSelected;
    };
    callbacks {
    };
};

object cbEditClear : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Clear output");
    };
    controls {
         unmanaged XmPulldownMenu pdEditClear;
    };
    callbacks {
    };
};

object pbEditClearCommand : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Clear command line");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Clear the command line");
        XmNactivateCallback = procedure vEditClearCB();
    };
};

object pdEdit : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 273;
        XmNheight = 85;
    };
    controls {
         managed XmPushButton pbEditHeader;
         managed XmSeparator spEdit;
         managed XmCascadeButton cbEditClear;
         managed XmPushButton pbEditClearCommand;
    };
    callbacks {
    };
};

object cbEdit : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Edit");
        XmNx = 69;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pdEdit;
    };
    callbacks {
    };
};

object pbViewHeader : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("View header...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("View the header in a new window" &
 "");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pbViewLogfile : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Log file...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select a log file to view");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object tbViewNumAdjust : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Number adjuster");
!(BX)   _XmNselectColor = color('Green');
        XmNvisibleWhenOff = true;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vToggleButtonCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use a special number adjuster t" &
 "ool");
    };
};

object tbViewCommand : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNset = true;
!(BX)   _XmNlabelString = compound_string("Command line");
!(BX)   _XmNselectColor = color('Green');
        XmNvisibleWhenOff = true;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vToggleButtonCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Display command line");
    };
};

object pdView : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 207;
        XmNheight = 108;
    };
    controls {
         managed XmPushButton pbViewHeader;
         managed XmPushButton pbViewLogfile;
         managed XmToggleButton tbViewNumAdjust;
         managed XmToggleButton tbViewCommand;
    };
    callbacks {
    };
};

object cbView : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("View");
        XmNx = 133;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pdView;
    };
    callbacks {
    };
};

object pbUtilsDisplay : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("dtdisplay ...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run dtdisplay in a subshell");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pbUtilsCollect : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("dtcollect ...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run dtcollect in a subshell");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pbUtilsPurge : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Purge");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Purge old header and ref files");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object spUtils : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbUtilsCommand1 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run user command");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pbUtilsCommand2 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run user command");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pbUtilsCommand3 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run user command");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pbUtilsCommand4 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run user command");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pbUtilsCommand5 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run user command");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pbUtilsCommand6 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run user command");
        XmNactivateCallback = procedure vUtilsCB();
    };
};

object pdUtils : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 170;
        XmNheight = 147;
    };
    controls {
         managed XmPushButton pbUtilsDisplay;
         managed XmPushButton pbUtilsCollect;
         managed XmPushButton pbUtilsPurge;
         managed XmSeparator spUtils;
         managed XmPushButton pbUtilsCommand1;
         managed XmPushButton pbUtilsCommand2;
         managed XmPushButton pbUtilsCommand3;
         managed XmPushButton pbUtilsCommand4;
         managed XmPushButton pbUtilsCommand5;
         managed XmPushButton pbUtilsCommand6;
    };
    callbacks {
    };
};

object cbUtils : XmCascadeButton widget {
    arguments {
        XmNlabelString = compound_string("Utils");
        XmNx = 197;
        XmNy = 5;
        XmNwidth = 76;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pdUtils;
    };
    callbacks {
    };
};

object pbHelpHelp : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Help...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Get general dtprocess help");
        XmNactivateCallback = procedure vHelpCB();
    };
};

object pbHelpThisMenu : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("This menu...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Get help for menu shown");
        XmNactivateCallback = procedure vHelpCB();
    };
};

object pbHelpAbout : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("About...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show version information");
        XmNactivateCallback = procedure vPopDialog();
    };
};

object pdHelp : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 158;
        XmNheight = 85;
    };
    controls {
         managed XmPushButton pbHelpHelp;
         managed XmPushButton pbHelpThisMenu;
         managed XmPushButton pbHelpAbout;
    };
    callbacks {
    };
};

object cbHelp : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Help");
        XmNx = 273;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pdHelp;
    };
    callbacks {
    };
};

object meMain : XmMenuBar widget {
    arguments {
        XmNwidth = 1090;
        XmNheight = 35;
    };
    controls {
         managed XmCascadeButton cbFile;
         managed XmCascadeButton cbEdit;
         managed XmCascadeButton cbView;
         managed XmCascadeButton cbUtils;
         managed XmCascadeButton cbHelp;
    };
    callbacks {
    };
};

object cUIomMode : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frFlowchart;
        XmNleftOffset = -14;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNrightWidget = XmFrame frFlowchart;
        XmNtopWidget = XmLabel lbMode;
        XmNx = -14;
        XmNy = 30;
        XmNwidth = 166;
        XmNheight = 35;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("Manual");
!(BX)   cUIom9_pb8 _XmNsensitive = false;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb8 XmNuserData = 10;
!(BX)   cUIom9_pb7 _XmNsensitive = false;
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb7 XmNuserData = 10;
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb6 XmNuserData = 10;
!(BX)   cUIom9_pb5 _XmNsensitive = false;
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb5 XmNuserData = 10;
!(BX)   cUIom9_pb4 _XmNsensitive = false;
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb4 XmNuserData = 10;
!(BX)   cUIom9_pb3 _XmNsensitive = false;
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb3 XmNuserData = 10;
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Auto next and run");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Auto next");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Manual");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object pbCalibrate : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Setup");
        XmNx = 4;
        XmNy = 14;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Setup menu");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbFind : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Find");
        XmNx = 4;
        XmNy = 60;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Find menu to find refl" &
 "ections");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbIndex : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Index");
        XmNx = 4;
        XmNy = 105;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Index menu to index re" &
 "flections");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbRefine : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Refine");
        XmNx = 4;
        XmNy = 150;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Refine menu to refine " &
 "crystal, detector and source properties");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbPredict : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Predict");
        XmNx = 4;
        XmNy = 195;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Predict menu to predic" &
 "t reflections");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbIntegrate : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Integrate");
        XmNx = 4;
        XmNy = 285;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Integrate menu to inte" &
 "grate reflections in a scan of images");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbMerge : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Merge");
        XmNx = 4;
        XmNy = 330;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the dtreflnmerge menu to m" &
 "erge one or more reflnlists");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbScale : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Scale/Average");
        XmNx = 4;
        XmNy = 375;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Scale/Average menu to " &
 "scale and average a reflnlist");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbOrient : XmPushButton widget {
    arguments {
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Orient");
        XmNx = 4;
        XmNy = 240;
        XmNwidth = 70;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Orient menu to re-orie" &
 "nt the crystal");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object pbStrategy : XmPushButton widget {
    arguments {
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Strategy");
        XmNx = 74;
        XmNy = 240;
        XmNwidth = 70;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show the Strategy menu to calcu" &
 "late best rotation start and range");
        XmNactivateCallback = procedure vFlowChartCB();
    };
};

object daFlowchart : XmDrawingArea widget {
    arguments {
        XmNmarginHeight = 2;
        XmNmarginWidth = 2;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 146;
        XmNheight = 419;
    };
    controls {
         managed XmPushButton pbCalibrate;
         managed XmPushButton pbFind;
         managed XmPushButton pbIndex;
         managed XmPushButton pbRefine;
         managed XmPushButton pbPredict;
         managed XmPushButton pbIntegrate;
         managed XmPushButton pbMerge;
         managed XmPushButton pbScale;
         managed XmPushButton pbOrient;
         managed XmPushButton pbStrategy;
    };
    callbacks {
        XmNexposeCallback = procedure vDAExposeCB();
    };
};

object frFlowchart : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 65;
        XmNx = 0;
        XmNy = 65;
        XmNwidth = 152;
        XmNheight = 425;
    };
    controls {
         managed XmDrawingArea daFlowchart;
    };
    callbacks {
    };
};

object frLists : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frFlowchart;
        XmNleftOffset = 2;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frFlowchart;
        XmNx = 154;
        XmNy = 2;
        XmNwidth = 174;
        XmNheight = 488;
    };
    controls {
    };
    callbacks {
    };
};

object cslReflnlist : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIscrolledlist";
!(BX) BxNsubclassDerived = "False";
        XmNtraversalOn = true;
        XmNresizePolicy = XmRESIZE_ANY;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNresizable = false;
        XmNbottomOffset = 2;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frLists;
        XmNrightWidget = XmFrame frLists;
        XmNtopWidget = XmForm cslHeader;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 170;
!(BX)   cslReflnlist XmNwidth = 170;
!(BX)   cslReflnlist XmNheight = 363;
!(BX)   cUIscrolledlist_pbDeselectAll _XmNlabelString = compound_string("Deselect all");
!(BX)   cUIscrolledlist_pbSelectAll _XmNlabelString = compound_string("Select all");
!(BX)   cUIscrolledlist_liList XmNselectionPolicy = XmSINGLE_SELECT;
!(BX)   cUIscrolledlist_lbTitle _XmNlabelString = compound_string("Reflnlists");
    };
    controls {
         managed XmPushButton cUIscrolledlist_pbDeselectAll;
         managed XmPushButton cUIscrolledlist_pbSelectAll;
         managed XmScrolledWindow cUIscrolledlist_swList;
         managed XmLabel cUIscrolledlist_lbTitle;
         managed XmFrame cUIscrolledlist_frFrame;
    };
    callbacks {
    };
};

object cslHeader : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIscrolledlist";
!(BX) BxNsubclassDerived = "False";
        XmNtraversalOn = true;
        XmNresizePolicy = XmRESIZE_ANY;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_POSITION;
        XmNresizable = false;
        XmNbottomPosition = 23;
        XmNleftOffset = 0;
        XmNrightOffset = 2;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frFlowchart;
        XmNrightWidget = XmFrame frLists;
        XmNtopWidget = XmFrame frLists;
        XmNx = 152;
        XmNy = 2;
        XmNwidth = 174;
!(BX)   cslHeader XmNwidth = 174;
!(BX)   cslHeader XmNheight = 142;
!(BX)   cUIscrolledlist_pbDeselectAll _XmNlabelString = compound_string("Deselect");
!(BX)   cUIscrolledlist_lbTitle _XmNlabelString = compound_string("Header");
    };
    controls {
         managed XmPushButton cUIscrolledlist_pbDeselectAll;
         managed XmPushButton cUIscrolledlist_pbSelectAll;
         managed XmScrolledWindow cUIscrolledlist_swList;
         managed XmLabel cUIscrolledlist_lbTitle;
         managed XmFrame cUIscrolledlist_frFrame;
    };
    callbacks {
    };
};

object cslImages : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIscrolledlist";
!(BX) BxNsubclassDerived = "False";
        XmNtraversalOn = true;
        XmNresizePolicy = XmRESIZE_ANY;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNresizable = false;
        XmNbottomOffset = 2;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frFlowchart;
        XmNrightWidget = XmFrame frLists;
        XmNtopWidget = XmForm cslHeader;
        XmNx = 152;
        XmNy = 146;
        XmNwidth = 174;
!(BX)   cslImages XmNwidth = 174;
!(BX)   cslImages XmNheight = 342;
!(BX)   cUIscrolledlist_pbDeselectAll _XmNlabelString = compound_string("Deselect all");
!(BX)   cUIscrolledlist_pbSelectAll _XmNlabelString = compound_string("Select all");
    };
    controls {
         managed XmPushButton cUIscrolledlist_pbDeselectAll;
         managed XmPushButton cUIscrolledlist_pbSelectAll;
         managed XmScrolledWindow cUIscrolledlist_swList;
         managed XmLabel cUIscrolledlist_lbTitle;
         managed XmFrame cUIscrolledlist_frFrame;
    };
    callbacks {
    };
};

object txOutput : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
!(BX)   _XmNbackground = color('white');
        XmNscrollLeftSide = true;
    };
    controls {
    };
    callbacks {
    };
};

object swOutput : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbCommand;
        XmNx = 0;
        XmNy = 536;
        XmNwidth = 1090;
        XmNheight = 90;
    };
    controls {
         managed XmText txOutput;
    };
    callbacks {
    };
};

object tfCommand : XmTextField widget {
    arguments {
!(BX)   _XmNbackground = color('white');
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmLabel lbCommand;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frFlowchart;
        XmNx = 152;
        XmNy = 490;
        XmNwidth = 938;
        XmNheight = 44;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vCommandCB();
    };
};

object lbCommand : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Command:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 1;
        XmNtopWidget = XmFrame frFlowchart;
        XmNx = 10;
        XmNy = 491;
        XmNwidth = 138;
        XmNheight = 43;
    };
    controls {
    };
    callbacks {
    };
};

object pbCalibrateRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Write dtprocess.head");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 75;
        XmNleftPosition = 25;
        XmNleftOffset = 0;
        XmNx = 189;
        XmNy = 444;
        XmNwidth = 378;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Write header dtprocess.head");
        XmNactivateCallback = procedure vCalibrateCB();
    };
};

object seCalibrate : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbCalibrateRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 429;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateDirBeam1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbCalibrateDirectBeam;
        XmNtopWidget = XmLabel lbCalibrateDirectBeam;
        XmNx = 150;
        XmNy = 382;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object tfCalibrateDirBeam2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateDirBeam1;
        XmNtopWidget = XmTextField tfCalibrateDirBeam1;
        XmNx = 245;
        XmNy = 382;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object lbCalibrateDirectBeam : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Direct beam (px):");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmLabel lbCalibrateDetTheta;
        XmNx = 0;
        XmNy = 380;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbCalibrateSpatial : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Spatial distortion type");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmLabel lbCalibrateNonunf;
        XmNx = 0;
        XmNy = 40;
        XmNwidth = 245;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbCalibrateSpatialSimple : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Pixel size (mm):");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 30;
        XmNleftWidget = XmForm cUIomCalibrateSpatial;
        XmNtopWidget = XmForm cUIomCalibrateSpatial;
        XmNx = 0;
        XmNy = 145;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateSpatialSimple1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateSpatialSimple;
        XmNtopWidget = XmLabel lbCalibrateSpatialSimple;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object tfCalibrateSpatialSimple2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateSpatialSimple1;
        XmNtopWidget = XmTextField tfCalibrateSpatialSimple1;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object lbCalibrateSpatialInterp : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Interp table basename:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = -5;
        XmNleftWidget = XmForm cUIomCalibrateSpatial;
        XmNtopWidget = XmForm cUIomCalibrateSpatial;
        XmNx = 0;
        XmNy = 110;
        XmNwidth = 200;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateSpatialInterp : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "distor";
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateSpatialInterp;
        XmNtopWidget = XmLabel lbCalibrateSpatialInterp;
        XmNx = 0;
        XmNy = 145;
        XmNwidth = 240;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object pbCalibrateSpatialInterp : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateSpatialInterp;
        XmNtopWidget = XmTextField tfCalibrateSpatialInterp;
        XmNx = 240;
        XmNy = 145;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select spatial distortion table" &
 " basename");
        XmNactivateCallback = procedure vCalibrateCB();
    };
};

object lbCalibrateNonunf : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Non-uniformity/Mask type:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 350;
        XmNtopOffset = 40;
        XmNx = 350;
        XmNy = 40;
        XmNwidth = 245;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object pbCalibrateNonunfDark : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateNonunfDark;
        XmNtopWidget = XmTextField tfCalibrateNonunfDark;
        XmNx = 590;
        XmNy = 215;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select dark file");
        XmNactivateCallback = procedure vCalibrateCB();
    };
};

object lbCalibrateNonunfDark : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Dark file:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateNonunfNonunf;
        XmNtopWidget = XmTextField tfCalibrateNonunfNonunf;
        XmNx = 350;
        XmNy = 180;
        XmNwidth = 200;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateNonunfDark : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "dark";
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateNonunfNonunf;
        XmNtopWidget = XmLabel lbCalibrateNonunfDark;
        XmNx = 350;
        XmNy = 215;
        XmNwidth = 240;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object pbCalibrateNonunfNonunf : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateNonunfNonunf;
        XmNtopWidget = XmTextField tfCalibrateNonunfNonunf;
        XmNx = 590;
        XmNy = 145;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select non-uniformity or mask f" &
 "ile");
        XmNactivateCallback = procedure vCalibrateCB();
    };
};

object lbCalibrateNonunfNonunf : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Non-uniformity/Mask file:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = -5;
        XmNleftWidget = XmLabel lbCalibrateNonunf;
        XmNtopWidget = XmForm cUIomCalibrateNonunf;
        XmNx = 350;
        XmNy = 110;
        XmNwidth = 245;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateNonunfNonunf : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "nonunf";
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateNonunfNonunf;
        XmNtopWidget = XmLabel lbCalibrateNonunfNonunf;
        XmNx = 350;
        XmNy = 145;
        XmNwidth = 240;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object cUIomCalibrateNonunf : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateNonunf;
        XmNtopWidget = XmLabel lbCalibrateNonunf;
        XmNx = 350;
        XmNy = 75;
        XmNwidth = 303;
        XmNheight = 40;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("None");
!(BX)   cUIom9_pb8 _XmNsensitive = false;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb7 _XmNsensitive = false;
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb6 _XmNsensitive = false;
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb5 _XmNsensitive = false;
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb4 _XmNsensitive = false;
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Dark & DC offset");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Dark only");
!(BX)   cUIom9_pb2 _XmNsensitive = false;
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Simple scale");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Simple mask");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("None");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIomCalibrateSpatial : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateSpatial;
        XmNtopWidget = XmForm cUIomCalibrateNonunf;
        XmNx = 0;
        XmNy = 75;
        XmNwidth = 303;
        XmNheight = 40;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("Simple");
!(BX)   cUIom9_pb8 _XmNsensitive = false;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb8 XmNuserData = 10;
!(BX)   cUIom9_pb7 _XmNsensitive = false;
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb7 XmNuserData = 10;
!(BX)   cUIom9_pb6 _XmNsensitive = false;
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb6 XmNuserData = 10;
!(BX)   cUIom9_pb5 _XmNsensitive = false;
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb5 XmNuserData = 10;
!(BX)   cUIom9_pb4 _XmNsensitive = false;
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb4 XmNuserData = 10;
!(BX)   cUIom9_pb3 _XmNsensitive = false;
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb3 XmNuserData = 10;
!(BX)   cUIom9_pb2 _XmNsensitive = false;
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Interp. tables");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Simple");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbCalibrateTemplate : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Scan template:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateTemplate : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateTemplate;
        XmNrightWidget = XmTextField tfCalibrateResolution2;
        XmNtopWidget = XmLabel lbCalibrateTemplate;
        XmNx = 150;
        XmNy = 0;
        XmNwidth = 535;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object pbCalibrateTemplate : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateTemplate;
        XmNtopWidget = XmTextField tfCalibrateTemplate;
        XmNx = 685;
        XmNy = 0;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Browse for scan template");
        XmNactivateCallback = procedure vCalibrateCB();
    };
};

object lbCalibrateDetDist : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Det distance (mm):");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 300;
        XmNx = 0;
        XmNy = 300;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateDetDist : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbCalibrateDetDist;
        XmNtopWidget = XmLabel lbCalibrateDetDist;
        XmNx = 150;
        XmNy = 302;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object tfCalibrateDetTheta : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 1;
        XmNleftWidget = XmLabel lbCalibrateDetTheta;
        XmNtopWidget = XmLabel lbCalibrateDetTheta;
        XmNx = 150;
        XmNy = 341;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object lbCalibrateDetTheta : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNsensitive = true;
        XmNlabelString = compound_string("Det swing (deg):");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmLabel lbCalibrateDetDist;
        XmNx = 0;
        XmNy = 340;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateSpacegroup : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateSpacegroup;
        XmNtopWidget = XmLabel lbCalibrateSpacegroup;
        XmNx = 500;
        XmNy = 340;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object lbCalibrateSpacegroup : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Spacegroup:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNleftWidget = XmLabel lbCalibrateResolution;
        XmNtopWidget = XmLabel lbCalibrateResolution;
        XmNx = 350;
        XmNy = 340;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbCalibrateResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Master", separate=true) &
!(BX) compound_string("resolution:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 110;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateDetDist;
        XmNtopWidget = XmLabel lbCalibrateDetDist;
        XmNx = 350;
        XmNy = 300;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateResolution1;
        XmNtopWidget = XmTextField tfCalibrateResolution1;
        XmNx = 595;
        XmNy = 300;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object tfCalibrateResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateResolution;
        XmNtopWidget = XmLabel lbCalibrateResolution;
        XmNx = 500;
        XmNy = 300;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object lbCalibrateWindow : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Box size (px):");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNleftWidget = XmLabel lbCalibrateSpacegroup;
        XmNtopWidget = XmLabel lbCalibrateSpacegroup;
        XmNx = 350;
        XmNy = 380;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibrateWindow1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibrateWindow;
        XmNtopWidget = XmLabel lbCalibrateWindow;
        XmNx = 500;
        XmNy = 380;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object tfCalibrateWindow2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfCalibrateWindow1;
        XmNtopWidget = XmTextField tfCalibrateWindow1;
        XmNx = 595;
        XmNy = 380;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object lbCalibratedTREKPrefix : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("d*TREK prefix:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 185;
        XmNleftWidget = XmLabel lbCalibrateSpatial;
        XmNtopWidget = XmLabel lbCalibrateSpatial;
        XmNx = 0;
        XmNy = 260;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfCalibratedTREKPrefix : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbCalibratedTREKPrefix;
        XmNtopWidget = XmLabel lbCalibratedTREKPrefix;
        XmNx = 150;
        XmNy = 260;
        XmNwidth = 185;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vCalibrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vCalibrateTextFieldCB();
    };
};

object tbCalibrateIndexPrompt : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("User chooses solution");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNleftWidget = XmTextField tfCalibrateSpacegroup;
        XmNtopWidget = XmTextField tfCalibrateSpacegroup;
        XmNx = 595;
        XmNy = 345;
        XmNwidth = 161;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vCalibrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Specify whether to let user cho" &
 "ose the solution in dtindex");
    };
};

object tbCalibrateModeSmall : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("Small molecule features");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = -35;
        XmNleftWidget = XmTextField tfCalibrateResolution2;
        XmNtopWidget = XmTextField tfCalibrateResolution2;
        XmNx = 595;
        XmNy = 265;
        XmNwidth = 161;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vCalibrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use small molecule features in" &
 "auto mode");
    };
};

object foCalibrate : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
    };
    controls {
         managed XmToggleButton tbCalibrateModeSmall;
         managed XmToggleButton tbCalibrateIndexPrompt;
         managed XmTextField tfCalibratedTREKPrefix;
         managed XmLabel lbCalibratedTREKPrefix;
         managed XmTextField tfCalibrateWindow2;
         managed XmTextField tfCalibrateWindow1;
         managed XmLabel lbCalibrateWindow;
         managed XmTextField tfCalibrateResolution1;
         managed XmTextField tfCalibrateResolution2;
         managed XmLabel lbCalibrateResolution;
         managed XmLabel lbCalibrateSpacegroup;
         managed XmTextField tfCalibrateSpacegroup;
         managed XmLabel lbCalibrateDetTheta;
         managed XmTextField tfCalibrateDetTheta;
         managed XmTextField tfCalibrateDetDist;
         managed XmLabel lbCalibrateDetDist;
         managed XmPushButton pbCalibrateTemplate;
         managed XmTextField tfCalibrateTemplate;
         managed XmLabel lbCalibrateTemplate;
         managed XmForm cUIomCalibrateSpatial;
         managed XmForm cUIomCalibrateNonunf;
         managed XmTextField tfCalibrateNonunfNonunf;
         managed XmLabel lbCalibrateNonunfNonunf;
         managed XmPushButton pbCalibrateNonunfNonunf;
         managed XmTextField tfCalibrateNonunfDark;
         managed XmLabel lbCalibrateNonunfDark;
         managed XmPushButton pbCalibrateNonunfDark;
         managed XmLabel lbCalibrateNonunf;
         managed XmPushButton pbCalibrateSpatialInterp;
         managed XmTextField tfCalibrateSpatialInterp;
         managed XmLabel lbCalibrateSpatialInterp;
         unmanaged XmTextField tfCalibrateSpatialSimple2;
         unmanaged XmTextField tfCalibrateSpatialSimple1;
         unmanaged XmLabel lbCalibrateSpatialSimple;
         managed XmLabel lbCalibrateSpatial;
         managed XmLabel lbCalibrateDirectBeam;
         managed XmTextField tfCalibrateDirBeam2;
         managed XmTextField tfCalibrateDirBeam1;
         managed XmSeparator seCalibrate;
         managed XmPushButton pbCalibrateRun;
    };
    callbacks {
    };
};

object frCalibrate : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 2;
        XmNrightOffset = -2;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 330;
        XmNy = 0;
        XmNwidth = 762;
        XmNheight = 490;
    };
    controls {
         managed XmForm foCalibrate;
    };
    callbacks {
    };
};

object lbFindSeq : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Image sequence:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 5;
        XmNx = 10;
        XmNy = 5;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindSigma : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Sigma:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindSeq;
        XmNx = 10;
        XmNy = 42;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindMin : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Minimum:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindSigma;
        XmNx = 10;
        XmNy = 79;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindFilter : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Peak filter:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindMin;
        XmNx = 10;
        XmNy = 116;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindWindow : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Window:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindFilter;
        XmNx = 10;
        XmNy = 153;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindPadding : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Padding:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindWindow;
        XmNx = 10;
        XmNy = 190;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object seFind : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfFindPadding;
        XmNx = 0;
        XmNy = 227;
        XmNwidth = 756;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindBackRect : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Background rect:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 0;
        XmNtopWidget = XmSeparator seFind;
        XmNx = 10;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindCircle : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Circle limit:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindBackRect;
        XmNx = 10;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindRect : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rect limit:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindCircle;
        XmNx = 10;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbFindDump : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Dump interval:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindRect;
        XmNx = 10;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfFindSeqStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindSeq;
        XmNtopWidget = XmLabel lbFindSeq;
        XmNx = 160;
        XmNy = 7;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindSeqEnd : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindSeqStart;
        XmNtopWidget = XmTextField tfFindSeqStart;
        XmNx = 255;
        XmNy = 7;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindSigma : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindSigma;
        XmNtopWidget = XmLabel lbFindSigma;
        XmNx = 160;
        XmNy = 44;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindMin : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindMin;
        XmNtopWidget = XmLabel lbFindMin;
        XmNx = 160;
        XmNy = 81;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindFilter : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindFilter;
        XmNtopWidget = XmLabel lbFindFilter;
        XmNx = 160;
        XmNy = 118;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindWindow1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindWindow;
        XmNtopWidget = XmLabel lbFindWindow;
        XmNx = 160;
        XmNy = 155;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindWindow2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindWindow1;
        XmNtopWidget = XmTextField tfFindWindow1;
        XmNx = 255;
        XmNy = 155;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindPadding : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindPadding;
        XmNtopWidget = XmLabel lbFindPadding;
        XmNx = 160;
        XmNy = 192;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindBackRect1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindBackRect;
        XmNtopWidget = XmLabel lbFindBackRect;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindBackRect2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindBackRect1;
        XmNtopWidget = XmTextField tfFindBackRect1;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindCircle1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 160;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbFindCircle;
        XmNx = 160;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindCircle2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindCircle1;
        XmNtopWidget = XmTextField tfFindCircle1;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindCircle3 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindCircle2;
        XmNtopWidget = XmTextField tfFindCircle2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindCircle4 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindCircle3;
        XmNtopWidget = XmTextField tfFindCircle3;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindRect1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindRect;
        XmNtopWidget = XmLabel lbFindRect;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindRect2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindRect1;
        XmNtopWidget = XmTextField tfFindRect1;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindRect3 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindRect2;
        XmNtopWidget = XmTextField tfFindRect2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindRect4 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindRect3;
        XmNtopWidget = XmTextField tfFindRect3;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindDump : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbFindDump;
        XmNtopWidget = XmLabel lbFindDump;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tbFindDisplay : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("Display");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 20;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindSeqEnd;
        XmNtopWidget = XmTextField tfFindSeqEnd;
        XmNx = 365;
        XmNy = 7;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vFindCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -display option in dtfind");
    };
};

object tbFind3D : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("3D search");
!(BX)   _XmNselectColor = color('Green');
        XmNindicatorSize = 17;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 387;
        XmNleftWidget = XmToggleButton tbFindDisplay;
        XmNx = 0;
        XmNy = 387;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vFindCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -3D option in dtfind");
    };
};

object pbFindRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run find");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 302;
        XmNy = 444;
        XmNwidth = 152;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Run dtfind program to find spot" &
 "s");
        XmNactivateCallback = procedure vFindCB();
    };
};

object seFind1 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbFindRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 429;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object tbFindMore : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Show more options");
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 20;
        XmNrightOffset = 0;
        XmNtopOffset = 199;
        XmNleftWidget = XmTextField tfFindWindow2;
        XmNx = 365;
        XmNy = 199;
        XmNwidth = 180;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vFindCB();
    };
};

object lbFindResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Resolution:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbFindDisplay;
        XmNtopWidget = XmLabel lbFindSigma;
        XmNx = 365;
        XmNy = 42;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfFindResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfFindResolution1;
        XmNtopWidget = XmTextField tfFindResolution1;
        XmNx = 610;
        XmNy = 40;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object tfFindResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = -2;
        XmNleftWidget = XmLabel lbFindResolution;
        XmNtopWidget = XmLabel lbFindResolution;
        XmNx = 515;
        XmNy = 40;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vFindTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vFindTextFieldCB();
    };
};

object foFind : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 756;
        XmNheight = 484;
    };
    controls {
         managed XmTextField tfFindResolution1;
         managed XmTextField tfFindResolution2;
         managed XmLabel lbFindResolution;
         managed XmToggleButton tbFindMore;
         managed XmSeparator seFind1;
         managed XmPushButton pbFindRun;
         unmanaged XmToggleButton tbFind3D;
         managed XmToggleButton tbFindDisplay;
         unmanaged XmTextField tfFindDump;
         unmanaged XmTextField tfFindRect4;
         unmanaged XmTextField tfFindRect3;
         unmanaged XmTextField tfFindRect2;
         unmanaged XmTextField tfFindRect1;
         unmanaged XmTextField tfFindCircle4;
         unmanaged XmTextField tfFindCircle3;
         unmanaged XmTextField tfFindCircle2;
         unmanaged XmTextField tfFindCircle1;
         unmanaged XmTextField tfFindBackRect2;
         unmanaged XmTextField tfFindBackRect1;
         managed XmTextField tfFindPadding;
         managed XmTextField tfFindWindow2;
         managed XmTextField tfFindWindow1;
         managed XmTextField tfFindFilter;
         managed XmTextField tfFindMin;
         managed XmTextField tfFindSigma;
         managed XmTextField tfFindSeqEnd;
         managed XmTextField tfFindSeqStart;
         unmanaged XmLabel lbFindDump;
         unmanaged XmLabel lbFindRect;
         unmanaged XmLabel lbFindCircle;
         unmanaged XmLabel lbFindBackRect;
         managed XmSeparator seFind;
         managed XmLabel lbFindPadding;
         managed XmLabel lbFindWindow;
         managed XmLabel lbFindFilter;
         managed XmLabel lbFindMin;
         managed XmLabel lbFindSigma;
         managed XmLabel lbFindSeq;
    };
    callbacks {
    };
};

object frFind : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 762;
        XmNheight = 490;
    };
    controls {
         managed XmForm foFind;
    };
    callbacks {
    };
};

object lbIndexMaxDiffs : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Max vecs:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 3;
        XmNtopWidget = XmLabel lbIndexMethod;
        XmNx = 10;
        XmNy = 197;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIndexMaxCell : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Max cell length:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIndexMaxResid;
        XmNx = 10;
        XmNy = 109;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIndexGrid : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Grid size:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIndexMaxDiffs;
        XmNx = 10;
        XmNy = 234;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object seIndex : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbIndexRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 427;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object lbIndexErrorLength : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Cell length errors:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 9;
        XmNtopWidget = XmToggleButton tbIndexKnown;
        XmNx = 10;
        XmNy = 325;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIndexErrorAngle : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Cell angle errors:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIndexErrorLength;
        XmNx = 10;
        XmNy = 362;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfIndexMaxDiffs : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexMaxDiffs;
        XmNtopWidget = XmLabel lbIndexMaxDiffs;
        XmNx = 160;
        XmNy = 199;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexMaxCell : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexMaxCell;
        XmNtopWidget = XmLabel lbIndexMaxCell;
        XmNx = 160;
        XmNy = 111;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexGrid : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexGrid;
        XmNtopWidget = XmLabel lbIndexGrid;
        XmNx = 160;
        XmNy = 236;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexErrorLength1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 160;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIndexErrorLength;
        XmNx = 160;
        XmNy = 327;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexErrorLength2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIndexErrorLength1;
        XmNtopWidget = XmTextField tfIndexErrorLength1;
        XmNx = 255;
        XmNy = 327;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexErrorLength3 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIndexErrorLength2;
        XmNtopWidget = XmTextField tfIndexErrorLength2;
        XmNx = 350;
        XmNy = 327;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexErrorAngle1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexErrorAngle;
        XmNtopWidget = XmLabel lbIndexErrorAngle;
        XmNx = 160;
        XmNy = 364;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexErrorAngle2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIndexErrorAngle1;
        XmNtopWidget = XmTextField tfIndexErrorAngle1;
        XmNx = 255;
        XmNy = 364;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexErrorAngle3 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIndexErrorAngle2;
        XmNtopWidget = XmTextField tfIndexErrorAngle2;
        XmNx = 350;
        XmNy = 364;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tbIndexList : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("List detector props");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 273;
        XmNrightOffset = 0;
        XmNtopOffset = 238;
        XmNx = 273;
        XmNy = 238;
        XmNwidth = 200;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIndexCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("List detector properties in out" &
 "put");
    };
};

object tbIndexPrompt : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("User chooses solution");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 5;
        XmNy = 0;
        XmNwidth = 200;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIndexCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Specify whether to let user cho" &
 "ose the solution in dtindex");
    };
};

object pbIndexRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run index");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 302;
        XmNy = 442;
        XmNwidth = 152;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Index spots with dtindex to get" &
 " crystal cell and orientation");
        XmNactivateCallback = procedure vIndexCB();
    };
};

object tbIndexKnown : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Use known cell");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 4;
        XmNtopOffset = 17;
        XmNtopWidget = XmLabel lbIndexGrid;
        XmNx = 4;
        XmNy = 286;
        XmNwidth = 200;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIndexCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Specify whether solutions shoul" &
 "d match a known cell");
    };
};

object lbIndexSpacegroup : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Spacegroup:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 35;
        XmNx = 10;
        XmNy = 35;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfIndexSpacegroup : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexSpacegroup;
        XmNtopWidget = XmLabel lbIndexSpacegroup;
        XmNx = 160;
        XmNy = 37;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object lbIndexMaxResid : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Max residual:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIndexSpacegroup;
        XmNx = 10;
        XmNy = 72;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfIndexMaxResid : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "10.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexMaxResid;
        XmNtopWidget = XmLabel lbIndexMaxResid;
        XmNx = 160;
        XmNy = 74;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tbIndexAdvanced : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Show advanced options");
!(BX)   _XmNselectColor = color('Green');
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 277;
        XmNtopOffset = 112;
        XmNx = 277;
        XmNy = 112;
        XmNwidth = 200;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIndexCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Show advanced options");
    };
};

object lbIndexSigma : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("I/sigI cutoff:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbIndexResolution;
        XmNtopWidget = XmTextField tfIndexMaxResid;
        XmNx = 290;
        XmNy = 74;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIndexResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Resolution:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 13;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbIndexAdvanced;
        XmNtopWidget = XmLabel lbIndexSpacegroup;
        XmNx = 290;
        XmNy = 35;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfIndexResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexResolution;
        XmNtopWidget = XmLabel lbIndexResolution;
        XmNx = 440;
        XmNy = 37;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIndexResolution1;
        XmNtopWidget = XmTextField tfIndexResolution1;
        XmNx = 535;
        XmNy = 37;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object tfIndexSigma : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIndexSigma;
        XmNtopWidget = XmLabel lbIndexSigma;
        XmNx = 440;
        XmNy = 76;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIndexTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIndexTextFieldCB();
    };
};

object omIndexMethod : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = -12;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbIndexMethod;
        XmNtopWidget = XmLabel lbIndexMethod;
        XmNx = 148;
        XmNy = 159;
        XmNwidth = 375;
        XmNheight = 37;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("3D Fourier");
!(BX)   cUIom9_pb8 _XmNsensitive = false;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb7 _XmNsensitive = false;
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb6 _XmNsensitive = false;
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb5 _XmNsensitive = false;
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb4 _XmNsensitive = false;
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb3 _XmNsensitive = false;
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Reciprocal space");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("1D FFT (DPS)");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("3D Fourier");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object tbIndexDiffs : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("No diff vecs");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 201;
        XmNleftWidget = XmToggleButton tbIndexList;
        XmNx = 273;
        XmNy = 201;
        XmNwidth = 200;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIndexCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Do NOT use difference vectors");
    };
};

object lbIndexMethod : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Method:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 159;
        XmNx = 10;
        XmNy = 159;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object foIndex : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 756;
        XmNheight = 482;
    };
    controls {
         managed XmLabel lbIndexMethod;
         managed XmToggleButton tbIndexDiffs;
         managed XmForm omIndexMethod;
         managed XmTextField tfIndexSigma;
         managed XmTextField tfIndexResolution2;
         managed XmTextField tfIndexResolution1;
         managed XmLabel lbIndexResolution;
         managed XmLabel lbIndexSigma;
         managed XmToggleButton tbIndexAdvanced;
         managed XmTextField tfIndexMaxResid;
         managed XmLabel lbIndexMaxResid;
         managed XmTextField tfIndexSpacegroup;
         managed XmLabel lbIndexSpacegroup;
         managed XmToggleButton tbIndexKnown;
         managed XmPushButton pbIndexRun;
         managed XmToggleButton tbIndexPrompt;
         managed XmToggleButton tbIndexList;
         managed XmTextField tfIndexErrorAngle3;
         managed XmTextField tfIndexErrorAngle2;
         managed XmTextField tfIndexErrorAngle1;
         managed XmTextField tfIndexErrorLength3;
         managed XmTextField tfIndexErrorLength2;
         managed XmTextField tfIndexErrorLength1;
         managed XmTextField tfIndexGrid;
         managed XmTextField tfIndexMaxCell;
         managed XmTextField tfIndexMaxDiffs;
         managed XmLabel lbIndexErrorAngle;
         managed XmLabel lbIndexErrorLength;
         managed XmSeparator seIndex;
         managed XmLabel lbIndexGrid;
         managed XmLabel lbIndexMaxCell;
         managed XmLabel lbIndexMaxDiffs;
    };
    callbacks {
    };
};

object frIndex : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 2;
        XmNwidth = 762;
        XmNheight = 488;
    };
    controls {
         managed XmForm foIndex;
    };
    callbacks {
    };
};

object lbRefineSigma : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Sigma:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 10;
        XmNtopWidget = XmSeparator seRefine1;
        XmNx = 0;
        XmNy = 269;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbRefineResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Resolution:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbRefineSigma;
        XmNx = 0;
        XmNy = 306;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfRefineSigma : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbRefineSigma;
        XmNtopWidget = XmLabel lbRefineSigma;
        XmNx = 150;
        XmNy = 271;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tfRefineResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbRefineResolution;
        XmNtopWidget = XmLabel lbRefineResolution;
        XmNx = 150;
        XmNy = 308;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tfRefineResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfRefineResolution1;
        XmNtopWidget = XmTextField tfRefineResolution1;
        XmNx = 245;
        XmNy = 308;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tbRefineCrystalAstar : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("a*");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalLengths;
        XmNtopWidget = XmToggleButton tbRefineCrystalLengths;
        XmNx = 255;
        XmNy = 0;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell length a*");
    };
};

object lbRefineCrystal : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Crystal:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNresizable = false;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tbRefineCrystalBstar : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("b*");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalAstar;
        XmNtopWidget = XmToggleButton tbRefineCrystalAstar;
        XmNx = 360;
        XmNy = 0;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell length b*");
    };
};

object tbRefineCrystalCstar : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("c*");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalBstar;
        XmNtopWidget = XmToggleButton tbRefineCrystalBstar;
        XmNx = 465;
        XmNy = 0;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell length c*");
    };
};

object tbRefineCrystalAlphastar : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("alpha*");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalAstar;
        XmNtopWidget = XmToggleButton tbRefineCrystalAstar;
        XmNx = 255;
        XmNy = 35;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell angle alpha*");
    };
};

object tbRefineCrystalBetastar : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("beta*");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalAlphastar;
        XmNtopWidget = XmToggleButton tbRefineCrystalAlphastar;
        XmNx = 360;
        XmNy = 35;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell angle beta*");
    };
};

object tbRefineCrystalGammastar : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("gamma*");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalBetastar;
        XmNtopWidget = XmToggleButton tbRefineCrystalBetastar;
        XmNx = 465;
        XmNy = 35;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell angle gamma*");
    };
};

object tbRefineCrystalRot3 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot3");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalRot2;
        XmNtopWidget = XmToggleButton tbRefineCrystalRot2;
        XmNx = 465;
        XmNy = 70;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix crystal rotation 3");
    };
};

object tbRefineCrystalRot1 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot1");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalAlphastar;
        XmNtopWidget = XmToggleButton tbRefineCrystalAlphastar;
        XmNx = 255;
        XmNy = 70;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix crystal rotation 1");
    };
};

object tbRefineCrystalRot2 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot2");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalRot1;
        XmNtopWidget = XmToggleButton tbRefineCrystalRot1;
        XmNx = 360;
        XmNy = 70;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix crystal rotation 2");
    };
};

object tbRefineCrystalLengths : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Lengths");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineCrystal;
        XmNtopWidget = XmLabel lbRefineCrystal;
        XmNx = 150;
        XmNy = 0;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell lengths a*, b*, " &
 "c*");
    };
};

object tbRefineCrystalAngles : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Angles");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalLengths;
        XmNtopWidget = XmToggleButton tbRefineCrystalLengths;
        XmNx = 150;
        XmNy = 35;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix cell angles alpha*, b" &
 "eta*, gamma*");
    };
};

object tbRefineCrystalRots : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("All rots");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalAngles;
        XmNtopWidget = XmToggleButton tbRefineCrystalAngles;
        XmNx = 150;
        XmNy = 70;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix crystal rotations 1,2" &
 ",3");
    };
};

object lbRefineDet : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Detector:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmSeparator seRefine2;
        XmNx = 0;
        XmNy = 147;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbRefineSource : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Source:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmSeparator seRefine3;
        XmNx = 0;
        XmNy = 224;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tbRefineDetTrans1 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("X / T1");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineDetTrans;
        XmNtopWidget = XmToggleButton tbRefineDetTrans;
        XmNx = 255;
        XmNy = 147;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix detector translation " &
 "1");
    };
};

object tbRefineDetTrans2 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Y / T2");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineDetTrans1;
        XmNtopWidget = XmToggleButton tbRefineDetTrans1;
        XmNx = 360;
        XmNy = 147;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix detector translation " &
 "2");
    };
};

object tbRefineDetTrans3 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Dist/T3");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineDetTrans2;
        XmNtopWidget = XmToggleButton tbRefineDetTrans2;
        XmNx = 465;
        XmNy = 147;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix crystal to detector d" &
 "istance");
    };
};

object tbRefineDetRot1 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot1");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineDetTrans1;
        XmNtopWidget = XmToggleButton tbRefineDetTrans1;
        XmNx = 255;
        XmNy = 182;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix detector rotation aro" &
 "und source");
    };
};

object tbRefineDetRot2 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Swing/Rot2");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineDetRot1;
        XmNtopWidget = XmToggleButton tbRefineDetRot1;
        XmNx = 360;
        XmNy = 182;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix detector swing or the" &
 "ta angle");
    };
};

object tbRefineDetRot3 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot3");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineDetRot2;
        XmNtopWidget = XmToggleButton tbRefineDetRot2;
        XmNx = 465;
        XmNy = 182;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix detector rotation 3");
    };
};

object tbRefineDetTrans : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("All trans");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineDet;
        XmNtopWidget = XmLabel lbRefineDet;
        XmNx = 150;
        XmNy = 147;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix all detector translat" &
 "ions");
    };
};

object tbRefineDetRots : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("All rots");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineDetTrans;
        XmNtopWidget = XmToggleButton tbRefineDetTrans;
        XmNx = 150;
        XmNy = 182;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix all detector rotation" &
 "s");
    };
};

object tbRefineSourceRot1 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot1");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 105;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineSource;
        XmNtopWidget = XmLabel lbRefineSource;
        XmNx = 255;
        XmNy = 224;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix source direction 1");
    };
};

object tbRefineSourceRot2 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot2");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineSourceRot1;
        XmNtopWidget = XmToggleButton tbRefineSourceRot1;
        XmNx = 360;
        XmNy = 224;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix source direction 2");
    };
};

object tbRefineSourceWavelength : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Wavelength");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineSourceRot2;
        XmNtopWidget = XmToggleButton tbRefineSourceRot2;
        XmNx = 465;
        XmNy = 224;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix source wavelength");
    };
};

object seRefine1 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmLabel lbRefineSource;
        XmNx = 0;
        XmNy = 259;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object lbRefineReject : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rej limits:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbRefineResolution;
        XmNx = 0;
        XmNy = 343;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbRefineRelWeight : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rel weight:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmTextField tfRefineResolution2;
        XmNtopWidget = XmTextField tfRefineResolution2;
        XmNx = 340;
        XmNy = 310;
        XmNwidth = 125;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbRefineCycles : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Cycles:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineRelWeight;
        XmNtopWidget = XmLabel lbRefineSigma;
        XmNx = 340;
        XmNy = 269;
        XmNwidth = 125;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfRefineReject1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbRefineReject;
        XmNtopWidget = XmLabel lbRefineReject;
        XmNx = 150;
        XmNy = 345;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tfRefineReject2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfRefineReject1;
        XmNtopWidget = XmTextField tfRefineReject1;
        XmNx = 245;
        XmNy = 345;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tfRefineReject3 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfRefineReject2;
        XmNtopWidget = XmTextField tfRefineReject2;
        XmNx = 340;
        XmNy = 345;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tfRefineCycles : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 1;
        XmNleftWidget = XmLabel lbRefineCycles;
        XmNtopWidget = XmLabel lbRefineCycles;
        XmNx = 465;
        XmNy = 270;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tfRefineRelWeight : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineRelWeight;
        XmNtopWidget = XmLabel lbRefineRelWeight;
        XmNx = 465;
        XmNy = 310;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineTextFieldCB();
    };
};

object tbRefineCrystalAll : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("All crystal");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalCell;
        XmNtopWidget = XmToggleButton tbRefineCrystalRots;
        XmNx = 45;
        XmNy = 105;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix all 6 cell parameters" &
 ", 3 crystal rotations and mosaicity");
    };
};

object tbRefineDetAll : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("All detector");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNrightWidget = XmToggleButton tbRefineDetRots;
        XmNtopWidget = XmToggleButton tbRefineDetTrans;
        XmNx = 45;
        XmNy = 182;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix all 6 detector positi" &
 "on parameters");
    };
};

object tbRefineCrystalCell : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("All cell");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNrightWidget = XmToggleButton tbRefineCrystalAngles;
        XmNtopWidget = XmToggleButton tbRefineCrystalAngles;
        XmNx = 45;
        XmNy = 35;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix all 6 cell parameters" &
 "");
    };
};

object tbRefineCrystalMosaicity : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Mosaicity");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineCrystalRot1;
        XmNtopWidget = XmToggleButton tbRefineCrystalRot1;
        XmNx = 255;
        XmNy = 105;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix crystal mosaicity");
    };
};

object seRefine2 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmToggleButton tbRefineCrystalMosaicity;
        XmNx = 0;
        XmNy = 140;
        XmNwidth = 756;
        XmNheight = 7;
    };
    controls {
    };
    callbacks {
    };
};

object seRefine3 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmToggleButton tbRefineDetAll;
        XmNx = 0;
        XmNy = 217;
        XmNwidth = 756;
        XmNheight = 7;
    };
    controls {
    };
    callbacks {
    };
};

object tbRefineSourceRots : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("All rots");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineSource;
        XmNtopWidget = XmLabel lbRefineSource;
        XmNx = 150;
        XmNy = 224;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix 2 source rotations");
    };
};

object tbRefineTestMosaicity : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Test mosaicity");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbRefineSourceWavelength;
        XmNtopWidget = XmTextField tfRefineReject3;
        XmNx = 465;
        XmNy = 345;
        XmNwidth = 174;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Test crystal mosaicity values");
    };
};

object foRefine : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 4;
        XmNtopWidget = XmSeparator seRefine4;
        XmNx = 0;
        XmNy = 44;
        XmNwidth = 756;
        XmNheight = 390;
    };
    controls {
         managed XmToggleButton tbRefineTestMosaicity;
         managed XmToggleButton tbRefineSourceRots;
         managed XmSeparator seRefine3;
         managed XmSeparator seRefine2;
         managed XmToggleButton tbRefineCrystalMosaicity;
         managed XmToggleButton tbRefineCrystalCell;
         managed XmToggleButton tbRefineDetAll;
         managed XmToggleButton tbRefineCrystalAll;
         managed XmTextField tfRefineRelWeight;
         managed XmTextField tfRefineCycles;
         managed XmTextField tfRefineReject3;
         managed XmTextField tfRefineReject2;
         managed XmTextField tfRefineReject1;
         managed XmLabel lbRefineCycles;
         managed XmLabel lbRefineRelWeight;
         managed XmLabel lbRefineReject;
         managed XmSeparator seRefine1;
         managed XmToggleButton tbRefineSourceWavelength;
         managed XmToggleButton tbRefineSourceRot2;
         managed XmToggleButton tbRefineSourceRot1;
         managed XmToggleButton tbRefineDetRots;
         managed XmToggleButton tbRefineDetTrans;
         managed XmToggleButton tbRefineDetRot3;
         managed XmToggleButton tbRefineDetRot2;
         managed XmToggleButton tbRefineDetRot1;
         managed XmToggleButton tbRefineDetTrans3;
         managed XmToggleButton tbRefineDetTrans2;
         managed XmToggleButton tbRefineDetTrans1;
         managed XmLabel lbRefineSource;
         managed XmLabel lbRefineDet;
         managed XmToggleButton tbRefineCrystalRots;
         managed XmToggleButton tbRefineCrystalAngles;
         managed XmToggleButton tbRefineCrystalLengths;
         managed XmToggleButton tbRefineCrystalRot2;
         managed XmToggleButton tbRefineCrystalRot1;
         managed XmToggleButton tbRefineCrystalRot3;
         managed XmToggleButton tbRefineCrystalGammastar;
         managed XmToggleButton tbRefineCrystalBetastar;
         managed XmToggleButton tbRefineCrystalAlphastar;
         managed XmToggleButton tbRefineCrystalCstar;
         managed XmToggleButton tbRefineCrystalBstar;
         managed XmLabel lbRefineCrystal;
         managed XmToggleButton tbRefineCrystalAstar;
         managed XmTextField tfRefineResolution2;
         managed XmTextField tfRefineResolution1;
         managed XmTextField tfRefineSigma;
         managed XmLabel lbRefineResolution;
         managed XmLabel lbRefineSigma;
    };
    callbacks {
    };
};

object lbRefineMacros : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Macros:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9RefineMacros : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineMacros;
        XmNx = 100;
        XmNy = 0;
        XmNwidth = 250;
        XmNheight = 40;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("Interactive dialog");
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("Custom 8");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("Custom 7");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("Custom 6");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("Custom 5");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Custom 4");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Low reso, then all reso");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Crystal, then all detector");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Detector, then all crystal");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Interactive dialog");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object tbRefineDisplay : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("Display");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 6;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmForm cUIom9RefineRefln;
        XmNtopWidget = XmToggleButton tbRefinePrompt;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -display option in dtrefine" &
 "");
    };
};

object seRefine : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 428;
        XmNx = 0;
        XmNy = 428;
        XmNwidth = 756;
        XmNheight = 20;
    };
    controls {
    };
    callbacks {
    };
};

object pbRefineRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run refine");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNresizable = false;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNrightOffset = 0;
        XmNx = 302;
        XmNy = 444;
        XmNwidth = 152;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Look for solutions that match a" &
 " known spacegroup");
        XmNactivateCallback = procedure vRefineCB();
    };
};

object seRefine4 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 40;
        XmNx = 0;
        XmNy = 40;
        XmNwidth = 756;
        XmNheight = 7;
    };
    controls {
    };
    callbacks {
    };
};

object txRefineMacro : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vRefineCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vRefineCB();
    };
};

object swRefineMacro : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 8;
        XmNbottomWidget = XmForm foRefineMacro;
        XmNleftOffset = 0;
        XmNtopOffset = 3;
        XmNtopWidget = XmSeparator seRefine4;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 751;
        XmNheight = 211;
    };
    controls {
         managed XmText txRefineMacro;
    };
    callbacks {
    };
};

object lbRefineMacro : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Options: -reso, -sigma, -rej, -d" &
 "isplay, -prompt, -cycles, -weight, -verbose,-go", separate=true) &
 compound_string("Items to refine (precede by +) or fix (precede by -): All,", separate=true) &
 compound_string("CrysAll, CrysCell, CrysLengths, CrysAstar, CrysBstar, CrysCstar, CrysAngles,", separate=true) &
 compound_string("CrysAlps, CrysBets, CrysGams, CrysRot, CrysRot1, CrysRot2, CrysRot3,", separate=true) &
 compound_string("CrysMosaicity,", separate=true) &
 compound_string("DetAll, DetTrans, DetTrans1, DetTrans2, DetTrans3, ", separate=true) &
 compound_string("DetRot, DetRot1, DetRot2, DetRot3,", separate=true) &
 compound_string("SourceRot, SourceRot1, SourceRot2, SourceWave");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 743;
        XmNheight = 156;
    };
    controls {
    };
    callbacks {
    };
};

object foRefineMacro : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = -2;
        XmNbottomWidget = XmSeparator seRefine;
        XmNleftOffset = 3;
        XmNrightOffset = 0;
        XmNx = 3;
        XmNy = 269;
        XmNwidth = 753;
        XmNheight = 161;
    };
    controls {
         managed XmLabel lbRefineMacro;
    };
    callbacks {
    };
};

object tbRefinePrompt : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Prompt to save");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 616;
        XmNy = 0;
        XmNwidth = 140;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vRefineCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -prompt option in dtrefine");
    };
};

object cUIom9RefineRefln : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = -5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbRefineRefln;
        XmNrightWidget = XmToggleButton tbRefinePrompt;
        XmNx = 414;
        XmNy = 0;
        XmNwidth = 202;
        XmNheight = 40;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("Reflnlist");
!(BX)   cUIom9_pb8 _XmNsensitive = false;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb7 _XmNsensitive = false;
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb6 _XmNsensitive = false;
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb5 _XmNsensitive = false;
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb4 _XmNsensitive = false;
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb3 _XmNsensitive = false;
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb2 _XmNsensitive = false;
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Image sequence");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Reflnlist");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbRefineRefln : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Reflns:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 9;
        XmNrightOffset = 0;
        XmNtopOffset = 1;
        XmNleftWidget = XmForm cUIom9RefineMacros;
        XmNx = 359;
        XmNy = 1;
        XmNwidth = 60;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object foRefine1 : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 756;
        XmNheight = 484;
    };
    controls {
         managed XmLabel lbRefineRefln;
         managed XmForm cUIom9RefineRefln;
         managed XmToggleButton tbRefinePrompt;
         unmanaged XmForm foRefineMacro;
         unmanaged XmScrolledWindow swRefineMacro;
         managed XmSeparator seRefine4;
         managed XmPushButton pbRefineRun;
         managed XmSeparator seRefine;
         unmanaged XmToggleButton tbRefineDisplay;
         managed XmForm cUIom9RefineMacros;
         managed XmLabel lbRefineMacros;
         managed XmForm foRefine;
    };
    callbacks {
    };
};

object frRefine : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 762;
        XmNheight = 490;
    };
    controls {
         managed XmForm foRefine1;
    };
    callbacks {
    };
};

object sePredict : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbPredictRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 430;
        XmNwidth = 591;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object tbPredictDisplay : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("Display");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 360;
        XmNrightOffset = 0;
        XmNtopOffset = 10;
        XmNx = 360;
        XmNy = 10;
        XmNwidth = 105;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vPredictCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -display option in dtpredic" &
 "t");
    };
};

object lbPredictRot : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rot range:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 15;
        XmNtopWidget = XmLabel lbPredictSeq;
        XmNx = 0;
        XmNy = 55;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfPredictRotStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbPredictRot;
        XmNtopWidget = XmLabel lbPredictRot;
        XmNx = 150;
        XmNy = 57;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vPredictTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vPredictTextFieldCB();
    };
};

object tfPredictRotEnd : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfPredictRotStart;
        XmNtopWidget = XmTextField tfPredictRotStart;
        XmNx = 245;
        XmNy = 57;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vPredictTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vPredictTextFieldCB();
    };
};

object tbPredictNonunf : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("No bad pixels");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 35;
        XmNtopOffset = 10;
        XmNtopWidget = XmToggleButton tbPredictList;
        XmNx = 35;
        XmNy = 270;
        XmNwidth = 200;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vPredictCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -nonunf option in dtpredict" &
 "");
    };
};

object tbPredictList : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("List props");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 34;
        XmNrightOffset = 0;
        XmNtopOffset = 225;
        XmNx = 34;
        XmNy = 225;
        XmNwidth = 200;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vPredictCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -list option in dtpredict");
    };
};

object lbPredictSeq : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Image sequence:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNx = 0;
        XmNy = 5;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfPredictSeqEnd : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfPredictSeqStart;
        XmNtopWidget = XmTextField tfPredictSeqStart;
        XmNx = 245;
        XmNy = 7;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vPredictTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vPredictTextFieldCB();
    };
};

object tfPredictSeqStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbPredictSeq;
        XmNtopWidget = XmLabel lbPredictSeq;
        XmNx = 150;
        XmNy = 7;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vPredictTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vPredictTextFieldCB();
    };
};

object tfPredictResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbPredictResolution;
        XmNtopWidget = XmLabel lbPredictResolution;
        XmNx = 150;
        XmNy = 107;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vPredictTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vPredictTextFieldCB();
    };
};

object tfPredictResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfPredictResolution1;
        XmNtopWidget = XmTextField tfPredictResolution1;
        XmNx = 245;
        XmNy = 107;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vPredictTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vPredictTextFieldCB();
    };
};

object lbPredictResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Resolution:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 15;
        XmNtopWidget = XmLabel lbPredictRot;
        XmNx = 0;
        XmNy = 105;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object pbPredictRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run predict");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 236;
        XmNy = 445;
        XmNwidth = 119;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Predict reflections");
        XmNactivateCallback = procedure vPredictCB();
    };
};

object lbPredictMosaicity : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Mosaicity:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 15;
        XmNtopWidget = XmLabel lbPredictResolution;
        XmNx = 0;
        XmNy = 155;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfPredictMosaicity : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.3";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 1;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbPredictMosaicity;
        XmNtopWidget = XmLabel lbPredictMosaicity;
        XmNx = 151;
        XmNy = 155;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vPredictTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vPredictTextFieldCB();
    };
};

object foPredict : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 591;
        XmNheight = 485;
    };
    controls {
         managed XmTextField tfPredictMosaicity;
         managed XmLabel lbPredictMosaicity;
         managed XmPushButton pbPredictRun;
         managed XmLabel lbPredictResolution;
         managed XmTextField tfPredictResolution2;
         managed XmTextField tfPredictResolution1;
         managed XmTextField tfPredictSeqStart;
         managed XmTextField tfPredictSeqEnd;
         managed XmLabel lbPredictSeq;
         managed XmToggleButton tbPredictList;
         managed XmToggleButton tbPredictNonunf;
         managed XmTextField tfPredictRotEnd;
         managed XmTextField tfPredictRotStart;
         managed XmLabel lbPredictRot;
         managed XmToggleButton tbPredictDisplay;
         managed XmSeparator sePredict;
    };
    callbacks {
    };
};

object frPredict : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 597;
        XmNheight = 491;
    };
    controls {
         managed XmForm foPredict;
    };
    callbacks {
    };
};

object lbOrient : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Calculate a new crystal goniomet" &
!(BX) "er position such that", separate=true) &
!(BX) compound_string("Crystal vector 1 is parallel to Lab vector 1 and", separate=true) &
!(BX) compound_string("Crystal vector 2 is parallel to Lab vector 2");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 620;
        XmNheight = 85;
    };
    controls {
    };
    callbacks {
    };
};

object seOrient : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbOrientRun;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 430;
        XmNwidth = 589;
        XmNheight = 5;
    };
    controls {
    };
    callbacks {
    };
};

object pbOrientRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run orient");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNrightOffset = 0;
        XmNx = 274;
        XmNy = 440;
        XmNwidth = 137;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Orient the crystal in specific " &
 "ways");
        XmNactivateCallback = procedure vOrientCB();
    };
};

object cUIomOrientCrystal1 : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 90;
        XmNleftWidget = XmLabel lbOrientCrystal1;
        XmNx = 130;
        XmNy = 90;
        XmNwidth = 110;
        XmNheight = 66;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("(0 1 1)");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("(1 0 1)");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("(1 1 0)");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("c");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("b");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("a");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("c*");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("b*");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("a*");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbOrientCrystal1 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Crystal vector 1:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 90;
        XmNx = 0;
        XmNy = 90;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbOrientCrystal2 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Crystal vector 2:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 145;
        XmNx = 0;
        XmNy = 145;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbOrientLab1 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Lab vector 1:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbOrientParallel1;
        XmNtopWidget = XmLabel lbOrientCrystal1;
        XmNx = 340;
        XmNy = 90;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbOrientLab2 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Lab vector 2:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbOrientParallel2;
        XmNtopWidget = XmLabel lbOrientParallel2;
        XmNx = 340;
        XmNy = 145;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object cUIomOrientCrystal2 : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbOrientCrystal2;
        XmNtopWidget = XmLabel lbOrientCrystal2;
        XmNx = 130;
        XmNy = 145;
        XmNwidth = 110;
        XmNheight = 66;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("(0 1 1)");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("(1 0 1)");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("(1 1 0)");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("c");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("b");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("a");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("c*");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("b*");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("a*");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIomOrientLab1 : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbOrientLab1;
        XmNtopWidget = XmForm cUIomOrientCrystal1;
        XmNx = 470;
        XmNy = 90;
        XmNwidth = 147;
        XmNheight = 66;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("-Z");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("-X");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("-Source");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("-Omega");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Z");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Y");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("X");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Source");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Omega");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIomOrientLab2 : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbOrientLab2;
        XmNtopWidget = XmLabel lbOrientLab2;
        XmNx = 470;
        XmNy = 145;
        XmNwidth = 147;
        XmNheight = 66;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("-Z");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("-X");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("-Source");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("-Omega");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Z");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Y");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("X");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Source");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Omega");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbOrientParallel1 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("parallel to");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmForm cUIomOrientCrystal1;
        XmNtopWidget = XmForm cUIomOrientCrystal1;
        XmNx = 240;
        XmNy = 90;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbOrientParallel2 : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("parallel to");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmForm cUIomOrientCrystal2;
        XmNtopWidget = XmForm cUIomOrientCrystal2;
        XmNx = 240;
        XmNy = 145;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbOrientRot : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rotate crystal by");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 255;
        XmNx = 0;
        XmNy = 255;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object cUIomOrientLab3 : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbOrientRotDegrees;
        XmNtopWidget = XmLabel lbOrientRotDegrees;
        XmNx = 365;
        XmNy = 255;
        XmNwidth = 147;
        XmNheight = 66;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("-Z");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("-X");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("-Source");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("-Omega");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Z");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Y");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("X");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Source");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Omega");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object tfOrientRot : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbOrientRot;
        XmNtopWidget = XmLabel lbOrientRot;
        XmNx = 140;
        XmNy = 255;
        XmNwidth = 109;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vOrientTextFieldCB();
       XmNlosingFocusCallback = procedures {
                 vOrientTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vOrientTextFieldCB();
    };
};

object lbOrientRotDegrees : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_CENTER;
!(BX)   _XmNlabelString = compound_string("degrees around");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 6;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfOrientRot;
        XmNtopWidget = XmLabel lbOrientRot;
        XmNx = 255;
        XmNy = 255;
        XmNwidth = 110;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbOrient1 : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("-OR-");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 5;
        XmNtopOffset = 205;
        XmNx = 5;
        XmNy = 205;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object foOrient : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 685;
        XmNheight = 480;
    };
    controls {
         managed XmLabel lbOrient1;
         managed XmLabel lbOrientRotDegrees;
         managed XmTextField tfOrientRot;
         managed XmForm cUIomOrientLab3;
         managed XmLabel lbOrientRot;
         managed XmLabel lbOrientParallel2;
         managed XmLabel lbOrientParallel1;
         managed XmForm cUIomOrientLab2;
         managed XmForm cUIomOrientLab1;
         managed XmForm cUIomOrientCrystal2;
         managed XmLabel lbOrientLab2;
         managed XmLabel lbOrientLab1;
         managed XmLabel lbOrientCrystal2;
         managed XmLabel lbOrientCrystal1;
         managed XmForm cUIomOrientCrystal1;
         managed XmPushButton pbOrientRun;
         managed XmSeparator seOrient;
         managed XmLabel lbOrient;
    };
    callbacks {
    };
};

object frOrient : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 691;
        XmNheight = 486;
    };
    controls {
         managed XmForm foOrient;
    };
    callbacks {
    };
};

object lbIntegrateSeq : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Image sequence:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 5;
        XmNx = 10;
        XmNy = 5;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegrateWait : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Wait limit:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 5;
        XmNtopWidget = XmSeparator seIntegrate1;
        XmNx = 10;
        XmNy = 341;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegrateBatchPrefix : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Batch prefix:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIntegrateBatchNum;
        XmNx = 10;
        XmNy = 264;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegrateBatchNum : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Images per batch:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIntegrateProfSize;
        XmNx = 10;
        XmNy = 227;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegrateWindow : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Window:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIntegrateResolution;
        XmNx = 10;
        XmNy = 79;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegratePadding : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Padding:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIntegrateWindow;
        XmNx = 10;
        XmNy = 116;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object seIntegrate1 : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfIntegrateBatchPrefix;
        XmNx = 0;
        XmNy = 306;
        XmNwidth = 756;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegrateResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Resolution range:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 42;
        XmNx = 10;
        XmNy = 42;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegrateProfSize : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Profile size:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIntegrateMinPeakRadius;
        XmNx = 10;
        XmNy = 190;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbIntegrateDump : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Dump interval:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIntegrateWait;
        XmNx = 10;
        XmNy = 378;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfIntegrateSeqStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNleftWidget = XmTextField tfIntegrateResolution1;
        XmNx = 180;
        XmNy = 5;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateSeqEnd : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIntegrateSeqStart;
        XmNtopWidget = XmTextField tfIntegrateSeqStart;
        XmNx = 275;
        XmNy = 5;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateWait : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateWait;
        XmNtopWidget = XmLabel lbIntegrateWait;
        XmNx = 180;
        XmNy = 343;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateBatchPrefix : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateBatchPrefix;
        XmNtopWidget = XmLabel lbIntegrateBatchPrefix;
        XmNx = 180;
        XmNy = 266;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnpostHelpCB();
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateBatchNum : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateBatchNum;
        XmNtopWidget = XmLabel lbIntegrateBatchNum;
        XmNx = 180;
        XmNy = 229;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateWindow1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateWindow;
        XmNtopWidget = XmLabel lbIntegrateWindow;
        XmNx = 180;
        XmNy = 81;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateWindow2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIntegrateWindow1;
        XmNtopWidget = XmTextField tfIntegrateWindow1;
        XmNx = 275;
        XmNy = 81;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegratePadding : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegratePadding;
        XmNtopWidget = XmLabel lbIntegratePadding;
        XmNx = 180;
        XmNy = 118;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tbIntegrateSpecial4 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("SCAN_TEMPLATE");
        XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbIntegrateSpecial3;
        XmNtopWidget = XmToggleButton tbIntegrateSpecial3;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 95;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIntegrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select scan in the input header" &
 "");
    };
};

object tbIntegrateSpecial3 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("c90p.???");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbIntegrateSpecial2;
        XmNtopWidget = XmToggleButton tbIntegrateSpecial2;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 95;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIntegrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select chi=90 rotate around phi" &
 " scan");
    };
};

object tbIntegrateSpecial2 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("c90o.???");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbIntegrateSpecial1;
        XmNtopWidget = XmToggleButton tbIntegrateSpecial1;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 95;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIntegrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select the chi=90 rotate around" &
 " omega scan");
    };
};

object tbIntegrateSpecial1 : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("c00p.???");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNleftWidget = XmTextField tfIntegrateResolution1;
        XmNx = 0;
        XmNy = 5;
        XmNwidth = 95;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIntegrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select the chi=0 rotate around " &
 "phi scan");
    };
};

object tfIntegrateResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateResolution;
        XmNtopWidget = XmLabel lbIntegrateResolution;
        XmNx = 180;
        XmNy = 44;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIntegrateResolution1;
        XmNtopWidget = XmTextField tfIntegrateResolution1;
        XmNx = 275;
        XmNy = 44;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateProfSize1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateProfSize;
        XmNtopWidget = XmLabel lbIntegrateProfSize;
        XmNx = 180;
        XmNy = 192;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateProfSize2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIntegrateProfSize1;
        XmNtopWidget = XmTextField tfIntegrateProfSize1;
        XmNx = 275;
        XmNy = 192;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tfIntegrateDump : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateDump;
        XmNtopWidget = XmLabel lbIntegrateDump;
        XmNx = 180;
        XmNy = 380;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tbIntegrateDisplay : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("Display");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 8;
        XmNrightOffset = 0;
        XmNtopOffset = 225;
        XmNleftWidget = XmTextField tfIntegrateProfSize2;
        XmNx = 373;
        XmNy = 225;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIntegrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -display option in dtintegr" &
 "ate");
    };
};

object pbIntegrateRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run integrate");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 302;
        XmNy = 444;
        XmNwidth = 152;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Integrate reflections in a scan" &
 " of images");
        XmNactivateCallback = procedure vIntegrateCB();
    };
};

object seIntegrate : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbIntegrateRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 429;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9IntegrateSpecial : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = -5;
        XmNrightOffset = 7;
        XmNtopOffset = 4;
        XmNrightWidget = XmTextField tfIntegrateResolution1;
        XmNx = -5;
        XmNy = 4;
        XmNwidth = 178;
        XmNheight = 37;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("Image sequence:");
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Special scans:");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Image sequence:");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbIntegrateMinPeakRadius : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Minimum peak radius:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbIntegratePadding;
        XmNx = 10;
        XmNy = 153;
        XmNwidth = 170;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfIntegrateMinPeakRadius : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "4.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbIntegrateMinPeakRadius;
        XmNtopWidget = XmLabel lbIntegrateMinPeakRadius;
        XmNx = 180;
        XmNy = 155;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vIntegrateTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vIntegrateTextFieldCB();
    };
};

object tbIntegrateNopurge : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNsensitive = true;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("No purge");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfIntegrateProfSize2;
        XmNtopWidget = XmTextField tfIntegrateBatchPrefix;
        XmNx = 375;
        XmNy = 266;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vIntegrateCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -nopurge option in dtintegr" &
 "ate to keep scratch files");
    };
};

object cUIom9IntegratePrerefine : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNtopOffset = -2;
        XmNleftWidget = XmLabel lbIntegratePrerefine;
        XmNtopWidget = XmLabel lbIntegratePrerefine;
        XmNx = 446;
        XmNy = 114;
        XmNwidth = 555;
        XmNheight = 37;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("1st of 1st 3 batches");
!(BX)   cUIom9_pb8 _XmNsensitive = false;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb7 _XmNsensitive = false;
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb6 _XmNsensitive = false;
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb5 _XmNsensitive = false;
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb4 _XmNsensitive = false;
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("1st of 1st 3 batches");
!(BX)   cUIom9_pb3 _XmNsensitive = false;
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("First, Last, & Middle");
!(BX)   cUIom9_pb2 _XmNsensitive = false;
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("First & Last");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("First image");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("None");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbIntegratePrerefine : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Prerefine:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 369;
        XmNtopOffset = 0;
        XmNtopWidget = XmLabel lbIntegratePadding;
        XmNx = 369;
        XmNy = 116;
        XmNwidth = 75;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object foIntegrate : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 756;
        XmNheight = 484;
    };
    controls {
         managed XmLabel lbIntegratePrerefine;
         managed XmForm cUIom9IntegratePrerefine;
         managed XmToggleButton tbIntegrateNopurge;
         managed XmTextField tfIntegrateMinPeakRadius;
         managed XmLabel lbIntegrateMinPeakRadius;
         managed XmForm cUIom9IntegrateSpecial;
         managed XmSeparator seIntegrate;
         managed XmPushButton pbIntegrateRun;
         managed XmToggleButton tbIntegrateDisplay;
         managed XmTextField tfIntegrateDump;
         managed XmTextField tfIntegrateProfSize2;
         managed XmTextField tfIntegrateProfSize1;
         managed XmTextField tfIntegrateResolution2;
         managed XmTextField tfIntegrateResolution1;
         unmanaged XmToggleButton tbIntegrateSpecial1;
         unmanaged XmToggleButton tbIntegrateSpecial2;
         unmanaged XmToggleButton tbIntegrateSpecial3;
         unmanaged XmToggleButton tbIntegrateSpecial4;
         managed XmTextField tfIntegratePadding;
         managed XmTextField tfIntegrateWindow2;
         managed XmTextField tfIntegrateWindow1;
         managed XmTextField tfIntegrateBatchNum;
         managed XmTextField tfIntegrateBatchPrefix;
         managed XmTextField tfIntegrateWait;
         managed XmTextField tfIntegrateSeqEnd;
         managed XmTextField tfIntegrateSeqStart;
         managed XmLabel lbIntegrateDump;
         managed XmLabel lbIntegrateProfSize;
         managed XmLabel lbIntegrateResolution;
         managed XmSeparator seIntegrate1;
         managed XmLabel lbIntegratePadding;
         managed XmLabel lbIntegrateWindow;
         managed XmLabel lbIntegrateBatchNum;
         managed XmLabel lbIntegrateBatchPrefix;
         managed XmLabel lbIntegrateWait;
         unmanaged XmLabel lbIntegrateSeq;
    };
    callbacks {
    };
};

object frIntegrate : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 762;
        XmNheight = 490;
    };
    controls {
         managed XmForm foIntegrate;
    };
    callbacks {
    };
};

object seMerge : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbMergeRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 425;
        XmNwidth = 685;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object pbMergeRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run merge");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 274;
        XmNy = 440;
        XmNwidth = 137;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Merge one or more reflnlists wi" &
 "th dtreflnmerge");
        XmNactivateCallback = procedure vMergeCB();
    };
};

object lbMergeMergeFile : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Merge file:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 360;
        XmNx = 0;
        XmNy = 360;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfMergeMergeFile : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "dtmerge.ref";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbMergeMergeFile;
        XmNtopWidget = XmLabel lbMergeMergeFile;
        XmNx = 150;
        XmNy = 362;
        XmNwidth = 330;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vMergeTextFieldCB();
    };
};

object pbMergeMergeFile : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfMergeMergeFile;
        XmNtopWidget = XmTextField tfMergeMergeFile;
        XmNx = 480;
        XmNy = 362;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select output reflnlist file fo" &
 "r dtreflnmerge");
        XmNactivateCallback = procedure vMergeCB();
    };
};

object foMerge : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 685;
        XmNheight = 480;
    };
    controls {
         managed XmPushButton pbMergeMergeFile;
         managed XmTextField tfMergeMergeFile;
         managed XmLabel lbMergeMergeFile;
         managed XmPushButton pbMergeRun;
         managed XmSeparator seMerge;
    };
    callbacks {
    };
};

object frMerge : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 691;
        XmNheight = 486;
    };
    controls {
         managed XmForm foMerge;
    };
    callbacks {
    };
};

object seScale : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbScaleRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 430;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object lbScaleErrorMul : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Weight multiplier:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmLabel lbScaleReject;
        XmNx = 0;
        XmNy = 80;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleErrorMul : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleErrorMul;
        XmNtopWidget = XmLabel lbScaleErrorMul;
        XmNx = 150;
        XmNy = 82;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object tbScaleFixB : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Refine", separate=true) &
!(BX) compound_string("B-factors");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfScaleFixedB;
        XmNtopWidget = XmTextField tfScaleFixedB;
        XmNx = 525;
        XmNy = 162;
        XmNwidth = 145;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScaleCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Fix/unfix temperature factor re" &
 "finement");
    };
};

object tbScaleAnom : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Output anomalous", separate=true) &
!(BX) compound_string("I+,I- on SAME line");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 20;
        XmNleftWidget = XmLabel lbScaleResolution;
        XmNtopWidget = XmLabel lbScaleResolution;
        XmNx = 0;
        XmNy = 255;
        XmNwidth = 145;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScaleCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Output I,sigI and I+,sigI+, I-," &
 "sigI-anomalous info on SAME line");
    };
};

object lbScaleReject : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Rejection sigma:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmLabel lbScaleSigma;
        XmNx = 0;
        XmNy = 40;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleReject : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleReject;
        XmNtopWidget = XmLabel lbScaleReject;
        XmNx = 150;
        XmNy = 42;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object tfScaleErrorAdd : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleErrorAdd;
        XmNtopWidget = XmLabel lbScaleErrorAdd;
        XmNx = 150;
        XmNy = 122;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object lbScaleErrorAdd : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Weight addend:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmLabel lbScaleErrorMul;
        XmNx = 0;
        XmNy = 120;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object pbScaleRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run scale");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 302;
        XmNy = 445;
        XmNwidth = 152;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Scale and average a reflnlist w" &
 "ith dtscalemerge");
        XmNactivateCallback = procedure vScaleCB();
    };
};

object lbScaleSigma : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Exclude sigma:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleSigma : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleSigma;
        XmNtopWidget = XmLabel lbScaleSigma;
        XmNx = 150;
        XmNy = 2;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object lbScaleFixedB : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Initial fixed B:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNleftWidget = XmLabel lbScaleFixedScale;
        XmNtopWidget = XmLabel lbScaleFixedScale;
        XmNx = 280;
        XmNy = 160;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbScaleFixedScale : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Initial fixed scale:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNleftWidget = XmLabel lbScaleFixedBatch;
        XmNtopWidget = XmLabel lbScaleFixedBatch;
        XmNx = 280;
        XmNy = 120;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleFixedScale : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleFixedScale;
        XmNtopWidget = XmLabel lbScaleFixedScale;
        XmNx = 430;
        XmNy = 122;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object tfScaleFixedB : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleFixedB;
        XmNtopWidget = XmLabel lbScaleFixedB;
        XmNx = 430;
        XmNy = 162;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object lbScaleFixedBatch : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Fixed batch:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 280;
        XmNtopOffset = 0;
        XmNtopWidget = XmLabel lbScaleErrorMul;
        XmNx = 280;
        XmNy = 80;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleFixedBatch : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleFixedBatch;
        XmNtopWidget = XmLabel lbScaleFixedBatch;
        XmNx = 430;
        XmNy = 82;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object tfScaleCycles : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "30";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleCycles;
        XmNtopWidget = XmLabel lbScaleCycles;
        XmNx = 150;
        XmNy = 162;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object lbScaleCycles : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Max cycles:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmLabel lbScaleErrorAdd;
        XmNx = 0;
        XmNy = 160;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tbScaleUnaverage : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Output unaveraged", separate=true) &
!(BX) compound_string("reflns");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 30;
        XmNtopWidget = XmToggleButton tbScaleAnom;
        XmNx = 0;
        XmNy = 320;
        XmNwidth = 145;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScaleCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Output a scaled, but unaveraged" &
 " reflnlist");
    };
};

object lbScaleMergeFile : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Output scaled file:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 25;
        XmNtopWidget = XmToggleButton tbScaleUnaverage;
        XmNx = 0;
        XmNy = 380;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleMergeFile : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "dtscale.ref";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbScaleMergeFile;
        XmNtopWidget = XmLabel lbScaleMergeFile;
        XmNx = 150;
        XmNy = 382;
        XmNwidth = 330;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object pbScaleMergeFile : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfScaleMergeFile;
        XmNtopWidget = XmTextField tfScaleMergeFile;
        XmNx = 480;
        XmNy = 382;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select output reflnlist file fo" &
 "r dtscalemerge");
        XmNactivateCallback = procedure vScaleCB();
    };
};

object tfScaleUnAvg : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "dtunavg.ref";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbScaleUnaverage;
        XmNtopWidget = XmToggleButton tbScaleUnaverage;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 330;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object pbScaleUnAvg : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfScaleUnAvg;
        XmNtopWidget = XmTextField tfScaleUnAvg;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Select output scaled but unaver" &
 "aged reflnlist file");
        XmNactivateCallback = procedure vScaleCB();
    };
};

object cUIom9ScaleAbscor : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 415;
        XmNtopOffset = 0;
        XmNx = 415;
        XmNy = 0;
        XmNwidth = 351;
        XmNheight = 39;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("None");
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("  ");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("Fourier + No scaling");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("Fourier + Scaling");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("Fourth order scaling");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Scaling only");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Fourth + Scaling");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Third order");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Fourth order");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("None");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbScaleAbscor : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Abscor method:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 280;
        XmNtopOffset = 0;
        XmNx = 280;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbScaleAbscorReject : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Abscor outlier sigma:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 280;
        XmNtopOffset = 40;
        XmNx = 280;
        XmNy = 40;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleAbscorReject : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbScaleAbscorReject;
        XmNtopWidget = XmLabel lbScaleAbscorReject;
        XmNx = 430;
        XmNy = 40;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object tbScaleTexsan : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Output hkl,I,sigI", separate=true) &
!(BX) compound_string("... noheader");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmPushButton pbScaleUnAvg;
        XmNtopWidget = XmPushButton pbScaleUnAvg;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 145;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScaleCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Output scaled but unaveraged re" &
 "flnlist with hkl,I,sigI and noheader suitable for teXsan");
    };
};

object tbScaleNoHeader : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Output", separate=true) &
!(BX) compound_string("... noheader");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = -1;
        XmNleftWidget = XmPushButton pbScaleMergeFile;
        XmNtopWidget = XmPushButton pbScaleMergeFile;
        XmNx = 520;
        XmNy = 381;
        XmNwidth = 145;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScaleCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Output averaged reflnlist witho" &
 "ut a header");
    };
};

object cUIom9ScaleUnavgOutput : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom9";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmPushButton pbScaleUnAvg;
        XmNtopWidget = XmPushButton pbScaleUnAvg;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 210;
        XmNheight = 39;
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("d*TREK");
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("  ");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string(" ");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Texsan 2, no header");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Texsan, no header");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("d*TREK, no header");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("d*TREK");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object lbScaleUnavgOutput : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Output format:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmForm cUIom9ScaleUnavgOutput;
        XmNleftOffset = 10;
        XmNrightOffset = 0;
        XmNleftWidget = XmForm cUIom9ScaleUnavgOutput;
        XmNx = 0;
        XmNy = 255;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbScaleResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Resolution:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmLabel lbScaleCycles;
        XmNx = 0;
        XmNy = 200;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfScaleResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfScaleResolution1;
        XmNtopWidget = XmTextField tfScaleResolution1;
        XmNx = 245;
        XmNy = 201;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object tfScaleResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 1;
        XmNleftWidget = XmLabel lbScaleResolution;
        XmNtopWidget = XmLabel lbScaleResolution;
        XmNx = 150;
        XmNy = 201;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vScaleTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vScaleTextFieldCB();
    };
};

object tbScaleScaleAnom : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Scale anomalous", separate=true) &
!(BX) compound_string("I+,I- separately");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 100;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbScaleAnom;
        XmNtopWidget = XmToggleButton tbScaleAnom;
        XmNx = 245;
        XmNy = 255;
        XmNwidth = 145;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScaleCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Treat I+ and I- as non-equivale" &
 "nt in scaling and statistics");
    };
};

object foScale : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 756;
        XmNheight = 485;
    };
    controls {
         managed XmToggleButton tbScaleScaleAnom;
         managed XmTextField tfScaleResolution1;
         managed XmTextField tfScaleResolution2;
         managed XmLabel lbScaleResolution;
         unmanaged XmLabel lbScaleUnavgOutput;
         unmanaged XmForm cUIom9ScaleUnavgOutput;
         managed XmToggleButton tbScaleNoHeader;
         unmanaged XmToggleButton tbScaleTexsan;
         managed XmTextField tfScaleAbscorReject;
         managed XmLabel lbScaleAbscorReject;
         managed XmLabel lbScaleAbscor;
         managed XmForm cUIom9ScaleAbscor;
         unmanaged XmPushButton pbScaleUnAvg;
         unmanaged XmTextField tfScaleUnAvg;
         managed XmPushButton pbScaleMergeFile;
         managed XmTextField tfScaleMergeFile;
         managed XmLabel lbScaleMergeFile;
         managed XmToggleButton tbScaleUnaverage;
         managed XmLabel lbScaleCycles;
         managed XmTextField tfScaleCycles;
         managed XmTextField tfScaleFixedBatch;
         managed XmLabel lbScaleFixedBatch;
         managed XmTextField tfScaleFixedB;
         managed XmTextField tfScaleFixedScale;
         managed XmLabel lbScaleFixedScale;
         managed XmLabel lbScaleFixedB;
         managed XmTextField tfScaleSigma;
         managed XmLabel lbScaleSigma;
         managed XmPushButton pbScaleRun;
         managed XmLabel lbScaleErrorAdd;
         managed XmTextField tfScaleErrorAdd;
         managed XmTextField tfScaleReject;
         managed XmLabel lbScaleReject;
         managed XmToggleButton tbScaleAnom;
         managed XmToggleButton tbScaleFixB;
         managed XmTextField tfScaleErrorMul;
         managed XmLabel lbScaleErrorMul;
         managed XmSeparator seScale;
    };
    callbacks {
    };
};

object frScale : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = -1;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 762;
        XmNheight = 491;
    };
    controls {
         managed XmForm foScale;
    };
    callbacks {
    };
};

object lbMode : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Flow chart mode:");
        XmNtraversalOn = false;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 2;
        XmNtopOffset = 0;
        XmNrightWidget = XmFrame frFlowchart;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 150;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbStrategyRot : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Search rot start, end:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 10;
        XmNtopOffset = 5;
        XmNx = 10;
        XmNy = 5;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbStrategyLScale : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Cell length scale:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbStrategyRotStep;
        XmNx = 10;
        XmNy = 190;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbStrategyCompleteness : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Min % completeness:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbStrategyResolution;
        XmNx = 10;
        XmNy = 79;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbStrategyRotRangeMax : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Max search rot range:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbStrategyCompleteness;
        XmNx = 10;
        XmNy = 116;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbStrategyResolution : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Search resolution:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbStrategyRot;
        XmNx = 10;
        XmNy = 42;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbStrategyRotStep : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Search rot step\n\
!(BX)coarse, fine:" &
!(BX) "");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbStrategyRotRangeMax;
        XmNx = 10;
        XmNy = 153;
        XmNwidth = 150;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfStrategyRotStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbStrategyRot;
        XmNtopWidget = XmLabel lbStrategyRot;
        XmNx = 160;
        XmNy = 7;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyRotEnd : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfStrategyRotStart;
        XmNtopWidget = XmTextField tfStrategyRotStart;
        XmNx = 255;
        XmNy = 7;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyLScale : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1.0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbStrategyLScale;
        XmNtopWidget = XmLabel lbStrategyLScale;
        XmNx = 160;
        XmNy = 192;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyCompleteness : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbStrategyCompleteness;
        XmNtopWidget = XmLabel lbStrategyCompleteness;
        XmNx = 160;
        XmNy = 81;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyRotRangeMax : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbStrategyRotRangeMax;
        XmNtopWidget = XmLabel lbStrategyRotRangeMax;
        XmNx = 160;
        XmNy = 118;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyResolution1 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNleftWidget = XmLabel lbStrategyResolution;
        XmNtopWidget = XmLabel lbStrategyResolution;
        XmNx = 160;
        XmNy = 44;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyResolution2 : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfStrategyResolution1;
        XmNtopWidget = XmTextField tfStrategyResolution1;
        XmNx = 255;
        XmNy = 44;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyRotStepCoarse : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "2.5";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 160;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbStrategyRotStep;
        XmNx = 160;
        XmNy = 155;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tfStrategyRotStepFine : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfStrategyRotStepCoarse;
        XmNtopWidget = XmTextField tfStrategyRotStepCoarse;
        XmNx = 255;
        XmNy = 155;
        XmNwidth = 90;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tbStrategyList : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("List params");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNrightOffset = 0;
        XmNtopOffset = 2;
        XmNtopWidget = XmToggleButton tbStrategyPredicted;
        XmNx = 10;
        XmNy = 301;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vStrategyCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use -list option in dtstrategy");
    };
};

object pbStrategyRun : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Run strategy");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 302;
        XmNy = 444;
        XmNwidth = 152;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Determine best rotation start a" &
 "nd range");
        XmNactivateCallback = procedure vStrategyCB();
    };
};

object seStrategy : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 5;
        XmNbottomWidget = XmPushButton pbStrategyRun;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNx = 0;
        XmNy = 429;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object pbStrategyPrevious : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 1;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfStrategyPrevious;
        XmNtopWidget = XmTextField tfStrategyPrevious;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("File selection dialog for previ" &
 "ous reflnlist");
        XmNactivateCallback = procedure vStrategyCB();
    };
};

object tfStrategyPrevious : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 20;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbStrategyPrevious;
        XmNtopWidget = XmToggleButton tbStrategyPrevious;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 365;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object tbStrategyPrevious : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Use previous reflns");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmLabel lbStrategyLScale;
        XmNx = 10;
        XmNy = 227;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vStrategyCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use previous reflnlist");
    };
};

object tbStrategyPredicted : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Use predicted reflns");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmToggleButton tbStrategyPrevious;
        XmNx = 10;
        XmNy = 264;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vStrategyCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Use previous reflnlist");
    };
};

object tfStrategyPredicted : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "";
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 160;
        XmNtopOffset = 0;
        XmNtopWidget = XmToggleButton tbStrategyPredicted;
        XmNx = 160;
        XmNy = 0;
        XmNwidth = 365;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vStrategyTextFieldCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vStrategyTextFieldCB();
    };
};

object pbStrategyPredicted : XmPushButton widget {
    arguments {
        XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 1;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfStrategyPredicted;
        XmNtopWidget = XmTextField tfStrategyPredicted;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("File selection dialog for previ" &
 "ous reflnlist");
        XmNactivateCallback = procedure vStrategyCB();
    };
};

object tbStrategyRef : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Output selected reflns");
!(BX)   _XmNselectColor = color('Green');
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 10;
        XmNtopOffset = 2;
        XmNtopWidget = XmToggleButton tbStrategyList;
        XmNx = 10;
        XmNy = 338;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vStrategyCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Write selected reflns to file f" &
 "or future use");
    };
};

object foStrategy : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 756;
        XmNheight = 484;
    };
    controls {
         managed XmToggleButton tbStrategyRef;
         unmanaged XmPushButton pbStrategyPredicted;
         unmanaged XmTextField tfStrategyPredicted;
         managed XmToggleButton tbStrategyPredicted;
         managed XmToggleButton tbStrategyPrevious;
         unmanaged XmTextField tfStrategyPrevious;
         unmanaged XmPushButton pbStrategyPrevious;
         managed XmSeparator seStrategy;
         managed XmPushButton pbStrategyRun;
         managed XmToggleButton tbStrategyList;
         managed XmTextField tfStrategyRotStepFine;
         managed XmTextField tfStrategyRotStepCoarse;
         managed XmTextField tfStrategyResolution2;
         managed XmTextField tfStrategyResolution1;
         managed XmTextField tfStrategyRotRangeMax;
         managed XmTextField tfStrategyCompleteness;
         managed XmTextField tfStrategyLScale;
         managed XmTextField tfStrategyRotEnd;
         managed XmTextField tfStrategyRotStart;
         managed XmLabel lbStrategyRotStep;
         managed XmLabel lbStrategyResolution;
         managed XmLabel lbStrategyRotRangeMax;
         managed XmLabel lbStrategyCompleteness;
         managed XmLabel lbStrategyLScale;
         managed XmLabel lbStrategyRot;
    };
    callbacks {
    };
};

object frStrategy : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 762;
        XmNheight = 490;
    };
    controls {
         managed XmForm foStrategy;
    };
    callbacks {
    };
};

object cslLogfile : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIscrolledlist";
!(BX) BxNsubclassDerived = "False";
        XmNtraversalOn = true;
        XmNresizePolicy = XmRESIZE_ANY;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 2;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frFlowchart;
        XmNrightWidget = XmFrame frLists;
        XmNtopWidget = XmForm cslHeader;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 174;
!(BX)   cslLogfile XmNwidth = 174;
!(BX)   cslLogfile XmNheight = 321;
!(BX)   cUIscrolledlist_pbDeselectAll _XmNlabelString = compound_string("Deselect all");
!(BX)   cUIscrolledlist_pbSelectAll _XmNlabelString = compound_string("Select all");
!(BX)   cUIscrolledlist_liList XmNselectionPolicy = XmSINGLE_SELECT;
!(BX)   cUIscrolledlist_lbTitle _XmNlabelString = compound_string("Log files");
    };
    controls {
         managed XmPushButton cUIscrolledlist_pbDeselectAll;
         managed XmPushButton cUIscrolledlist_pbSelectAll;
         managed XmScrolledWindow cUIscrolledlist_swList;
         managed XmLabel cUIscrolledlist_lbTitle;
         managed XmFrame cUIscrolledlist_frFrame;
    };
    callbacks {
    };
};

object seLogfile : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 4;
        XmNbottomWidget = XmTextField tfLogfileSearch;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 430;
        XmNwidth = 756;
        XmNheight = 10;
    };
    controls {
    };
    callbacks {
    };
};

object pbLogfileDismiss : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Dismiss");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNleftOffset = 6;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 6;
        XmNy = 444;
        XmNwidth = 94;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Send Yes to sub-shell");
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object txLogfile : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
!(BX)   _XmNbackground = color('white');
        XmNvalue = "123456789 123456789 123456789 12" &
 "3456789 123456789 123456789 123456789 123456789\n\
         1         " &
 "2         3         4         5         6         7         8";
!(BX)   _XmNfontList = font_table(
!(BX)		font('-*-courier-bold-r-*-*-*-100-*-*-*-*-iso8859-1',character_set=character_set('xf')));
        XmNscrollLeftSide = true;
        XmNcolumns = 79;
        XmNrows = 24;
        XmNeditable = false;
    };
    controls {
    };
    callbacks {
    };
};

object swLogfile : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNscrollBarPlacement = XmBOTTOM_LEFT;
        XmNscrollBarDisplayPolicy = XmSTATIC;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmSeparator seLogfile;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 756;
        XmNheight = 430;
    };
    controls {
         managed XmText txLogfile;
    };
    callbacks {
    };
};

object tfLogfileSearch : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "lpr -Phplj3";
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNleftOffset = 210;
        XmNrightOffset = 225;
        XmNrightWidget = XmToggleButton tbLogfileAutoscroll;
        XmNx = 210;
        XmNy = 444;
        XmNwidth = 221;
        XmNheight = 33;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vLogfileCB();
                 vUnpostHelpCB();
        };
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object lbLogfileSearch : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Search string:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNleftOffset = 110;
        XmNrightOffset = 0;
        XmNx = 110;
        XmNy = 442;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object abLogfileSearch : XmArrowButton widget {
    arguments {
        XmNarrowDirection = XmARROW_UP;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNrightOffset = 180;
        XmNrightWidget = XmToggleButton tbLogfileAutoscroll;
        XmNx = 438;
        XmNy = 446;
        XmNwidth = 38;
        XmNheight = 31;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelpCB("Set search direction");
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object pbLogfileAbort : XmPushButton widget {
    arguments {
!(BX)   _XmNbackground = color('red');
!(BX)   _XmNlabelString = compound_string("Abort");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNleftOffset = 6;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 6;
        XmNy = 445;
        XmNwidth = 94;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Abort a running subprocess");
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object lbLogfileInput : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Input:");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 7;
        XmNleftOffset = 110;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 110;
        XmNy = 443;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tbLogfileAutoscroll : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = true;
!(BX)   _XmNlabelString = compound_string("Auto scroll");
!(BX)   _XmNselectColor = color('Green');
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 4;
        XmNrightOffset = 0;
        XmNx = 656;
        XmNy = 445;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vLogfileCB();
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Auto scroll ON / OFF on log fil" &
 "e updates");
    };
};

object pbLogfileYes : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Yes");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNleftOffset = 0;
        XmNrightOffset = 5;
        XmNtopOffset = 0;
        XmNrightWidget = XmPushButton pbLogfileNo;
        XmNx = 491;
        XmNy = 444;
        XmNwidth = 50;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Send Yes to sub-shell");
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object pbLogfileReturn : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("<cr>");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightOffset = 5;
        XmNtopOffset = 0;
        XmNrightWidget = XmToggleButton tbLogfileAutoscroll;
        XmNx = 601;
        XmNy = 444;
        XmNwidth = 50;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Send Input<cr> to sub-shell");
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object pbLogfileNo : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("No");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightOffset = 5;
        XmNtopOffset = 0;
        XmNrightWidget = XmPushButton pbLogfileReturn;
        XmNx = 546;
        XmNy = 444;
        XmNwidth = 50;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Send No to sub-shell");
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object pbLogfileClear : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Clr");
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_NONE;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNleftOffset = 0;
        XmNrightOffset = 5;
        XmNtopOffset = 0;
        XmNrightWidget = XmPushButton pbLogfileYes;
        XmNx = 436;
        XmNy = 444;
        XmNwidth = 50;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnpostHelpCB();
        XmNarmCallback = procedure vPostHelpCB("Clear Input text");
        XmNactivateCallback = procedure vLogfileCB();
    };
};

object foLogfile : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 756;
        XmNheight = 484;
    };
    controls {
         managed XmPushButton pbLogfileClear;
         managed XmPushButton pbLogfileNo;
         managed XmPushButton pbLogfileReturn;
         managed XmPushButton pbLogfileYes;
         managed XmToggleButton tbLogfileAutoscroll;
         unmanaged XmLabel lbLogfileInput;
         unmanaged XmPushButton pbLogfileAbort;
         managed XmArrowButton abLogfileSearch;
         managed XmLabel lbLogfileSearch;
         managed XmTextField tfLogfileSearch;
         managed XmScrolledWindow swLogfile;
         unmanaged XmPushButton pbLogfileDismiss;
         managed XmSeparator seLogfile;
    };
    callbacks {
    };
};

object frLogfile : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frLists;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frLists;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 762;
        XmNheight = 490;
    };
    controls {
         managed XmForm foLogfile;
    };
    callbacks {
    };
};

object foMain : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_NONE;
        XmNwidth = 1090;
        XmNheight = 626;
    };
    controls {
         unmanaged XmFrame frLogfile;
         unmanaged XmForm cslLogfile;
         unmanaged XmFrame frStrategy;
         managed XmLabel lbMode;
         unmanaged XmFrame frScale;
         unmanaged XmFrame frMerge;
         unmanaged XmFrame frIntegrate;
         unmanaged XmFrame frOrient;
         unmanaged XmFrame frPredict;
         unmanaged XmFrame frRefine;
         unmanaged XmFrame frIndex;
         unmanaged XmFrame frFind;
         managed XmFrame frCalibrate;
         managed XmLabel lbCommand;
         managed XmTextField tfCommand;
         managed XmScrolledWindow swOutput;
         managed XmForm cslImages;
         managed XmForm cslHeader;
         unmanaged XmForm cslReflnlist;
         managed XmFrame frLists;
         managed XmFrame frFlowchart;
         managed XmForm cUIomMode;
    };
    callbacks {
    };
};

object mainWindow : XmMainWindow widget {
    arguments {
        XmNx = 189;
        XmNy = 174;
        XmNwidth = 1090;
        XmNheight = 661;
    };
    controls {
!(BX)         unmanaged XmDialogShell xmDialogShellHeaderEdit;
!(BX)         unmanaged XmDialogShell xmDialogShellTextNum;
!(BX)         unmanaged XmDialogShell xmDialogShellProgress;
!(BX)         unmanaged XmDialogShell xmDialogShellError;
!(BX)         unmanaged XmDialogShell xmDialogShellFileFilter;
         managed XmMenuBar meMain;
         managed XmForm foMain;
    };
    callbacks {
    };
};

!(BX)object dtprocess : TopLevelShell widget {
!(BX)    arguments {
!(BX)        _XmNtitle = "d*TREK - dtprocess";
!(BX)        XmNx = 189;
!(BX)        XmNy = 174;
!(BX)        XmNwidth = 1090;
!(BX)        XmNheight = 661;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mainWindow;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};
end module;
