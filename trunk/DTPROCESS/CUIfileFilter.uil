/*
 *
 * Copyright (C) 2014 Rigaku Americas Corporation
 *                    9009 New Trails Drive
 *                    The Woodlands, TX, USA  77381
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    * Redistributions of source code must retain the above copyright
 *      notice(s), this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice(s), this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    * Neither the name of the Rigaku Americas Corporation nor the
 *      names of its contributors may be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RIGAKU AMERICAS CORPORATION BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 */
/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory Version 5.0.
 *
 * Identification: 
 */
!(CX)procedure vFilterSelect();
!(CX)procedure vFileFilterCB();


object cUIfileFilter_pbFileFilterStar : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*");
!(BX)   cUIfileFilter_pbFileFilterStar _XmNlabelString = compound_string("*");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pbFileFilterHead : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*.head");
!(BX)   cUIfileFilter_pbFileFilterHead _XmNlabelString = compound_string("*.head");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pbFileFilterImage : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*.???");
!(BX)   cUIfileFilter_pbFileFilterImage _XmNlabelString = compound_string("*.???");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pbFileFilterRef : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*.ref");
!(BX)   cUIfileFilter_pbFileFilterRef _XmNlabelString = compound_string("*.ref");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pbFileFilterUser : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*.osc");
!(BX)   cUIfileFilter_pbFileFilterUser _XmNlabelString = compound_string("*.osc");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pbFileFilterHead1 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*.head*");
!(BX)   cUIfileFilter_pbFileFilterHead1 _XmNlabelString = compound_string("*.head*");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pbFileFilterRef1 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*.ref*");
!(BX)   cUIfileFilter_pbFileFilterRef1 _XmNlabelString = compound_string("*.ref*");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pbFileFilterUser1 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("*.???*");
!(BX)   cUIfileFilter_pbFileFilterUser1 _XmNlabelString = compound_string("*.???*");
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFilterSelect();
    };
};

object cUIfileFilter_pdFileFilter : XmPulldownMenu widget {
    arguments {
        XmNx = 916;
        XmNy = 792;
        XmNwidth = 98;
        XmNheight = 220;
    };
    controls {
         managed XmPushButton cUIfileFilter_pbFileFilterStar;
         managed XmPushButton cUIfileFilter_pbFileFilterHead;
         managed XmPushButton cUIfileFilter_pbFileFilterImage;
         managed XmPushButton cUIfileFilter_pbFileFilterRef;
         managed XmPushButton cUIfileFilter_pbFileFilterUser;
         managed XmPushButton cUIfileFilter_pbFileFilterHead1;
         managed XmPushButton cUIfileFilter_pbFileFilterRef1;
         managed XmPushButton cUIfileFilter_pbFileFilterUser1;
    };
    callbacks {
    };
};

object cUIfileFilter_omFileFilter : XmOptionMenu widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel cUIfileFilter_lbFileFilterQuick;
        XmNx = 105;
        XmNy = 0;
        XmNwidth = 147;
        XmNheight = 37;
    };
    controls {
         unmanaged XmPulldownMenu cUIfileFilter_pdFileFilter;
    };
    callbacks {
    };
};

object cUIfileFilter_lbFileFilterQuick : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Quick filter:");
!(BX)   cUIfileFilter_lbFileFilterQuick _XmNlabelString = compound_string("Quick filter:");
        XmNtraversalOn = false;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 100;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object cUIfileFilter_foFileFilter : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 11;
        XmNy = 295;
        XmNwidth = 416;
        XmNheight = 36;
    };
    controls {
         managed XmLabel cUIfileFilter_lbFileFilterQuick;
         managed XmOptionMenu cUIfileFilter_omFileFilter;
    };
    callbacks {
    };
};

object cUIfileFilter_fsbFileFilter : XmFileSelectionBox widget {
    arguments {
!(BX) BxNclassOnly = "CUIfileFilter";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "True";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIfileFilterDerived";
!(BX) BxNfilebase = "CUIfileFilterDerived";
!(BX) BxNclassFilebase = "CUIfileFilter";
!(BX) BxNclassGeometry = "438x479+784+494";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIfileFilter";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
        XmNx = 784;
        XmNy = 494;
        XmNwidth = 438;
        XmNheight = 479;
    };
    controls {
         managed XmForm cUIfileFilter_foFileFilter;
    };
    callbacks {
        XmNhelpCallback = procedure vFileFilterCB();
        XmNokCallback = procedure vFileFilterCB();
        XmNcancelCallback = procedure vFileFilterCB();
        XmNapplyCallback = procedure vFileFilterCB();
    };
};
