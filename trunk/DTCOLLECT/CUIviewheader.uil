/*
 *
 * Copyright (C) 2014 Rigaku Americas Corporation
 *                    9009 New Trails Drive
 *                    The Woodlands, TX, USA  77381
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    * Redistributions of source code must retain the above copyright
 *      notice(s), this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice(s), this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    * Neither the name of the Rigaku Americas Corporation nor the
 *      names of its contributors may be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RIGAKU AMERICAS CORPORATION BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 */
/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory Version 5.0.
 *
 * Identification: 
 */
!(CX)procedure vViewHeaderDismissCB();
!(CX)procedure vFindCB();


object cUIviewheader_twViewHeader : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNeditable = false;
    };
    controls {
    };
    callbacks {
    };
};

object cUIviewheader_swViewHeader : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 40;
        XmNbottomWidget = XmPushButton cUIviewheader_pbViewHeaderDismiss;
        XmNleftOffset = 5;
        XmNrightOffset = 5;
        XmNtopOffset = 0;
        XmNx = 5;
        XmNy = 0;
        XmNwidth = 551;
        XmNheight = 245;
    };
    controls {
         managed XmText cUIviewheader_twViewHeader;
    };
    callbacks {
    };
};

object cUIviewheader_pbViewHeaderDismiss : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Dismiss");
!(BX)   cUIviewheader_pbViewHeaderDismiss _XmNlabelString = compound_string("Dismiss");
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_POSITION;
        XmNleftAttachment = XmATTACH_POSITION;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 5;
        XmNrightPosition = 60;
        XmNleftPosition = 40;
        XmNleftOffset = 0;
        XmNx = 224;
        XmNy = 285;
        XmNwidth = 113;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vViewHeaderDismissCB();
    };
};

object cUIviewheader_lbFind : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Search string:");
!(BX)   cUIviewheader_lbFind _XmNlabelString = compound_string("Search string:");
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 5;
        XmNtopOffset = 255;
        XmNx = 5;
        XmNy = 255;
        XmNwidth = 126;
        XmNheight = 31;
    };
    controls {
    };
    callbacks {
    };
};

object cUIviewheader_tfFind : XmTextField widget {
    arguments {
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 130;
        XmNtopOffset = 250;
        XmNx = 130;
        XmNy = 250;
        XmNwidth = 325;
        XmNheight = 38;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vFindCB();
    };
};

object cUIviewheader_abFindBackward : XmArrowButton widget {
    arguments {
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 465;
        XmNtopOffset = 255;
        XmNx = 465;
        XmNy = 255;
        XmNwidth = 30;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNactivateCallback = procedure vFindCB();
    };
};

object cUIviewheader_abFindForward : XmArrowButton widget {
    arguments {
        XmNarrowDirection = XmARROW_DOWN;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 505;
        XmNtopOffset = 255;
        XmNx = 505;
        XmNy = 255;
        XmNwidth = 30;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object cUIviewheader_foViewHeader : XmFormDialog widget {
    arguments {
!(BX) BxNclassOnly = "CUIviewheader";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "True";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIviewheaderDerived";
!(BX) BxNfilebase = "CUIviewheaderDerived";
!(BX) BxNclassFilebase = "CUIviewheader";
!(BX) BxNclassGeometry = "561x326+345+70";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIviewheader";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
        XmNx = 345;
        XmNy = 70;
        XmNwidth = 561;
        XmNheight = 326;
    };
    controls {
         managed XmArrowButton cUIviewheader_abFindForward;
         managed XmArrowButton cUIviewheader_abFindBackward;
         managed XmTextField cUIviewheader_tfFind;
         managed XmLabel cUIviewheader_lbFind;
         managed XmPushButton cUIviewheader_pbViewHeaderDismiss;
         managed XmScrolledWindow cUIviewheader_swViewHeader;
    };
    callbacks {
    };
};
