//
// Copyright (c) 1996, 1995 Molecular Structure Corporation
//
// RESTRICTED RIGHTS NOTICE SHORT FORM (JUNE 1987)
//
// Use, reproduction, or disclosure is subject to restrictions set
// forth in Contract No. W-31-109-ENG-38 and Contract No. 
// 943072401 with the University of Chicago, Operator of
// Argonne National Laboratory.
//
// CUIeditheader.h        Initial author: J.W. Pflugrath           14-Nov-1996
//    This file is the header file for user interface class CUIeditheader.
/*
 *
 * Copyright (C) 2014 Rigaku Americas Corporation
 *                    9009 New Trails Drive
 *                    The Woodlands, TX, USA  77381
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    * Redistributions of source code must retain the above copyright
 *      notice(s), this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice(s), this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    * Neither the name of the Rigaku Americas Corporation nor the 
 *      names of its contributors may be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RIGAKU AMERICAS CORPORATION BE LIABLE 
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
*/ 

//
// README: Portions of this file are merged at file generation
// time. Edits can be made *only* in between specified code blocks, look
// for keywords <Begin user code> and <End user code>.
//
//////////////////////////////////////////////////////////////
//
// Header file for CUIeditheader
//
//    This file is generated by Builder Xcessory 3.5.1.
//
//    This class is a user interface "component", as described
//    in "Object-Oriented Programming with C++ and OSF/Motif",
//    by Douglas Young, Prentice Hall, 1992. ISBN 0-13-630252-1
//
//////////////////////////////////////////////////////////////
#ifndef CUIeditheader_H
#define CUIeditheader_H
#include "UIComponent.h"

//
// Globally included information (change thru Output File Names Dialog).
//


//
// Class Specific Includes (change thru the class in Resource Editor).
//



// Begin user code block <head> 

#include "CXhelp.h"
#include "Cimage_header.h"

typedef struct _tagEditHeader
{
  double  dCrysCell[6];
  double  dCrysRot[3];
  double  dCrysMosaicity;
  int     nCrysSpacegroup;
  double  dBeamPosition[2];
  Cstring sCrysDescription;
  Cstring sComment;
} tagEditHeader;

// End user code block <head> 

class CUIeditheader : public UIComponent
{

  public:

    CUIeditheader(const char *, Widget);
    CUIeditheader(const char *);
    virtual ~CUIeditheader();
    virtual void create(Widget);
    const char *const  className();
    
    // Begin user code block <public> 

    XtPointer  m_pObj;
    void (*m_prvCallback) (XtPointer, const tagEditHeader&);
    void vSetValues(const tagEditHeader&);
    void vGetValues(tagEditHeader*);
    void vSetValues(const Cimage_header&);
    void vGetValues(Cimage_header*);
    void manage();

    // End user code block <public> 
  protected:
    
    // Empty virtual function for subclass' receptor children
    virtual void create_CUIeditheader_receptor(Widget);
    // Classes created by this class
    
    // Widgets created by this class
    Widget _CUIeditheader;
    Widget _fmEditHeader;
    Widget _separator;
    Widget _swEditHeadCrysDesc;
    Widget _twEditHeadCrysDesc;
    Widget _lbEditHeadCrysDesc;
    Widget _tfEditHeadBeamPosn;
    Widget _lbEditHeadBeamPosn;
    Widget _pbEditHeadSpacegroup;
    Widget _swEditHeadComment;
    Widget _twEditHeadComment;
    Widget _tfEditHeadSpacegroup;
    Widget _tfEditHeadMosaicity;
    Widget _tfEditHeadOrient3;
    Widget _tfEditHeadOrient2;
    Widget _tfEditHeadOrient1;
    Widget _tfEditHeadCellGam;
    Widget _tfEditHeadCellBet;
    Widget _tfEditHeadCellAlp;
    Widget _tfEditHeadCellC;
    Widget _tfEditHeadCellB;
    Widget _tfEditHeadCellA;
    Widget _lbEditHeadComment;
    Widget _lbEditHeadSpacegroup;
    Widget _lbEditHeadMosaicity;
    Widget _lbEditHeadOrientation;
    Widget _lbEditHeadCell;
    
    // These virtual functions are called from the private callbacks 
    // or event handlers intended to be overridden in derived classes
    // to define actions
    
    virtual void vEditHeaderCB(Widget, XtPointer, XtPointer);
    virtual void vTextFieldCB(Widget, XtPointer, XtPointer);
    virtual void vUnPostHelp(Widget, XtPointer, XtPointer);
    
    // Begin user code block <protected> 

    virtual void vPostHelp(Widget, XtPointer, XtPointer);

    void vUpdateWidgets(void);
    void vReadWidgets(void);

    // End user code block <protected> 
  private: 
    
    //
    // Default application and class resources.
    //
    static String         _defaultCUIeditheaderResources[];
    static UIAppDefault   _appDefaults[];
    static Boolean        _initAppDefaults;
    //
    // Callback client data.
    //
    UICallbackStruct  *_clientDataStructs;
    
    //
    // Callbacks to interface with Motif.
    //
    static void vEditHeaderCBCallback(Widget, XtPointer, XtPointer);
    static void vTextFieldCBCallback(Widget, XtPointer, XtPointer);
    static void vUnPostHelpCallback(Widget, XtPointer, XtPointer);
    
    // Begin user code block <private> 

    static void vPostHelpCallback(Widget, XtPointer, XtPointer);

    CXhelp       *m_poXhelp;
    char          m_a255cTemp[256];
    Cstring       m_sFormat1;
    Cstring       m_sFormat2;
    tagEditHeader m_tEditHeader;
    Widget       *m_ptfWidgets[12];

    // End user code block <private> 
};

// Begin user code block <tail> 
// End user code block <tail> 
#endif
