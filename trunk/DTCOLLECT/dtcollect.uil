/*
 *
 * Copyright (C) 2014 Rigaku Americas Corporation
 *                    9009 New Trails Drive
 *                    The Woodlands, TX, USA  77381
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *    * Redistributions of source code must retain the above copyright
 *      notice(s), this list of conditions and the following disclaimer.
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice(s), this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *    * Neither the name of the Rigaku Americas Corporation nor the
 *      names of its contributors may be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL RIGAKU AMERICAS CORPORATION BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS INTERUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 *
 */
/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory Version 5.0.
 *
 * Identification: 
 */
module main_uil
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("c++_options", "")
!(BX) bx_info("c++_libs", "-lSgm -lXm -lXt -lgl -lX11 -lgen")
!(BX) bx_info("c++_cflags", "-g -DFUNCPROTO -DXTFUNCPROTO")
!(BX) bx_info("c++_cc", "g++")
!(BX) bx_info("c++_excludeungenerated", "false")
!(BX) bx_info("c++_target", "dtcollect")
!(BX) bx_info("c++_information", "")
!(BX) bx_info("c++_user_main_loop", "", false)
!(BX) bx_info("c++_del_nested_classes", "false")
!(BX) bx_info("c++_ignore_shell_geometry", "false")
!(BX) bx_info("c++_visible_windows_only", "false")
!(BX) bx_info("c++_rm_exp_callbacks", "false")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "false")
!(BX) bx_info("c++_use_locales", "false")
!(BX) bx_info("c++_name", "dtcollect")
!(BX) bx_info("c++_class", "Dtcollect")
!(BX) bx_info("c++_hdrext", "h")
!(BX) bx_info("c++_srcext", "cc")
!(BX) bx_info("c++_app_defaults", "app-defaults", true)
!(BX) bx_info("c++_callbacks", "callbacks-cc", false)
!(BX) bx_info("c++_utilities", "bxutils-cc", false)
!(BX) bx_info("c++_constants", "defs-cc", true)
!(BX) bx_info("c++_main", "main-cc", true)
!(BX) bx_info("c++_baseclass", "UIComponent", false)
!(BX) bx_info("c++_makefile", "Makefile", false)
!(BX) bx_info("c++_imakefile", "Imakefile", false)
!(BX) bx_info("c++_dirpath", "")
!(BX) bx_info("include_path", ".",
!(BX)		"/usr/lib/X11/builderXcessory/classes", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("purify_command", "purify", false)
!(BX) bx_info("system_directory", "/d3/bxpro")
!(BX) bx_info("builder_version", "Builder Xcessory Version 5.0")
!(BX) bx_info("build_lang", "CXX")
!(BX) bx_info("default_cpp_args", "")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "false")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")

!
! Include Files: 
!

include file './CUIheaderEdit.uil';
include file './CUIviewheader.uil';
include file './CUIwavelength.uil';


procedure AddKeywordCB();
procedure ReplaceValueCB();
procedure DeleteKeywordCB();
procedure KeywordChangedCB();
procedure KeywordSelectedCB();
procedure ChangeMenuCB();
procedure ClassHelpCB();
procedure ChangeUnitCellCB();
procedure ChangeCrystSpaceGroup();
procedure ChangeCrystMosaicityCB();
procedure ChangeCrystOrientCB();
procedure ChangeDetGonioCB();
procedure ChangeSourceWavelengthCB();
procedure ChangeSourceRotCB();
procedure ChangeDirectBeamCB();
procedure ChangeHeaderCB(string);
procedure ChangeCommentCB(string);
procedure vViewHeaderDismissCB();
procedure vFindCB();
procedure vWavelengthCB();
procedure vUnPostHelp();
procedure vTextFieldCB();
procedure vEditHeaderCB();
procedure vPostHelp(string);
procedure vFileOpenSaveCB();
procedure vImagefileSelectCB();
procedure vScrollBarCB();
procedure vScanCB();
procedure vScanSaveCB();
procedure vScanDatumCB();
procedure vScanArrowCB();
procedure vScanToggleCB(integer);
procedure vScanScrollBarCB(integer);
procedure vScanRadio(integer);
procedure vScanFileCB();
procedure vScanEditCB(integer);
procedure vScanViewCB(integer);
procedure vHTMLHelp(string);
procedure vFileNewCB();
procedure vEditDetectorCB();
procedure vEditClearCB();
procedure vCollectScanCB();
procedure vMainCB();
procedure vExposeTypeCB(integer);
procedure vPSfileSelectCB();
procedure vMessageBoxCB();
procedure vExitCB(integer);
procedure vWarnPositionCB();
procedure vPopDialogCB();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};


object mbWarnPosition : XmMessageDialog widget {
    arguments {
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("WARNING! Current goniometer valu" &
!(BX) "es are NOT EQUAL to requested values!");
!(BX)   _XmNokLabelString = compound_string("Yes, continue");
!(BX)   _XmNcancelLabelString = compound_string("No, abort");
!(BX)   _XmNmessageString = compound_string("WARNING!", separate=true) &
!(BX) compound_string("", separate=true) &
!(BX) compound_string("The CURRENT crystal and/or detector goniometer values", separate=true) &
!(BX) compound_string("are not equal to the REQUESTED values.", separate=true) &
!(BX) compound_string("", separate=true) &
!(BX) compound_string("Select YES to continue the exposure.", separate=true) &
!(BX) compound_string("Select  NO to abort the exposure, then if desired", separate=true) &
!(BX) compound_string("     use MOVE buttons to move goniometer(s).");
        XmNx = 110;
        XmNy = 226;
        XmNwidth = 666;
        XmNheight = 237;
    };
    controls {
        Xm_Help unmanaged {
        };
    };
    callbacks {
        XmNokCallback = procedure vWarnPositionCB();
        XmNcancelCallback = procedure vWarnPositionCB();
    };
};

!(BX)object xmDialogShellWarnPosition : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 666;
!(BX)        XmNheight = 237;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog mbWarnPosition;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIheaderEdit : XmSelectionDialog widget {
    arguments {
!(BX) BxNclass = "CUIheaderEdit";
!(BX) BxNsubclassDerived = "False";
        XmNdialogType = XmDIALOG_PROMPT;
        XmNchildPlacement = XmPLACE_TOP;
        XmNresizePolicy = XmRESIZE_NONE;
    };
    controls {
        Xm_Selection unmanaged {
        };
        Xm_Text unmanaged {
        };
        Xm_Apply managed {
        };
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsGetValueError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsValueError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsReplaceValueError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsAddKeywordError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsDeleteKeywordError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsKeywordLengthError;
!(BX)         unmanaged XmDialogShell cUIheaderEdit_dsKeywordCharacterError;
         managed XmForm cUIheaderEdit_foEdit;
    };
    callbacks {
        XmNhelpCallback = procedure ClassHelpCB();
        XmNokCallback = procedure ChangeHeaderCB("ok");
        XmNcancelCallback = procedure ChangeHeaderCB("cancel");
        XmNapplyCallback = procedure ChangeHeaderCB("apply");
    };
};

!(BX)object xmDialogShellHeaderEdit : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 792;
!(BX)        XmNheight = 475;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmSelectionDialog cUIheaderEdit;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIeditdetector : XmSelectionDialog widget {
    arguments {
!(BX) BxNclass = "CUIeditdetector";
!(BX) BxNsubclassDerived = "False";
!(BX)   _XmNdialogTitle = compound_string("dtcollect - Edit detector proper" &
!(BX) "ties");
!(BX)   cUIeditdetector _XmNdialogTitle = compound_string("dtcollect - Edit detector proper" &
!(BX) "ties");
        XmNdialogType = XmDIALOG_SELECTION;
        XmNchildPlacement = XmPLACE_TOP;
        XmNx = 100;
        XmNy = 72;
        XmNwidth = 686;
        XmNheight = 545;
    };
    controls {
        Xm_Apply managed {
        };
         managed XmForm cUIeditdetector_foEditDetector;
    };
    callbacks {
        XmNhelpCallback = procedure vEditDetectorCB();
        XmNokCallback = procedure vEditDetectorCB();
        XmNcancelCallback = procedure vEditDetectorCB();
        XmNapplyCallback = procedure vEditDetectorCB();
    };
};

!(BX)object xmDialogShellEditDetector : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 686;
!(BX)        XmNheight = 545;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmSelectionDialog cUIeditdetector;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object tbFileOpenSave : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNset = false;
!(BX)   _XmNlabelString = compound_string("Load scan table from file");
        XmNx = 11;
        XmNy = 294;
        XmNwidth = 416;
        XmNheight = 29;
    };
    controls {
    };
    callbacks {
    };
};

object fsdFileOpenSave : XmFileSelectionDialog widget {
    arguments {
        XmNx = 224;
        XmNy = 109;
        XmNwidth = 438;
        XmNheight = 471;
    };
    controls {
         managed XmToggleButton tbFileOpenSave;
    };
    callbacks {
        XmNhelpCallback = procedure vFileOpenSaveCB();
        XmNokCallback = procedure vFileOpenSaveCB();
        XmNcancelCallback = procedure vFileOpenSaveCB();
        XmNapplyCallback = procedure vFileOpenSaveCB();
    };
};

!(BX)object xmDialogShellFileOpenSave : XmDialogShell widget {
!(BX)    arguments {
!(BX)        _XmNtitle = "dtcollect - Open or Save a heade" &
!(BX) "r";
!(BX)        XmNwidth = 438;
!(BX)        XmNheight = 471;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFileSelectionDialog fsdFileOpenSave;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIviewheader : XmFormDialog widget {
    arguments {
!(BX) BxNclass = "CUIviewheader";
!(BX) BxNsubclassDerived = "False";
        XmNx = 160;
        XmNy = 164;
        XmNwidth = 566;
        XmNheight = 362;
    };
    controls {
         managed XmArrowButton cUIviewheader_abFindForward;
         managed XmArrowButton cUIviewheader_abFindBackward;
         managed XmTextField cUIviewheader_tfFind;
         managed XmLabel cUIviewheader_lbFind;
         managed XmPushButton cUIviewheader_pbViewHeaderDismiss;
         managed XmScrolledWindow cUIviewheader_swViewHeader;
    };
    callbacks {
    };
};

!(BX)object xmDialogShellViewHeader : XmDialogShell widget {
!(BX)    arguments {
!(BX)        _XmNtitle = "d*TREK - dtcollect: View header";
!(BX)        XmNwidth = 566;
!(BX)        XmNheight = 362;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFormDialog cUIviewheader;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIimagefileSelect : XmFileSelectionDialog widget {
    arguments {
!(BX) BxNclass = "CUIimagefileSelect";
!(BX) BxNsubclassDerived = "False";
!(BX)   cUIimagefileSelect _XmNdialogTitle = compound_string("Select image file and/or templat" &
!(BX) "e name");
!(BX)   cUIimagefileSelect _XmNselectionLabelString = compound_string("Image file");
!(BX)   cUIimagefileSelect _XmNokLabelString = compound_string("OK");
!(BX)   cUIimagefileSelect _XmNfilterLabelString = compound_string("Filter or Template");
        XmNx = 224;
        XmNy = 69;
        XmNwidth = 438;
        XmNheight = 552;
    };
    controls {
         managed XmForm cUIimagefileSelect_form;
    };
    callbacks {
        XmNokCallback = procedure vImagefileSelectCB();
        XmNcancelCallback = procedure vImagefileSelectCB();
        XmNapplyCallback = procedure vImagefileSelectCB();
    };
};

!(BX)object xmDialogShellImageFile : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 438;
!(BX)        XmNheight = 552;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFileSelectionDialog cUIimagefileSelect;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object mbError : XmMessageDialog widget {
    arguments {
!(BX)   _XmNdialogTitle = compound_string("dtcollect ERROR");
!(BX)   _XmNcancelLabelString = compound_string("Dismiss");
!(BX)   _XmNmessageString = compound_string("No errors reported.");
        XmNx = 258;
        XmNy = 286;
        XmNwidth = 370;
        XmNheight = 118;
    };
    controls {
    };
    callbacks {
    };
};

!(BX)object xmDialogShellError : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 370;
!(BX)        XmNheight = 118;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog mbError;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIwavelength : XmSelectionDialog widget {
    arguments {
!(BX) BxNclass = "CUIwavelength";
!(BX) BxNsubclassDerived = "False";
!(BX)   _XmNdialogTitle = compound_string("d*TREK - Wavelength chooser");
!(BX)   cUIwavelength _XmNdialogTitle = compound_string("d*TREK - Wavelength chooser");
!(BX)   _XmNlistItemCount = 1;
!(BX)   cUIwavelength _XmNlistItemCount = 1;
!(BX)   _XmNlistItems = string_table(
!(BX)	compound_string("1.54178 Cu Kalpha:0.71069 Mo"));
!(BX)   cUIwavelength _XmNlistItems = string_table(
!(BX)	compound_string("1.54178 Cu Kalpha:0.71069 Mo"));
!(BX)   _XmNselectionLabelString = compound_string("Wavelength");
!(BX)   _XmNlistLabelString = compound_string("Common wavelengths");
!(BX)   cUIwavelength _XmNlistLabelString = compound_string("Common wavelengths");
        XmNautoUnmanage = true;
        XmNx = 127;
        XmNy = 116;
        XmNwidth = 632;
        XmNheight = 457;
    };
    controls {
         managed XmForm cUIwavelength_form;
    };
    callbacks {
        XmNokCallback = procedure vWavelengthCB();
        XmNapplyCallback = procedure vWavelengthCB();
    };
};

!(BX)object xmDialogShellWavelength : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 632;
!(BX)        XmNheight = 457;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmSelectionDialog cUIwavelength;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object fsdCollectScanFile : XmFileSelectionDialog widget {
    arguments {
!(BX)   _XmNdialogTitle = compound_string("d*TREK - dtcollect:  Enter name " &
!(BX) "of  scan table file");
        XmNautoUnmanage = true;
        XmNx = 403;
        XmNy = 141;
        XmNwidth = 438;
        XmNheight = 432;
    };
    controls {
    };
    callbacks {
        XmNokCallback = procedure vScanSaveCB();
    };
};

!(BX)object xmDialogShellCollectScanFile : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 403;
!(BX)        XmNy = 141;
!(BX)        XmNwidth = 438;
!(BX)        XmNheight = 432;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmFileSelectionDialog fsdCollectScanFile;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object lbDatumOmega : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Omega:");
        XmNtraversalOn = false;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbDatumChi : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Chi:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 40;
        XmNx = 0;
        XmNy = 40;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbDatumPhi : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Phi:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 80;
        XmNx = 0;
        XmNy = 80;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbDatumDist : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Distance:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 120;
        XmNx = 0;
        XmNy = 120;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object lbDatumTheta : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("2Theta/Swing:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 160;
        XmNx = 0;
        XmNy = 160;
        XmNwidth = 130;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
    };
};

object tfDatumOmega : XmTextField widget {
    arguments {
        XmNuserData = 99;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 150;
        XmNtopOffset = 0;
        XmNx = 150;
        XmNy = 0;
        XmNwidth = 154;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vScanDatumCB();
        };
    };
};

object tfDatumChi : XmTextField widget {
    arguments {
        XmNuserData = 99;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 150;
        XmNtopOffset = 40;
        XmNx = 150;
        XmNy = 40;
        XmNwidth = 154;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vScanDatumCB();
        };
    };
};

object tfDatumPhi : XmTextField widget {
    arguments {
        XmNuserData = 99;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 150;
        XmNtopOffset = 80;
        XmNx = 150;
        XmNy = 80;
        XmNwidth = 154;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vScanDatumCB();
        };
    };
};

object tfDatumDist : XmTextField widget {
    arguments {
        XmNuserData = 99;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 150;
        XmNtopOffset = 120;
        XmNx = 150;
        XmNy = 120;
        XmNwidth = 154;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vScanDatumCB();
        };
    };
};

object tfDatumTheta : XmTextField widget {
    arguments {
        XmNuserData = 99;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 150;
        XmNtopOffset = 160;
        XmNx = 150;
        XmNy = 160;
        XmNwidth = 154;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vScanDatumCB();
        };
    };
};

object fmDatum : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 11;
        XmNy = 11;
        XmNwidth = 313;
        XmNheight = 220;
    };
    controls {
         managed XmTextField tfDatumTheta;
         managed XmTextField tfDatumDist;
         managed XmTextField tfDatumPhi;
         managed XmTextField tfDatumChi;
         managed XmTextField tfDatumOmega;
         managed XmLabel lbDatumTheta;
         managed XmLabel lbDatumDist;
         managed XmLabel lbDatumPhi;
         managed XmLabel lbDatumChi;
         managed XmLabel lbDatumOmega;
    };
    callbacks {
    };
};

object sdDatum : XmSelectionDialog widget {
    arguments {
        XmNdialogTitle = compound_string("d*TREK - dtcollect: Enter datum " &
 "(relative zero) position");
        XmNdialogType = XmDIALOG_PROMPT;
        XmNx = 454;
        XmNy = 167;
        XmNwidth = 335;
        XmNheight = 379;
    };
    controls {
         managed XmForm fmDatum;
    };
    callbacks {
        XmNokCallback = procedure vScanDatumCB();
        XmNapplyCallback = procedure vScanDatumCB();
    };
};

!(BX)object xmDialogShellDatum : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 454;
!(BX)        XmNy = 167;
!(BX)        XmNwidth = 335;
!(BX)        XmNheight = 379;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmSelectionDialog sdDatum;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object tfDarkIntvl : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfNumOsc;
        XmNx = 1115;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfNumOsc : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfWavelength;
        XmNx = 1055;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfWavelength : XmTextField widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfDatum;
        XmNx = 975;
        XmNy = 0;
!(BX)   _XmNwidth = 80;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfDatum : XmTextField widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfSeqIncr;
        XmNx = 835;
        XmNy = 0;
!(BX)   _XmNwidth = 140;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfSeqIncr : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfSeqStart;
        XmNx = 775;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfSeqStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmTextField tfTemplate;
        XmNx = 715;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfTemplate : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "./image.???";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNleftWidget = XmTextField tfAxis;
        XmNx = 550;
        XmNy = 0;
!(BX)   _XmNwidth = 160;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfAxis : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "Phi";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfTime;
        XmNx = 470;
        XmNy = 0;
!(BX)   _XmNwidth = 80;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfTime : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "180";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfRotIncr;
        XmNx = 400;
        XmNy = 0;
!(BX)   _XmNwidth = 70;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfRotIncr : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1.00";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfRotEnd;
        XmNx = 330;
        XmNy = 0;
!(BX)   _XmNwidth = 70;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfRotEnd : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "90.00";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfRotStart;
        XmNx = 240;
        XmNy = 0;
!(BX)   _XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfRotStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.00";
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNleftWidget = XmTextField tfShutter;
        XmNx = 150;
        XmNy = 0;
!(BX)   _XmNwidth = 90;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfShutter : XmTextField widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmToggleButton tbScan;
        XmNx = 70;
        XmNy = 0;
!(BX)   _XmNwidth = 80;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tbScan : XmToggleButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_CENTER;
        XmNset = true;
        XmNlabelString = compound_string("1");
        XmNtraversalOn = true;
        XmNhighlightOnEnter = true;
        XmNindicatorType = XmONE_OF_MANY;
        XmNuserData = 0;
        XmNrecomputeSize = false;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
!(BX)   _XmNwidth = 70;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNarmCallback = procedure vScanToggleCB(0);
    };
};

object form11 : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_ANY;
        XmNwidth = 1175;
        XmNheight = 40;
    };
    controls {
         managed XmToggleButton tbScan;
         managed XmTextField tfShutter;
         managed XmTextField tfRotStart;
         managed XmTextField tfRotEnd;
         managed XmTextField tfRotIncr;
         managed XmTextField tfTime;
         managed XmTextField tfAxis;
         managed XmTextField tfTemplate;
         managed XmTextField tfSeqStart;
         managed XmTextField tfSeqIncr;
         managed XmTextField tfDatum;
         managed XmTextField tfWavelength;
         managed XmTextField tfNumOsc;
         managed XmTextField tfDarkIntvl;
    };
    callbacks {
    };
};

object swScan : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAUTOMATIC;
        XmNscrollBarPlacement = XmTOP_LEFT;
        XmNscrollBarDisplayPolicy = XmSTATIC;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 9;
        XmNtopOffset = 36;
        XmNx = 0;
        XmNy = 36;
        XmNwidth = 1213;
        XmNheight = 70;
    };
    controls {
         managed XmForm form11;
    };
    callbacks {
    };
};

object frDarkIntvl : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frNumOsc;
        XmNx = 1125;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frNumOsc : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frWavelength;
        XmNx = 1065;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frWavelength : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frDatum;
        XmNx = 985;
        XmNy = 0;
!(BX)   _XmNwidth = 80;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frDatum : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frSeqIncr;
        XmNx = 845;
        XmNy = 0;
!(BX)   _XmNwidth = 140;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frSeqIncr : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frSeqStart;
        XmNx = 785;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frSeqStart : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 5;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frTemplate;
        XmNx = 725;
        XmNy = 0;
!(BX)   _XmNwidth = 60;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frTemplate : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frAxis;
        XmNx = 560;
        XmNy = 0;
!(BX)   _XmNwidth = 160;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frAxis : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frTime;
        XmNx = 480;
        XmNy = 0;
!(BX)   _XmNwidth = 80;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frTime : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frRotIncr;
        XmNx = 410;
        XmNy = 0;
!(BX)   _XmNwidth = 70;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frRotIncr : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frRotEnd;
        XmNx = 340;
        XmNy = 0;
!(BX)   _XmNwidth = 70;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frRotEnd : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frRotStart;
        XmNx = 250;
        XmNy = 0;
!(BX)   _XmNwidth = 90;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frRotStart : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frShutter1;
        XmNx = 160;
        XmNy = 0;
!(BX)   _XmNwidth = 90;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frShutter1 : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frScanNum;
        XmNx = 80;
        XmNy = 0;
!(BX)   _XmNwidth = 80;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object frScanNum : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNx = 0;
        XmNy = 0;
!(BX)   _XmNwidth = 80;
        XmNheight = 90;
    };
    controls {
    };
    callbacks {
    };
};

object lbShutter1 : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Shutter");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frShutter1;
        XmNrightWidget = XmFrame frShutter1;
        XmNtopWidget = XmFrame frShutter1;
        XmNx = 82;
        XmNy = 2;
        XmNwidth = 76;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbRotStart : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Rel rot", separate=true) &
!(BX) compound_string("start");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frRotStart;
        XmNrightWidget = XmFrame frRotStart;
        XmNtopWidget = XmFrame frRotStart;
        XmNx = 162;
        XmNy = 2;
        XmNwidth = 86;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbRotEnd : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Rel rot", separate=true) &
!(BX) compound_string("end");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frRotEnd;
        XmNrightWidget = XmFrame frRotEnd;
        XmNtopWidget = XmFrame frRotEnd;
        XmNx = 252;
        XmNy = 2;
        XmNwidth = 86;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbRotIncr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Rot", separate=true) &
!(BX) compound_string("incr");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frRotIncr;
        XmNrightWidget = XmFrame frRotIncr;
        XmNtopWidget = XmFrame frRotIncr;
        XmNx = 342;
        XmNy = 2;
        XmNwidth = 66;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbTime : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Time", separate=true) &
!(BX) compound_string("(sec)");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frTime;
        XmNrightWidget = XmFrame frTime;
        XmNtopWidget = XmFrame frTime;
        XmNx = 412;
        XmNy = 2;
        XmNwidth = 66;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbTemplate : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Template", separate=true);
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frTemplate;
        XmNrightWidget = XmFrame frTemplate;
        XmNtopWidget = XmFrame frTemplate;
        XmNx = 562;
        XmNy = 2;
        XmNwidth = 156;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbAxis : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("", separate=true) &
!(BX) compound_string("Axis");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frAxis;
        XmNrightWidget = XmFrame frAxis;
        XmNtopWidget = XmFrame frAxis;
        XmNx = 482;
        XmNy = 2;
        XmNwidth = 76;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSeqStart : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Seq", separate=true) &
!(BX) compound_string("start");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frSeqStart;
        XmNrightWidget = XmFrame frSeqStart;
        XmNtopWidget = XmFrame frSeqStart;
        XmNx = 727;
        XmNy = 2;
        XmNwidth = 56;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbSeqIncr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Seq", separate=true) &
!(BX) compound_string("incr");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frSeqIncr;
        XmNrightWidget = XmFrame frSeqIncr;
        XmNtopWidget = XmFrame frSeqIncr;
        XmNx = 787;
        XmNy = 2;
        XmNwidth = 56;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbDatum : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Relative", separate=true) &
!(BX) compound_string("start position");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frDatum;
        XmNrightWidget = XmFrame frDatum;
        XmNtopWidget = XmFrame frDatum;
        XmNx = 847;
        XmNy = 2;
        XmNwidth = 136;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbWavelength : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Wave-", separate=true) &
!(BX) compound_string("length");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frWavelength;
        XmNrightWidget = XmFrame frWavelength;
        XmNtopWidget = XmFrame frWavelength;
        XmNx = 987;
        XmNy = 2;
        XmNwidth = 76;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbNumOsc : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Num", separate=true) &
!(BX) compound_string("osci");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frNumOsc;
        XmNrightWidget = XmFrame frNumOsc;
        XmNtopWidget = XmFrame frNumOsc;
        XmNx = 1067;
        XmNy = 2;
        XmNwidth = 56;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbDarkIntvl : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Dark", separate=true) &
!(BX) compound_string("intvl");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frDarkIntvl;
        XmNrightWidget = XmFrame frDarkIntvl;
        XmNtopWidget = XmFrame frDarkIntvl;
        XmNx = 1127;
        XmNy = 2;
        XmNwidth = 56;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanNum : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Scan", separate=true) &
!(BX) compound_string("number");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame frScanNum;
        XmNrightWidget = XmFrame frScanNum;
        XmNtopWidget = XmFrame frScanNum;
        XmNx = 2;
        XmNy = 2;
        XmNwidth = 76;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object tbPhi : XmToggleButton widget {
    arguments {
        XmNmarginLeft = 16;
!(BX)   _XmNlabelString = compound_string("Phi");
!(BX)   _XmNselectColor = color('red');
        XmNindicatorSize = 12;
        XmNwidth = 70;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNarmCallback = procedure vScanRadio(50);
    };
};

object tbOmega : XmToggleButton widget {
    arguments {
        XmNmarginLeft = 16;
!(BX)   _XmNlabelString = compound_string("Omega");
        XmNmarginHeight = 2;
!(BX)   _XmNselectColor = color('red');
        XmNindicatorSize = 12;
        XmNwidth = 70;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNarmCallback = procedure vScanRadio(51);
    };
};

object rbAxis : XmRadioBox widget {
    arguments {
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 30;
        XmNleftWidget = XmFrame frAxis;
        XmNrightWidget = XmFrame frAxis;
        XmNtopWidget = XmFrame frAxis;
        XmNx = 482;
        XmNy = 30;
        XmNwidth = 76;
        XmNheight = 59;
    };
    controls {
         managed XmToggleButton tbPhi;
         managed XmToggleButton tbOmega;
    };
    callbacks {
    };
};

object sbRotStart : XmScrollBar widget {
    arguments {
        XmNminimum = -360;
        XmNmaximum = 440;
        XmNuserData = 1;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frRotStart;
        XmNrightWidget = XmFrame frRotStart;
        XmNtopWidget = XmFrame frRotStart;
        XmNx = 162;
        XmNy = 50;
        XmNwidth = 86;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(1);
        XmNtoTopCallback = procedure vScanScrollBarCB(1);
        XmNtoBottomCallback = procedure vScanScrollBarCB(1);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(1);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(1);
        XmNincrementCallback = procedure vScanScrollBarCB(1);
        XmNdragCallback = procedure vScanScrollBarCB(1);
        XmNdecrementCallback = procedure vScanScrollBarCB(1);
    };
};

object sbRotEnd : XmScrollBar widget {
    arguments {
        XmNminimum = -360;
!(BX)   _XmNvalue = 90;
        XmNmaximum = 440;
        XmNuserData = 2;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frRotEnd;
        XmNrightWidget = XmFrame frRotEnd;
        XmNtopWidget = XmFrame frRotEnd;
        XmNx = 252;
        XmNy = 50;
        XmNwidth = 86;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(2);
        XmNtoTopCallback = procedure vScanScrollBarCB(2);
        XmNtoBottomCallback = procedure vScanScrollBarCB(2);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(2);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(2);
        XmNincrementCallback = procedure vScanScrollBarCB(2);
        XmNdragCallback = procedure vScanScrollBarCB(2);
        XmNdecrementCallback = procedure vScanScrollBarCB(2);
    };
};

object sbRotIncr : XmScrollBar widget {
    arguments {
!(BX)   _XmNvalue = 20;
        XmNmaximum = 111;
        XmNuserData = 3;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frRotIncr;
        XmNrightWidget = XmFrame frRotIncr;
        XmNtopWidget = XmFrame frRotIncr;
        XmNx = 342;
        XmNy = 50;
        XmNwidth = 66;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(3);
        XmNtoTopCallback = procedure vScanScrollBarCB(3);
        XmNtoBottomCallback = procedure vScanScrollBarCB(3);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(3);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(3);
        XmNincrementCallback = procedure vScanScrollBarCB(3);
        XmNdragCallback = procedure vScanScrollBarCB(3);
        XmNdecrementCallback = procedure vScanScrollBarCB(3);
    };
};

object sbTime : XmScrollBar widget {
    arguments {
!(BX)   _XmNvalue = 180;
        XmNmaximum = 4000;
        XmNuserData = 4;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frTime;
        XmNrightWidget = XmFrame frTime;
        XmNtopWidget = XmFrame frTime;
        XmNx = 412;
        XmNy = 50;
        XmNwidth = 66;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(4);
        XmNtoTopCallback = procedure vScanScrollBarCB(4);
        XmNtoBottomCallback = procedure vScanScrollBarCB(4);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(4);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(4);
        XmNincrementCallback = procedure vScanScrollBarCB(4);
        XmNdragCallback = procedure vScanScrollBarCB(4);
        XmNdecrementCallback = procedure vScanScrollBarCB(4);
    };
};

object sbSeqStart : XmScrollBar widget {
    arguments {
        XmNminimum = -500;
!(BX)   _XmNvalue = 1;
        XmNmaximum = 611;
        XmNuserData = 7;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frSeqStart;
        XmNrightWidget = XmFrame frSeqStart;
        XmNtopWidget = XmFrame frSeqStart;
        XmNx = 727;
        XmNy = 50;
        XmNwidth = 56;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(7);
        XmNtoTopCallback = procedure vScanScrollBarCB(7);
        XmNtoBottomCallback = procedure vScanScrollBarCB(7);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(7);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(7);
        XmNincrementCallback = procedure vScanScrollBarCB(7);
        XmNdragCallback = procedure vScanScrollBarCB(7);
        XmNdecrementCallback = procedure vScanScrollBarCB(7);
    };
};

object sbSeqIncr : XmScrollBar widget {
    arguments {
        XmNminimum = -100;
!(BX)   _XmNvalue = 1;
        XmNmaximum = 122;
        XmNuserData = 8;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frSeqIncr;
        XmNrightWidget = XmFrame frSeqIncr;
        XmNtopWidget = XmFrame frSeqIncr;
        XmNx = 787;
        XmNy = 50;
        XmNwidth = 56;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(8);
        XmNtoTopCallback = procedure vScanScrollBarCB(8);
        XmNtoBottomCallback = procedure vScanScrollBarCB(8);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(8);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(8);
        XmNincrementCallback = procedure vScanScrollBarCB(8);
        XmNdragCallback = procedure vScanScrollBarCB(8);
        XmNdecrementCallback = procedure vScanScrollBarCB(8);
    };
};

object sbNumOsc : XmScrollBar widget {
    arguments {
!(BX)   _XmNvalue = 0;
        XmNmaximum = 111;
        XmNuserData = 11;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frNumOsc;
        XmNrightWidget = XmFrame frNumOsc;
        XmNtopWidget = XmFrame frNumOsc;
        XmNx = 1067;
        XmNy = 50;
        XmNwidth = 56;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(11);
        XmNtoTopCallback = procedure vScanScrollBarCB(11);
        XmNtoBottomCallback = procedure vScanScrollBarCB(11);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(11);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(11);
        XmNincrementCallback = procedure vScanScrollBarCB(11);
        XmNdragCallback = procedure vScanScrollBarCB(11);
        XmNdecrementCallback = procedure vScanScrollBarCB(11);
    };
};

object sbDarkIntvl : XmScrollBar widget {
    arguments {
!(BX)   _XmNvalue = 0;
        XmNmaximum = 555;
        XmNuserData = 12;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frDarkIntvl;
        XmNrightWidget = XmFrame frDarkIntvl;
        XmNtopWidget = XmFrame frDarkIntvl;
        XmNx = 1127;
        XmNy = 50;
        XmNwidth = 56;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNvalueChangedCallback = procedure vScanScrollBarCB(12);
        XmNtoTopCallback = procedure vScanScrollBarCB(12);
        XmNtoBottomCallback = procedure vScanScrollBarCB(12);
        XmNpageIncrementCallback = procedure vScanScrollBarCB(12);
        XmNpageDecrementCallback = procedure vScanScrollBarCB(12);
        XmNincrementCallback = procedure vScanScrollBarCB(12);
        XmNdragCallback = procedure vScanScrollBarCB(12);
        XmNdecrementCallback = procedure vScanScrollBarCB(12);
    };
};

object pbTemplate : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNhighlightOnEnter = true;
        XmNnavigationType = XmTAB_GROUP;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frTemplate;
        XmNrightWidget = XmFrame frTemplate;
        XmNtopWidget = XmFrame frTemplate;
        XmNx = 562;
        XmNy = 50;
        XmNwidth = 156;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Edit the image file template an" &
 "d directory");
    };
};

object tbShutterOpen : XmToggleButton widget {
    arguments {
        XmNmarginLeft = 16;
!(BX)   _XmNlabelString = compound_string("Open");
!(BX)   _XmNselectColor = color('red');
        XmNindicatorSize = 12;
        XmNwidth = 70;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNarmCallback = procedure vScanRadio(0);
    };
};

object tbShutterClosed : XmToggleButton widget {
    arguments {
        XmNmarginLeft = 16;
!(BX)   _XmNlabelString = compound_string("Closed");
!(BX)   _XmNselectColor = color('green');
        XmNindicatorSize = 12;
        XmNwidth = 70;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNarmCallback = procedure vScanRadio(1);
    };
};

object rbShutter : XmRadioBox widget {
    arguments {
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 30;
        XmNleftWidget = XmFrame frShutter1;
        XmNrightWidget = XmFrame frShutter1;
        XmNtopWidget = XmFrame frShutter1;
        XmNx = 82;
        XmNy = 30;
        XmNwidth = 76;
        XmNheight = 59;
    };
    controls {
         managed XmToggleButton tbShutterOpen;
         managed XmToggleButton tbShutterClosed;
    };
    callbacks {
    };
};

object pbDatum : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNhighlightOnEnter = true;
        XmNnavigationType = XmTAB_GROUP;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frDatum;
        XmNrightWidget = XmFrame frDatum;
        XmNtopWidget = XmFrame frDatum;
        XmNx = 847;
        XmNy = 50;
        XmNwidth = 136;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Edit datum (relative zero, home" &
 ") angles for this scan");
    };
};

object pbWavelength : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNhighlightOnEnter = true;
        XmNnavigationType = XmTAB_GROUP;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 50;
        XmNleftWidget = XmFrame frWavelength;
        XmNrightWidget = XmFrame frWavelength;
        XmNtopWidget = XmFrame frWavelength;
        XmNx = 987;
        XmNy = 50;
        XmNwidth = 76;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Edit wavelength for this scan");
    };
};

object lbDarkIntvlCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frDarkIntvl;
        XmNrightWidget = XmFrame frDarkIntvl;
        XmNtopWidget = XmFrame frDarkIntvl;
        XmNx = 1127;
        XmNy = 95;
        XmNwidth = 56;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbNumOscCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frNumOsc;
        XmNrightWidget = XmFrame frNumOsc;
        XmNtopWidget = XmFrame frNumOsc;
        XmNx = 1067;
        XmNy = 95;
        XmNwidth = 56;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbWavelengthCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frWavelength;
        XmNrightWidget = XmFrame frWavelength;
        XmNtopWidget = XmFrame frWavelength;
        XmNx = 987;
        XmNy = 95;
        XmNwidth = 76;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbDatumCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frDatum;
        XmNrightWidget = XmFrame frDatum;
        XmNtopWidget = XmFrame frDatum;
        XmNx = 847;
        XmNy = 95;
        XmNwidth = 136;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSeqIncrCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frSeqIncr;
        XmNrightWidget = XmFrame frSeqIncr;
        XmNtopWidget = XmFrame frSeqIncr;
        XmNx = 787;
        XmNy = 95;
        XmNwidth = 56;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSeqStartCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frSeqStart;
        XmNrightWidget = XmFrame frSeqStart;
        XmNtopWidget = XmFrame frSeqStart;
        XmNx = 727;
        XmNy = 95;
        XmNwidth = 56;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbTemplateCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frTemplate;
        XmNrightWidget = XmFrame frTemplate;
        XmNtopWidget = XmFrame frTemplate;
        XmNx = 562;
        XmNy = 95;
        XmNwidth = 156;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbAxisCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frAxis;
        XmNrightWidget = XmFrame frAxis;
        XmNtopWidget = XmFrame frAxis;
        XmNx = 482;
        XmNy = 95;
        XmNwidth = 76;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbTimeCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frTime;
        XmNrightWidget = XmFrame frTime;
        XmNtopWidget = XmFrame frTime;
        XmNx = 412;
        XmNy = 95;
        XmNwidth = 66;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbRotIncrCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frRotIncr;
        XmNrightWidget = XmFrame frRotIncr;
        XmNtopWidget = XmFrame frRotIncr;
        XmNx = 342;
        XmNy = 95;
        XmNwidth = 66;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbRotEndCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frRotEnd;
        XmNrightWidget = XmFrame frRotEnd;
        XmNtopWidget = XmFrame frRotEnd;
        XmNx = 252;
        XmNy = 95;
        XmNwidth = 86;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbRotStartCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frRotStart;
        XmNrightWidget = XmFrame frRotStart;
        XmNtopWidget = XmFrame frRotStart;
        XmNx = 162;
        XmNy = 95;
        XmNwidth = 86;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbShutter1Curr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frShutter1;
        XmNrightWidget = XmFrame frShutter1;
        XmNtopWidget = XmFrame frShutter1;
        XmNx = 82;
        XmNy = 95;
        XmNwidth = 76;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanNumCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Current", separate=true) &
!(BX) compound_string("image: ");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 95;
        XmNleftWidget = XmFrame frScanNum;
        XmNrightWidget = XmFrame frScanNum;
        XmNtopWidget = XmFrame frScanNum;
        XmNx = 2;
        XmNy = 95;
        XmNwidth = 76;
        XmNheight = 50;
    };
    controls {
    };
    callbacks {
    };
};

object form18 : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_ANY;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 18;
        XmNtopOffset = 0;
        XmNtopWidget = XmScrolledWindow swScan;
        XmNx = 18;
        XmNy = 106;
        XmNwidth = 1185;
        XmNheight = 145;
    };
    controls {
         managed XmLabel lbScanNumCurr;
         managed XmLabel lbShutter1Curr;
         managed XmLabel lbRotStartCurr;
         managed XmLabel lbRotEndCurr;
         managed XmLabel lbRotIncrCurr;
         managed XmLabel lbTimeCurr;
         managed XmLabel lbAxisCurr;
         managed XmLabel lbTemplateCurr;
         managed XmLabel lbSeqStartCurr;
         managed XmLabel lbSeqIncrCurr;
         managed XmLabel lbDatumCurr;
         managed XmLabel lbWavelengthCurr;
         managed XmLabel lbNumOscCurr;
         managed XmLabel lbDarkIntvlCurr;
         managed XmPushButton pbWavelength;
         managed XmPushButton pbDatum;
         managed XmRadioBox rbShutter;
         managed XmPushButton pbTemplate;
         managed XmScrollBar sbDarkIntvl;
         managed XmScrollBar sbNumOsc;
         managed XmScrollBar sbSeqIncr;
         managed XmScrollBar sbSeqStart;
         managed XmScrollBar sbTime;
         managed XmScrollBar sbRotIncr;
         managed XmScrollBar sbRotEnd;
         managed XmScrollBar sbRotStart;
         managed XmRadioBox rbAxis;
         managed XmLabel lbScanNum;
         managed XmLabel lbDarkIntvl;
         managed XmLabel lbNumOsc;
         managed XmLabel lbWavelength;
         managed XmLabel lbDatum;
         managed XmLabel lbSeqIncr;
         managed XmLabel lbSeqStart;
         managed XmLabel lbAxis;
         managed XmLabel lbTemplate;
         managed XmLabel lbTime;
         managed XmLabel lbRotIncr;
         managed XmLabel lbRotEnd;
         managed XmLabel lbRotStart;
         managed XmLabel lbShutter1;
         managed XmFrame frScanNum;
         managed XmFrame frShutter1;
         managed XmFrame frRotStart;
         managed XmFrame frRotEnd;
         managed XmFrame frRotIncr;
         managed XmFrame frTime;
         managed XmFrame frAxis;
         managed XmFrame frTemplate;
         managed XmFrame frSeqStart;
         managed XmFrame frSeqIncr;
         managed XmFrame frDatum;
         managed XmFrame frWavelength;
         managed XmFrame frNumOsc;
         managed XmFrame frDarkIntvl;
    };
    callbacks {
    };
};

object spScan : XmSeparator widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 9;
        XmNtopWidget = XmForm form18;
        XmNx = 0;
        XmNy = 260;
        XmNwidth = 1222;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanSelected : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Scan 1 of 1 selected");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 280;
        XmNtopOffset = 5;
        XmNx = 280;
        XmNy = 5;
    };
    controls {
    };
    callbacks {
    };
};

object abScan : XmArrowButton widget {
    arguments {
        XmNarrowDirection = XmARROW_LEFT;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 700;
        XmNtopOffset = 0;
        XmNx = 700;
        XmNy = 0;
        XmNwidth = 25;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Enlarge or shrink horizontal wi" &
 "ndow size");
        XmNactivateCallback = procedure vScanArrowCB();
    };
};

object pbScanFileOpen : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("O");
!(BX)   _XmNlabelString = compound_string("Open...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Load a scan table file");
        XmNactivateCallback = procedure vScanFileCB();
    };
};

object pbScanFileSave : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNlabelString = compound_string("Save");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Save a scan table to the same f" &
 "ile");
        XmNactivateCallback = procedure vScanFileCB();
    };
};

object pbScanFileSaveAs : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("a");
!(BX)   _XmNlabelString = compound_string("Save as...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Save a scan table to a new file" &
 "");
        XmNactivateCallback = procedure vScanFileCB();
    };
};

object spScanFile : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbScanFileClose : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNlabelString = compound_string("Close");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Close this scan dialog window");
        XmNactivateCallback = procedure vScanFileCB();
    };
};

object pmScanFile : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 134;
        XmNheight = 114;
    };
    controls {
         managed XmPushButton pbScanFileOpen;
         managed XmPushButton pbScanFileSave;
         managed XmPushButton pbScanFileSaveAs;
         managed XmSeparator spScanFile;
         managed XmPushButton pbScanFileClose;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Load and save scan table files");
    };
};

object cbScanFile : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("F");
!(BX)   _XmNlabelString = compound_string("File");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmScanFile;
    };
    callbacks {
    };
};

object pbScanEditCopy : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNlabelString = compound_string("Copy");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Copy a scan to buffer");
        XmNactivateCallback = procedure vScanEditCB(0);
    };
};

object pbScanEditCut : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("t");
!(BX)   _XmNlabelString = compound_string("Cut");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Cut a scan to buffer");
        XmNactivateCallback = procedure vScanEditCB(1);
    };
};

object pbScanEditPaste : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("P");
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Paste");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Paste a saved scan into current" &
 " scan");
        XmNactivateCallback = procedure vScanEditCB(2);
    };
};

object pbScanEditInsert : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("I");
!(BX)   _XmNlabelString = compound_string("Insert");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Insert a new scan after current" &
 " scan");
        XmNactivateCallback = procedure vScanEditCB(3);
    };
};

object pbScanEditDelete : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNlabelString = compound_string("Delete");
        XmNuserData = 4;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Delete current scan");
        XmNactivateCallback = procedure vScanEditCB(4);
    };
};

object spScanEdit : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbScanEditPasteMW : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("M");
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Paste from MW");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Paste scan from main window int" &
 "o current scan");
        XmNactivateCallback = procedure vScanEditCB(5);
    };
};

object pbScanEditDeleteAll : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("A");
!(BX)   _XmNlabelString = compound_string("Delete All");
        XmNuserData = 4;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Delete all scans");
        XmNactivateCallback = procedure vScanEditCB(6);
    };
};

object spScanEdit1 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbScanEditMulti2 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("2-wavelength-ify");
        XmNuserData = 7;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make selected scan a 2 waveleng" &
 "th experiment");
        XmNactivateCallback = procedure vScanEditCB(7);
    };
};

object pbScanEditMulti3 : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("2-wavelength-ify");
        XmNuserData = 7;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make selected scan a 3 waveleng" &
 "th experiment");
        XmNactivateCallback = procedure vScanEditCB(8);
    };
};

object pbScanEditMulti3i : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("3-wave+inverse-ify");
        XmNuserData = 7;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make selected scan a 3-waveleng" &
 "th inverse beam experiment");
        XmNactivateCallback = procedure vScanEditCB(9);
    };
};

object pmScanEditMulti : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 230;
        XmNheight = 85;
    };
    controls {
         managed XmPushButton pbScanEditMulti2;
         managed XmPushButton pbScanEditMulti3;
         managed XmPushButton pbScanEditMulti3i;
    };
    callbacks {
    };
};

object cbScanEditMulti : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("MAD-ify");
    };
    controls {
         unmanaged XmPulldownMenu pmScanEditMulti;
    };
    callbacks {
    };
};

object pmScanEdit : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 189;
        XmNheight = 222;
    };
    controls {
         managed XmPushButton pbScanEditCopy;
         managed XmPushButton pbScanEditCut;
         managed XmPushButton pbScanEditPaste;
         managed XmPushButton pbScanEditInsert;
         managed XmPushButton pbScanEditDelete;
         managed XmSeparator spScanEdit;
         managed XmPushButton pbScanEditPasteMW;
         managed XmPushButton pbScanEditDeleteAll;
         managed XmSeparator spScanEdit1;
         managed XmCascadeButton cbScanEditMulti;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Edit whole scans in the scan ta" &
 "ble");
    };
};

object cbScanEdit : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("E");
!(BX)   _XmNlabelString = compound_string("Edit");
        XmNx = 69;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmScanEdit;
    };
    callbacks {
    };
};

object pbScanViewEnlarge : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("E");
!(BX)   _XmNlabelString = compound_string("Enlarge vertical scroll");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Enlarge the view of scans");
        XmNactivateCallback = procedure vScanViewCB(0);
    };
};

object pbScanViewShrink : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNlabelString = compound_string("Shrink vertical scroll");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Shrink the view of scans");
        XmNactivateCallback = procedure vScanViewCB(1);
    };
};

object pbScanViewNarrow : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("N");
!(BX)   _XmNlabelString = compound_string("Narrow horizontally");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make the scan dialog window sma" &
 "ller horizontally");
        XmNactivateCallback = procedure vScanArrowCB();
    };
};

object pbScanViewWiden : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("W");
!(BX)   _XmNlabelString = compound_string("Widen horizontally");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make the scan dialog window wid" &
 "er horizontally");
        XmNactivateCallback = procedure vScanArrowCB();
    };
};

object pmScanView : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 290;
        XmNheight = 112;
    };
    controls {
         managed XmPushButton pbScanViewEnlarge;
         managed XmPushButton pbScanViewShrink;
         managed XmPushButton pbScanViewNarrow;
         managed XmPushButton pbScanViewWiden;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Change number of scans viewed");
    };
};

object cbScanView : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("V");
!(BX)   _XmNlabelString = compound_string("View");
        XmNx = 133;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmScanView;
    };
    callbacks {
    };
};

object pbScanHelpHTML : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("H");
!(BX)   _XmNlabelString = compound_string("Via HTML viewer");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Get help via HTML viewer");
        XmNactivateCallback = procedure vHTMLHelp("ScanHelpHTML$$");
    };
};

object pmScanHelp : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 194;
        XmNheight = 31;
    };
    controls {
         managed XmPushButton pbScanHelpHTML;
    };
    callbacks {
        XmNmapCallback = procedure vPostHelp("Get help on this dialog");
    };
};

object cbScanHelp : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("H");
!(BX)   _XmNlabelString = compound_string("Help");
        XmNx = 197;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmScanHelp;
    };
    callbacks {
    };
};

object mnScan : XmMenuBar widget {
    arguments {
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 266;
        XmNheight = 35;
    };
    controls {
         managed XmCascadeButton cbScanFile;
         managed XmCascadeButton cbScanEdit;
         managed XmCascadeButton cbScanView;
         managed XmCascadeButton cbScanHelp;
    };
    callbacks {
    };
};

object twScan : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNvalue = "This scrolled text window contai" &
 "ns\n\
additional information about scans, \n\
such as disk space usage" &
 ".";
    };
    controls {
    };
    callbacks {
    };
};

object swScan1 : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frScanProgress;
        XmNleftOffset = 2;
        XmNrightOffset = 1;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frImageProgress;
        XmNtopWidget = XmFrame frImageProgress;
        XmNx = 362;
        XmNy = 292;
        XmNwidth = 859;
        XmNheight = 250;
    };
    controls {
         managed XmText twScan;
    };
    callbacks {
    };
};

object lbImageTimeRem : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Remaining time:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 40;
        XmNx = 0;
        XmNy = 40;
        XmNwidth = 205;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbImageTimeElapsed : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Image elapsed time:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 2;
        XmNx = 0;
        XmNy = 2;
        XmNwidth = 205;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbImageTimeElapsedCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("0:00.00");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 123;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object frImageTimeElapsed : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNresizable = false;
        XmNleftOffset = 225;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 225;
        XmNy = 0;
        XmNwidth = 129;
        XmNheight = 36;
    };
    controls {
         managed XmLabel lbImageTimeElapsedCurr;
    };
    callbacks {
    };
};

object lbImageTimeRemCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("0:00.00");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 123;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object frImageTimeRem : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 225;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frImageTimeElapsed;
        XmNx = 225;
        XmNy = 36;
        XmNwidth = 129;
        XmNheight = 36;
    };
    controls {
         managed XmLabel lbImageTimeRemCurr;
    };
    callbacks {
    };
};

object scImageTime : XmScale widget {
    arguments {
        XmNsensitive = false;
        XmNtraversalOn = false;
        XmNscaleHeight = 25;
        XmNshowValue = true;
        XmNorientation = XmHORIZONTAL;
        XmNnavigationType = XmNONE;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 225;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frImageTimeRem;
        XmNx = 225;
        XmNy = 72;
        XmNwidth = 129;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbImagePercent : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Percent complete:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 75;
        XmNx = 0;
        XmNy = 75;
        XmNwidth = 205;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object foImageProgress : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 354;
        XmNheight = 119;
    };
    controls {
         managed XmLabel lbImagePercent;
         managed XmScale scImageTime;
         managed XmFrame frImageTimeRem;
         managed XmFrame frImageTimeElapsed;
         managed XmLabel lbImageTimeElapsed;
         managed XmLabel lbImageTimeRem;
    };
    callbacks {
    };
};

object frImageProgress : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmSeparator spScan;
        XmNx = 0;
        XmNy = 292;
        XmNwidth = 360;
        XmNheight = 125;
    };
    controls {
         managed XmForm foImageProgress;
    };
    callbacks {
    };
};

object lbScanTimeRem : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Remaining time:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 40;
        XmNx = 0;
        XmNy = 40;
        XmNwidth = 205;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanTimeElapsed : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Scan elapsed time:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 2;
        XmNx = 0;
        XmNy = 2;
        XmNwidth = 205;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanTimeElapsedCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("0:00.00");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 123;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object frScanTimeElapsed : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNresizable = false;
        XmNleftOffset = 225;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 225;
        XmNy = 0;
        XmNwidth = 129;
        XmNheight = 36;
    };
    controls {
         managed XmLabel lbScanTimeElapsedCurr;
    };
    callbacks {
    };
};

object lbScanTimeRemCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("0:00.00");
        XmNtraversalOn = false;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 123;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object frScanTimeRem : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 225;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frScanTimeElapsed;
        XmNx = 225;
        XmNy = 36;
        XmNwidth = 129;
        XmNheight = 36;
    };
    controls {
         managed XmLabel lbScanTimeRemCurr;
    };
    callbacks {
    };
};

object scScanTime : XmScale widget {
    arguments {
        XmNsensitive = false;
        XmNtraversalOn = false;
        XmNscaleHeight = 25;
        XmNshowValue = true;
        XmNorientation = XmHORIZONTAL;
        XmNnavigationType = XmNONE;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 225;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frScanTimeRem;
        XmNx = 225;
        XmNy = 72;
        XmNwidth = 129;
        XmNheight = 45;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanPercent : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Percent complete:");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 75;
        XmNx = 0;
        XmNy = 75;
        XmNwidth = 205;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object foScanProgress : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 354;
        XmNheight = 119;
    };
    controls {
         managed XmLabel lbScanPercent;
         managed XmScale scScanTime;
         managed XmFrame frScanTimeRem;
         managed XmFrame frScanTimeElapsed;
         managed XmLabel lbScanTimeElapsed;
         managed XmLabel lbScanTimeRem;
    };
    callbacks {
    };
};

object frScanProgress : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNrightWidget = XmFrame frImageProgress;
        XmNtopWidget = XmFrame frImageProgress;
        XmNx = 0;
        XmNy = 417;
        XmNwidth = 360;
        XmNheight = 125;
    };
    controls {
         managed XmForm foScanProgress;
    };
    callbacks {
    };
};

object form9 : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_ANY;
        XmNx = 11;
        XmNy = 13;
        XmNwidth = 1222;
        XmNheight = 542;
    };
    controls {
         managed XmFrame frScanProgress;
         managed XmFrame frImageProgress;
         managed XmScrolledWindow swScan1;
         managed XmMenuBar mnScan;
         managed XmArrowButton abScan;
         managed XmLabel lbScanSelected;
         managed XmSeparator spScan;
         managed XmForm form18;
         managed XmScrolledWindow swScan;
    };
    callbacks {
    };
};

object sdCollectScan : XmSelectionDialog widget {
    arguments {
!(BX)   _XmNdialogTitle = compound_string("d*TREK - dtcollect: Scan");
        XmNdialogType = XmDIALOG_PROMPT;
!(BX)   _XmNokLabelString = compound_string("Update");
!(BX)   _XmNhelpLabelString = compound_string("ABORT");
!(BX)   _XmNcancelLabelString = compound_string("Pause");
!(BX)   _XmNapplyLabelString = compound_string("Scan");
        XmNautoUnmanage = false;
        XmNx = 8;
        XmNy = 32;
        XmNwidth = 1244;
        XmNheight = 714;
    };
    controls {
        Xm_Apply managed {
        };
!(BX)         unmanaged XmDialogShell xmDialogShellCollectScanFile;
!(BX)         unmanaged XmDialogShell xmDialogShellDatum;
         managed XmForm form9;
    };
    callbacks {
        XmNhelpCallback = procedure vScanCB();
        XmNokCallback = procedure vScanCB();
        XmNcancelCallback = procedure vScanCB();
        XmNapplyCallback = procedure vScanCB();
    };
};

!(BX)object xmDialogShellCollectScan : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNwidth = 1244;
!(BX)        XmNheight = 714;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmSelectionDialog sdCollectScan;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object pbFileNewCrysGon : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNlabelString = compound_string("Crystal goniometer");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Initialize the crystal goniomet" &
 "er");
        XmNactivateCallback = procedure vFileNewCB();
    };
};

object pbFileNewDetGon : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("g");
!(BX)   _XmNlabelString = compound_string("Detector goniometer");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Initialize the detector goniome" &
 "ter");
        XmNactivateCallback = procedure vFileNewCB();
    };
};

object pbFileNewDet : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("D");
!(BX)   _XmNlabelString = compound_string("Detector");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Initialize the detector(s)");
        XmNactivateCallback = procedure vFileNewCB();
    };
};

object pbFileNewShutter : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNlabelString = compound_string("Shutter");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Initialize the shutter");
        XmNactivateCallback = procedure vFileNewCB();
    };
};

object pbFileNewSensor : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("e");
!(BX)   _XmNlabelString = compound_string("Sensors");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Initialize any sensors");
        XmNactivateCallback = procedure vFileNewCB();
    };
};

object separator : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbFileNewSource : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("o");
!(BX)   _XmNlabelString = compound_string("Source");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Initialize all available device" &
 "s");
        XmNactivateCallback = procedure vFileNewCB();
    };
};

object separator1 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbFileNewAll : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("A");
!(BX)   _XmNlabelString = compound_string("All");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Initialize all available device" &
 "s");
        XmNactivateCallback = procedure vFileNewCB();
    };
};

object pmFileNew : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 242;
        XmNheight = 197;
    };
    controls {
         managed XmPushButton pbFileNewCrysGon;
         managed XmPushButton pbFileNewDetGon;
         managed XmPushButton pbFileNewDet;
         managed XmPushButton pbFileNewShutter;
         managed XmPushButton pbFileNewSensor;
         managed XmSeparator separator;
         managed XmPushButton pbFileNewSource;
         managed XmSeparator separator1;
         managed XmPushButton pbFileNewAll;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Initialize various devices");
    };
};

object cbFileNew : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("I");
!(BX)   _XmNlabelString = compound_string("Initialize");
    };
    controls {
         unmanaged XmPulldownMenu pmFileNew;
    };
    callbacks {
    };
};

object pbFileOpen : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("O");
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Open...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Select an image header to open " &
 "and read");
        XmNactivateCallback = procedure vFileOpenSaveCB();
    };
};

object pbFileSaveAs : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("a");
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Save as...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Save the header to a new file");
        XmNactivateCallback = procedure vFileOpenSaveCB();
    };
};

object spFile1 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbFilePref : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("r");
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Preferences...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
    };
};

object pbFilePrint : XmPushButton widget {
    arguments {
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Print...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Print an image file in PostScri" &
 "pt format to a file");
    };
};

object spFile2 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object spFile3 : XmSeparator widget {
    arguments {
    };
    controls {
    };
    callbacks {
    };
};

object pbFileExit : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("x");
!(BX)   _XmNlabelString = compound_string("Exit");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Exit from dtcollect");
        XmNactivateCallback = procedure vExitCB(0);
    };
};

object pmFile : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 201;
        XmNheight = 170;
    };
    controls {
         managed XmCascadeButton cbFileNew;
         managed XmPushButton pbFileOpen;
         managed XmPushButton pbFileSaveAs;
         managed XmSeparator spFile1;
         managed XmPushButton pbFilePref;
         managed XmPushButton pbFilePrint;
         managed XmSeparator spFile2;
         managed XmSeparator spFile3;
         managed XmPushButton pbFileExit;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Perform various tasks with imag" &
 "e files or exit from dtcollect");
    };
};

object cbFile : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("F");
!(BX)   _XmNlabelString = compound_string("File");
        XmNx = 5;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmFile;
    };
    callbacks {
    };
};

object pbEditHeader : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("h");
!(BX)   _XmNlabelString = compound_string("Image header items...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Edit items that go in all image" &
 " headers");
        XmNactivateCallback = procedure vEditHeaderCB();
    };
};

object pbEditDetector : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("D");
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Detector items...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Edit detector properties");
    };
};

object pbEditClearAll : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("All text");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Clear entire output text");
        XmNactivateCallback = procedure vEditClearCB();
    };
};

object pbEditClearSel : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Selected text");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Clear entire output text");
        XmNactivateCallback = procedure vEditClearCB();
    };
};

object pmEditClear : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 170;
        XmNheight = 58;
    };
    controls {
         managed XmPushButton pbEditClearAll;
         managed XmPushButton pbEditClearSel;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Clear output window");
    };
};

object cbEditClear : XmCascadeButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Clear output");
    };
    controls {
         unmanaged XmPulldownMenu pmEditClear;
    };
    callbacks {
    };
};

object pmEdit : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 285;
        XmNheight = 83;
    };
    controls {
         managed XmPushButton pbEditHeader;
         managed XmPushButton pbEditDetector;
         managed XmCascadeButton cbEditClear;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Edit various properties of dtco" &
 "llect");
    };
};

object cbEdit : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("E");
!(BX)   _XmNlabelString = compound_string("Edit");
        XmNx = 69;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmEdit;
    };
    callbacks {
    };
};

object pbViewHeader : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("h");
!(BX)   _XmNlabelString = compound_string("Image header...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("View the image header in anothe" &
 "r window");
    };
};

object pmView : XmPulldownMenu widget {
    arguments {
        XmNsensitive = true;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 194;
        XmNheight = 31;
    };
    controls {
         managed XmPushButton pbViewHeader;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("View various properties of a sc" &
 "an or image display");
    };
};

object cbView : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("V");
!(BX)   _XmNlabelString = compound_string("View");
        XmNx = 133;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmView;
    };
    callbacks {
    };
};

object pbCollectScan : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("S");
!(BX)   _XmNlabelString = compound_string("Scan...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Pop-up the Scan Table dialog");
        XmNactivateCallback = procedure vCollectScanCB();
    };
};

object pbCollect2 : XmPushButton widget {
    arguments {
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Reserved...");
    };
    controls {
    };
    callbacks {
    };
};

object pbCollect3 : XmPushButton widget {
    arguments {
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Reserved...");
    };
    controls {
    };
    callbacks {
    };
};

object pbCollect4 : XmPushButton widget {
    arguments {
        XmNsensitive = false;
!(BX)   _XmNlabelString = compound_string("Reserved");
    };
    controls {
    };
    callbacks {
    };
};

object pmCollect : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 146;
        XmNheight = 112;
    };
    controls {
         managed XmPushButton pbCollectScan;
         managed XmPushButton pbCollect2;
         managed XmPushButton pbCollect3;
         managed XmPushButton pbCollect4;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Select various data collection " &
 "methods");
    };
};

object cbCollect : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("C");
!(BX)   _XmNlabelString = compound_string("Collect");
        XmNx = 197;
        XmNy = 5;
        XmNwidth = 100;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmCollect;
    };
    callbacks {
    };
};

object pbHelpHTML : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("H");
!(BX)   _XmNlabelString = compound_string("Help via HTML viewer");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Get help with a HTML viewer in " &
 "another window");
        XmNactivateCallback = procedure vHTMLHelp("dtcollect$$");
    };
};

object pbHelpAbout : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("About...");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("List version number");
        XmNactivateCallback = procedure vPopDialogCB();
    };
};

object pmHelp : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 254;
        XmNheight = 58;
    };
    controls {
         managed XmPushButton pbHelpHTML;
         managed XmPushButton pbHelpAbout;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Get help various ways");
    };
};

object cbHelp : XmCascadeButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("H");
!(BX)   _XmNlabelString = compound_string("Help");
        XmNx = 297;
        XmNy = 5;
        XmNwidth = 64;
        XmNheight = 25;
    };
    controls {
         unmanaged XmPulldownMenu pmHelp;
    };
    callbacks {
    };
};

object menuBar : XmMenuBar widget {
    arguments {
        XmNwidth = 887;
        XmNheight = 35;
    };
    controls {
         managed XmCascadeButton cbFile;
         managed XmCascadeButton cbEdit;
         managed XmCascadeButton cbView;
         managed XmCascadeButton cbCollect;
         managed XmCascadeButton cbHelp;
    };
    callbacks {
    };
};

object lbShutter : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Shutter");
        XmNtraversalOn = false;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 139;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object pbShutter : XmPushButton widget {
    arguments {
        XmNbackground = color('green');
!(BX)   _XmNmnemonic = keysym("d");
!(BX)   _XmNlabelString = compound_string("Closed");
        XmNuserData = 0;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNresizable = false;
        XmNleftOffset = 115;
        XmNrightOffset = 9;
        XmNtopOffset = 7;
        XmNx = 115;
        XmNy = 7;
        XmNwidth = 310;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Open or close the shutter");
        XmNactivateCallback = procedure vMainCB();
    };
};

object fmShutter : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 434;
        XmNheight = 49;
    };
    controls {
         managed XmPushButton pbShutter;
         managed XmLabel lbShutter;
    };
    callbacks {
    };
};

object frShutter : XmFrame widget {
    arguments {
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNrightWidget = XmFrame frCommand;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 440;
        XmNheight = 55;
    };
    controls {
         managed XmForm fmShutter;
    };
    callbacks {
    };
};

object lbCrystal : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Crystal ");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbCrysMoveTo : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Move to");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 110;
        XmNtopOffset = 10;
        XmNx = 110;
        XmNy = 10;
        XmNwidth = 130;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbCrysCurr : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Current");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 300;
        XmNtopOffset = 0;
        XmNtopWidget = XmLabel lbCrysMoveTo;
        XmNx = 300;
        XmNy = 10;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbCrysOmega : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Omega:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfCrysOmega;
        XmNx = 0;
        XmNy = 45;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbCrysChi : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Chi:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfCrysChi;
        XmNx = 0;
        XmNy = 85;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbCrysPhi : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Phi:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfCrysPhi;
        XmNx = 0;
        XmNy = 125;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object tfCrysOmega : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.00";
        XmNuserData = 12000;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 120;
        XmNtopOffset = 40;
        XmNx = 120;
        XmNy = 40;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfCrysChi : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.00";
        XmNuserData = 12001;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfCrysOmega;
        XmNx = 120;
        XmNy = 80;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfCrysPhi : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.00";
        XmNuserData = 12002;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfCrysChi;
        XmNx = 120;
        XmNy = 120;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object pbCrysMove : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("M");
!(BX)   _XmNlabelString = compound_string("M", separate=true) &
!(BX) compound_string("o", separate=true) &
!(BX) compound_string("v", separate=true) &
!(BX) compound_string("e");
        XmNhighlightOnEnter = true;
        XmNuserData = 0;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 250;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfCrysOmega;
        XmNx = 250;
        XmNy = 40;
        XmNwidth = 40;
        XmNheight = 120;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Move the crystal goniometer to " &
 "the requested position");
        XmNactivateCallback = procedure vMainCB();
    };
};

object lbCrysOmegaCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frCrysOmega : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfCrysOmega;
        XmNx = 295;
        XmNy = 40;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbCrysOmegaCurr;
    };
    callbacks {
    };
};

object lbCrysChiCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frCrysChi : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frCrysOmega;
        XmNx = 295;
        XmNy = 80;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbCrysChiCurr;
    };
    callbacks {
    };
};

object lbCrysPhiCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frCrysPhi : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frCrysChi;
        XmNx = 295;
        XmNy = 120;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbCrysPhiCurr;
    };
    callbacks {
    };
};

object fmCrystal : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 434;
        XmNheight = 164;
    };
    controls {
         managed XmFrame frCrysPhi;
         managed XmFrame frCrysChi;
         managed XmFrame frCrysOmega;
         managed XmPushButton pbCrysMove;
         managed XmTextField tfCrysPhi;
         managed XmTextField tfCrysChi;
         managed XmTextField tfCrysOmega;
         managed XmLabel lbCrysPhi;
         managed XmLabel lbCrysChi;
         managed XmLabel lbCrysOmega;
         managed XmLabel lbCrysCurr;
         managed XmLabel lbCrysMoveTo;
         managed XmLabel lbCrystal;
    };
    callbacks {
    };
};

object frCrystal : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frExpose;
        XmNtopWidget = XmFrame frSource;
        XmNx = 440;
        XmNy = 55;
        XmNwidth = 440;
        XmNheight = 170;
    };
    controls {
         managed XmForm fmCrystal;
    };
    callbacks {
    };
};

object lbDetector : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Detector");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbDetCurr : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_CENTER;
!(BX)   _XmNlabelString = compound_string("Current");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 300;
        XmNtopOffset = 0;
        XmNtopWidget = XmLabel lbDetMoveTo;
        XmNx = 300;
        XmNy = 5;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbDetMoveTo : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_CENTER;
!(BX)   _XmNlabelString = compound_string("Move to");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 110;
        XmNtopOffset = 5;
        XmNx = 110;
        XmNy = 5;
        XmNwidth = 130;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbDetDist : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Distance:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfDetDist;
        XmNx = 0;
        XmNy = 40;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbDetTheta : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("2Theta:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfDetTheta;
        XmNx = 0;
        XmNy = 80;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object tfDetTheta : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.00";
        XmNuserData = 13001;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfDetDist;
        XmNx = 120;
        XmNy = 75;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfDetDist : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "100.00";
        XmNuserData = 13000;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 0;
        XmNtopWidget = XmLabel lbDetMoveTo;
        XmNx = 120;
        XmNy = 35;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object pbDetMove : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("o");
!(BX)   _XmNlabelString = compound_string("M", separate=true) &
!(BX) compound_string("o", separate=true) &
!(BX) compound_string("v", separate=true) &
!(BX) compound_string("e");
        XmNhighlightOnEnter = true;
        XmNuserData = 0;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 248;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfDetDist;
        XmNx = 248;
        XmNy = 35;
        XmNwidth = 40;
        XmNheight = 80;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Move the detector to the reques" &
 "ted position");
        XmNactivateCallback = procedure vMainCB();
    };
};

object lbDetDistCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frDetDist : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfDetDist;
        XmNx = 295;
        XmNy = 35;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbDetDistCurr;
    };
    callbacks {
    };
};

object lbDetThetaCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frDetTheta : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frDetDist;
        XmNx = 295;
        XmNy = 75;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbDetThetaCurr;
    };
    callbacks {
    };
};

object fmDetector : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 434;
        XmNheight = 120;
    };
    controls {
         managed XmFrame frDetTheta;
         managed XmFrame frDetDist;
         managed XmPushButton pbDetMove;
         managed XmTextField tfDetDist;
         managed XmTextField tfDetTheta;
         managed XmLabel lbDetTheta;
         managed XmLabel lbDetDist;
         managed XmLabel lbDetMoveTo;
         managed XmLabel lbDetCurr;
         managed XmLabel lbDetector;
    };
    callbacks {
    };
};

object frDetector : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frExpose;
        XmNtopWidget = XmFrame frCrystal;
        XmNx = 440;
        XmNy = 225;
        XmNwidth = 440;
        XmNheight = 126;
    };
    controls {
         managed XmForm fmDetector;
    };
    callbacks {
    };
};

object lbExpTime : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Time:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfExpTime;
        XmNx = 0;
        XmNy = 82;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbExpWidth : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Width:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfExpWidth;
        XmNx = 0;
        XmNy = 122;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object pbExpDark : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Dark image (shutter closed)");
        XmNhighlightOnEnter = true;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make a dark image with the shut" &
 "ter closed");
        XmNactivateCallback = procedure vExposeTypeCB(0);
    };
};

object pbExpStill : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Still image (shutter open)");
        XmNhighlightOnEnter = true;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make a still image with the shu" &
 "tter open");
        XmNactivateCallback = procedure vExposeTypeCB(1);
    };
};

object pbExpPhi : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Phi rotation (shutter open)");
        XmNhighlightOnEnter = true;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make a rotation image with the " &
 "shutter open while rotating around phi");
        XmNactivateCallback = procedure vExposeTypeCB(2);
    };
};

object pbExpOmega : XmPushButton widget {
    arguments {
        XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Omega rotation (shutter open)");
        XmNhighlightOnEnter = true;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make a rotation image with the " &
 "shutter open while rotating around omega");
        XmNactivateCallback = procedure vExposeTypeCB(3);
    };
};

object pmExpose : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 362;
        XmNheight = 112;
    };
    controls {
         managed XmPushButton pbExpDark;
         managed XmPushButton pbExpStill;
         managed XmPushButton pbExpPhi;
         managed XmPushButton pbExpOmega;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("ExposeType$Select the type of e" &
 "xposure");
    };
};

object omExpose : XmOptionMenu widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
!(BX)   _XmNleftOffset = 95;
        XmNrightOffset = 0;
        XmNtopOffset = 5;
        XmNx = 95;
        XmNy = 5;
        XmNwidth = 339;
        XmNheight = 37;
    };
    controls {
         unmanaged XmPulldownMenu pmExpose;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Enter the type of exposure to c" &
 "reate");
    };
};

object tfExpTime : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "10";
        XmNuserData = 11000;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 40;
        XmNtopWidget = XmOptionMenu omExpose;
        XmNx = 120;
        XmNy = 82;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfExpWidth : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "0.00";
        XmNuserData = 11001;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfExpTime;
        XmNx = 120;
        XmNy = 122;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object pbExpose : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("x");
!(BX)   _XmNlabelString = compound_string("E", separate=true) &
!(BX) compound_string("x", separate=true) &
!(BX) compound_string("p", separate=true) &
!(BX) compound_string("o", separate=true) &
!(BX) compound_string("s", separate=true) &
!(BX) compound_string("e");
        XmNhighlightOnEnter = true;
        XmNuserData = 0;
        XmNnavigationType = XmTAB_GROUP;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNleftOffset = 248;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfExpTime;
        XmNx = 248;
        XmNy = 82;
        XmNwidth = 40;
        XmNheight = 165;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make an exposure at current pos" &
 "ition of given rotation angle width and time");
        XmNactivateCallback = procedure vMainCB();
    };
};

object lbExpTimeCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frExpTimeCurr : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmPushButton pbExpose;
        XmNx = 295;
        XmNy = 82;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbExpTimeCurr;
    };
    callbacks {
    };
};

object lbExpWidthCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frExpWidthCurr : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frExpTimeCurr;
        XmNx = 295;
        XmNy = 122;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbExpWidthCurr;
    };
    callbacks {
    };
};

object lbExpose : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNlabelString = compound_string("Expose");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 107;
        XmNheight = 31;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanLastFileCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 294;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frScanLastFile : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 10;
        XmNtopWidget = XmTextField tfScanTemplate;
        XmNx = 120;
        XmNy = 302;
        XmNwidth = 300;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbScanLastFileCurr;
    };
    callbacks {
    };
};

object lbScanSeqCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frScanSeqCurr : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfScanSeqStart;
        XmNx = 295;
        XmNy = 167;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbScanSeqCurr;
    };
    callbacks {
    };
};

object lbScanNumImgsCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frScanNumImgsCurr : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 295;
        XmNtopOffset = 0;
        XmNtopWidget = XmFrame frScanSeqCurr;
        XmNx = 295;
        XmNy = 207;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbScanNumImgsCurr;
    };
    callbacks {
    };
};

object pbScan : XmPushButton widget {
    arguments {
!(BX)   _XmNmnemonic = keysym("x");
!(BX)   _XmNlabelString = compound_string("S", separate=true) &
!(BX) compound_string("c", separate=true) &
!(BX) compound_string("a", separate=true) &
!(BX) compound_string("n");
        XmNhighlightOnEnter = true;
        XmNuserData = 0;
        XmNnavigationType = XmTAB_GROUP;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 245;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfScanSeqStart;
        XmNx = 245;
        XmNy = 0;
        XmNwidth = 40;
        XmNheight = 80;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Make an exposure at current pos" &
 "ition of given rotation angle width and time");
        XmNactivateCallback = procedure vMainCB();
    };
};

object tfScanSeqStart : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1";
        XmNuserData = 11000;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfExpWidth;
        XmNx = 120;
        XmNy = 167;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfScanNumImgs : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1";
        XmNuserData = 11000;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 0;
        XmNtopWidget = XmTextField tfScanSeqStart;
        XmNx = 120;
        XmNy = 207;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object tfScanTemplate : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "./image.???";
        XmNuserData = 11000;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 160;
        XmNtopOffset = 5;
        XmNtopWidget = XmPushButton pbExpose;
        XmNx = 160;
        XmNy = 252;
        XmNwidth = 260;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object lbScanLastFile : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Last file:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmFrame frScanLastFile;
        XmNx = 0;
        XmNy = 307;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanSeqStart : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Start seq:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfScanSeqStart;
        XmNx = 0;
        XmNy = 172;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanNumImgs : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Num imgs:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfScanNumImgs;
        XmNx = 0;
        XmNy = 212;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbScanTemplate : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Template:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfScanTemplate;
        XmNx = 0;
        XmNy = 257;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object pbScanTemplate : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 120;
        XmNtopOffset = 3;
        XmNtopWidget = XmTextField tfScanTemplate;
        XmNx = 120;
        XmNy = 255;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Pop-up template chooser");
    };
};

object lbExpSet : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_CENTER;
!(BX)   _XmNlabelString = compound_string("Set");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 120;
        XmNtopOffset = 50;
        XmNx = 120;
        XmNy = 50;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbExpCurr : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_CENTER;
!(BX)   _XmNlabelString = compound_string("Current");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 300;
        XmNtopOffset = 50;
        XmNx = 300;
        XmNy = 50;
        XmNwidth = 120;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object fmExpose : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 434;
        XmNheight = 425;
    };
    controls {
         managed XmLabel lbExpCurr;
         managed XmLabel lbExpSet;
         managed XmPushButton pbScanTemplate;
         managed XmLabel lbScanTemplate;
         managed XmLabel lbScanNumImgs;
         managed XmLabel lbScanSeqStart;
         managed XmLabel lbScanLastFile;
         managed XmTextField tfScanTemplate;
         managed XmTextField tfScanNumImgs;
         managed XmTextField tfScanSeqStart;
         unmanaged XmPushButton pbScan;
         managed XmFrame frScanNumImgsCurr;
         managed XmFrame frScanSeqCurr;
         managed XmFrame frScanLastFile;
         managed XmLabel lbExpose;
         managed XmFrame frExpWidthCurr;
         managed XmFrame frExpTimeCurr;
         managed XmPushButton pbExpose;
         managed XmTextField tfExpWidth;
         managed XmTextField tfExpTime;
         managed XmOptionMenu omExpose;
         managed XmLabel lbExpWidth;
         managed XmLabel lbExpTime;
    };
    callbacks {
    };
};

object frExpose : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNrightWidget = XmFrame frCommand;
        XmNtopWidget = XmFrame frShutter;
        XmNx = 0;
        XmNy = 55;
        XmNwidth = 440;
        XmNheight = 431;
    };
    controls {
         managed XmForm fmExpose;
    };
    callbacks {
    };
};

object lbSource : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Source");
        XmNtraversalOn = false;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 130;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object tfSource : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "1.54178";
        XmNuserData = 14000;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 120;
        XmNtopOffset = 5;
        XmNx = 120;
        XmNy = 5;
        XmNwidth = 120;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
       XmNlosingFocusCallback = procedures {
                 vUnPostHelp();
                 vTextFieldCB();
        };
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object pbSourceMove : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Mo", separate=true) &
!(BX) compound_string("ve");
        XmNhighlightOnEnter = true;
        XmNuserData = 0;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNleftOffset = 248;
        XmNtopOffset = 5;
        XmNx = 248;
        XmNy = 5;
        XmNwidth = 40;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Move the source to the requeste" &
 "d wavelength or energy");
        XmNactivateCallback = procedure vMainCB();
    };
};

object lbSourceCurr : XmLabel widget {
    arguments {
!(BX)   _XmNmarginBottom = 10;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 2;
        XmNrecomputeSize = false;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 120;
        XmNheight = 34;
    };
    controls {
    };
    callbacks {
    };
};

object frSourceCurr : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNleftOffset = 295;
        XmNtopOffset = 5;
        XmNx = 295;
        XmNy = 5;
        XmNwidth = 126;
        XmNheight = 40;
    };
    controls {
         managed XmLabel lbSourceCurr;
    };
    callbacks {
    };
};

object pbSourceChoose : XmPushButton widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("...");
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 80;
        XmNtopOffset = 3;
        XmNtopWidget = XmTextField tfSource;
        XmNx = 80;
        XmNy = 8;
        XmNwidth = 35;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("Pop-up wavelength chooser");
    };
};

object fmSource : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 434;
        XmNheight = 49;
    };
    controls {
         managed XmPushButton pbSourceChoose;
         managed XmFrame frSourceCurr;
         managed XmPushButton pbSourceMove;
         managed XmTextField tfSource;
         managed XmLabel lbSource;
    };
    callbacks {
    };
};

object frSource : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frExpose;
        XmNx = 440;
        XmNy = 0;
        XmNwidth = 440;
        XmNheight = 55;
    };
    controls {
         managed XmForm fmSource;
    };
    callbacks {
    };
};

object lbSens1 : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Sensor1:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens2 : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Sensor2:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 30;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens3 : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Sensor3:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 60;
        XmNx = 0;
        XmNy = 60;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens1Curr : XmLabel widget {
    arguments {
        XmNmarginBottom = 2;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 20;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbSens1;
        XmNx = 95;
        XmNy = 0;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens2Curr : XmLabel widget {
    arguments {
        XmNmarginBottom = 2;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 20;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 5;
        XmNtopOffset = 30;
        XmNleftWidget = XmLabel lbSens2;
        XmNx = 95;
        XmNy = 30;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens3Curr : XmLabel widget {
    arguments {
        XmNmarginBottom = 2;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 20;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 60;
        XmNleftWidget = XmLabel lbSens3;
        XmNx = 95;
        XmNy = 60;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens4 : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Sensor4:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmSeparator spSensor;
        XmNx = 205;
        XmNy = 0;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens5 : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Sensor5:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 30;
        XmNleftWidget = XmSeparator spSensor;
        XmNx = 205;
        XmNy = 30;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens6 : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Sensor6:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 60;
        XmNleftWidget = XmSeparator spSensor;
        XmNx = 205;
        XmNy = 60;
        XmNwidth = 90;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens4Curr : XmLabel widget {
    arguments {
        XmNmarginBottom = 2;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 20;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel lbSens4;
        XmNx = 295;
        XmNy = 0;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens5Curr : XmLabel widget {
    arguments {
        XmNmarginBottom = 2;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 20;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 30;
        XmNleftWidget = XmLabel lbSens5;
        XmNx = 295;
        XmNy = 30;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object lbSens6Curr : XmLabel widget {
    arguments {
        XmNmarginBottom = 2;
!(BX)   _XmNlabelString = compound_string("");
        XmNtraversalOn = false;
!(BX)   _XmNmarginHeight = 20;
        XmNrecomputeSize = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 60;
        XmNleftWidget = XmLabel lbSens6;
        XmNx = 295;
        XmNy = 60;
        XmNwidth = 100;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object spSensor : XmSeparator widget {
    arguments {
        XmNorientation = XmVERTICAL;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frSensor;
        XmNleftOffset = 195;
        XmNtopOffset = 0;
        XmNx = 195;
        XmNy = 0;
        XmNwidth = 10;
        XmNheight = 100;
    };
    controls {
    };
    callbacks {
    };
};

object fmSensor : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 400;
        XmNheight = 100;
    };
    controls {
         managed XmSeparator spSensor;
         managed XmLabel lbSens6Curr;
         managed XmLabel lbSens5Curr;
         managed XmLabel lbSens4Curr;
         managed XmLabel lbSens6;
         managed XmLabel lbSens5;
         managed XmLabel lbSens4;
         managed XmLabel lbSens3Curr;
         managed XmLabel lbSens2Curr;
         managed XmLabel lbSens1Curr;
         managed XmLabel lbSens3;
         managed XmLabel lbSens2;
         managed XmLabel lbSens1;
    };
    callbacks {
    };
};

object swSensor : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAUTOMATIC;
        XmNscrollBarPlacement = XmBOTTOM_LEFT;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 434;
        XmNheight = 103;
    };
    controls {
         managed XmForm fmSensor;
    };
    callbacks {
    };
};

object frSensor : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmFrame frCommand;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frExpose;
        XmNtopWidget = XmFrame frDetector;
        XmNx = 440;
        XmNy = 351;
        XmNwidth = 440;
        XmNheight = 109;
    };
    controls {
         managed XmScrolledWindow swSensor;
    };
    callbacks {
    };
};

object twOutput : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNbackground = color('white');
!(BX)   _XmNvalue = "This is where text output shows " &
!(BX) "up.";
        XmNscrollLeftSide = true;
        XmNtraversalOn = false;
        XmNeditable = false;
    };
    controls {
    };
    callbacks {
    };
};

object swOutput : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame frCommand;
        XmNtopWidget = XmFrame frCommand;
        XmNx = 0;
        XmNy = 460;
        XmNwidth = 887;
        XmNheight = 195;
    };
    controls {
         managed XmText twOutput;
    };
    callbacks {
    };
};

object lbCommand : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_END;
!(BX)   _XmNlabelString = compound_string("Command:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 5;
        XmNtopWidget = XmTextField tfCommand;
        XmNx = 0;
        XmNy = 10;
        XmNwidth = 110;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object tfCommand : XmTextField widget {
    arguments {
        XmNuserData = 15000;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNleftOffset = 120;
        XmNrightOffset = 14;
        XmNtopOffset = 5;
        XmNx = 120;
        XmNy = 5;
        XmNwidth = 300;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vUnPostHelp();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object fmCommand : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 3;
        XmNy = 3;
        XmNwidth = 434;
        XmNheight = 49;
    };
    controls {
         managed XmTextField tfCommand;
         managed XmLabel lbCommand;
    };
    callbacks {
    };
};

object frCommand : XmFrame widget {
    arguments {
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 405;
        XmNtopWidget = XmFrame frExpose;
        XmNx = 0;
        XmNy = 405;
        XmNwidth = 440;
        XmNheight = 55;
    };
    controls {
         managed XmForm fmCommand;
    };
    callbacks {
    };
};

object fmMain : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNwidth = 887;
        XmNheight = 655;
    };
    controls {
         managed XmFrame frCommand;
         managed XmScrolledWindow swOutput;
         managed XmFrame frSensor;
         managed XmFrame frSource;
         managed XmFrame frExpose;
         managed XmFrame frDetector;
         managed XmFrame frCrystal;
         managed XmFrame frShutter;
    };
    callbacks {
    };
};

object lbShutterYes : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Really open the shutter?");
    };
    controls {
    };
    callbacks {
    };
};

object pbShutterYes : XmPushButton widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
        XmNbackground = color('red');
        XmNmnemonic = keysym("O");
        XmNarmColor = color('red');
!(BX)   _XmNlabelString = compound_string("Yes, Open the shutter!");
    };
    controls {
    };
    callbacks {
        XmNdisarmCallback = procedure vUnPostHelp();
        XmNarmCallback = procedure vPostHelp("WARNING!  Shutter will be opene" &
 "d!");
        XmNactivateCallback = procedure vMainCB();
    };
};

object ppShutter : XmPopupMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 296;
        XmNheight = 52;
    };
    controls {
         managed XmLabel lbShutterYes;
         managed XmPushButton pbShutterYes;
    };
    callbacks {
        XmNunmapCallback = procedure vUnPostHelp();
        XmNmapCallback = procedure vPostHelp("Double-check: Really open the s" &
 "hutter?");
    };
};

object mainWindow : XmMainWindow widget {
    arguments {
        XmNx = 385;
        XmNy = 326;
        XmNwidth = 887;
        XmNheight = 690;
    };
    controls {
!(BX)         unmanaged XmDialogShell xmDialogShellWarnPosition;
!(BX)         unmanaged XmDialogShell xmDialogShellHeaderEdit;
!(BX)         unmanaged XmDialogShell xmDialogShellEditDetector;
!(BX)         unmanaged XmDialogShell xmDialogShellFileOpenSave;
!(BX)         unmanaged XmDialogShell xmDialogShellViewHeader;
!(BX)         unmanaged XmDialogShell xmDialogShellImageFile;
!(BX)         unmanaged XmDialogShell xmDialogShellError;
!(BX)         unmanaged XmDialogShell xmDialogShellWavelength;
!(BX)         unmanaged XmDialogShell xmDialogShellCollectScan;
         managed XmMenuBar menuBar;
         managed XmForm fmMain;
         unmanaged XmPopupMenu ppShutter;
    };
    callbacks {
    };
};

!(BX)object dtcollect : TopLevelShell widget {
!(BX)    arguments {
!(BX)        _XmNtitle = "d*TREK - dtcollect";
!(BX)        _XmNiconName = "dtcollect";
!(BX)        XmNx = 385;
!(BX)        XmNy = 326;
!(BX)        XmNwidth = 887;
!(BX)        XmNheight = 690;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMainWindow mainWindow;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIeditdetector_cUIomBinMode : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom2";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel cUIeditdetector_lbBinMode;
        XmNtopWidget = XmLabel cUIeditdetector_lbBinMode;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 147;
        XmNheight = 37;
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("2 x 2");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("1 x 1");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIeditdetector_cUIomReadMode : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom2";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel cUIeditdetector_lbReadMode;
        XmNtopWidget = XmLabel cUIeditdetector_lbReadMode;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 147;
        XmNheight = 37;
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Fast");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Slow");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIeditdetector_cUIomDezingerMode : XmForm widget {
    arguments {
!(BX) BxNclass = "CUIom2";
!(BX) BxNsubclassDerived = "False";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNleftOffset = 5;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmLabel cUIeditdetector_lbDezingerMode;
        XmNtopWidget = XmLabel cUIeditdetector_lbDezingerMode;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 147;
        XmNheight = 37;
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("None");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Normal");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIeditdetector_lbBinMode : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Binning mode:");
!(BX)   cUIeditdetector_lbBinMode _XmNlabelString = compound_string("Binning mode:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNleftOffset = 0;
        XmNtopOffset = 25;
        XmNx = 0;
        XmNy = 25;
        XmNwidth = 200;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
    };
};

object cUIeditdetector_lbReadMode : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Readout speed:");
!(BX)   cUIeditdetector_lbReadMode _XmNlabelString = compound_string("Readout speed:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 25;
        XmNtopWidget = XmLabel cUIeditdetector_lbBinMode;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 200;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
    };
};

object cUIeditdetector_lbDezingerMode : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("Dezinger mode:");
!(BX)   cUIeditdetector_lbDezingerMode _XmNlabelString = compound_string("Dezinger mode:");
        XmNtraversalOn = false;
        XmNtopAttachment = XmATTACH_WIDGET;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_NONE;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNtopOffset = 25;
        XmNtopWidget = XmLabel cUIeditdetector_lbReadMode;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 200;
        XmNheight = 40;
    };
    controls {
    };
    callbacks {
    };
};

object cUIeditdetector_foEditDetector : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 11;
        XmNy = 11;
        XmNwidth = 430;
        XmNheight = 205;
    };
    controls {
         managed XmLabel cUIeditdetector_lbDezingerMode;
         managed XmLabel cUIeditdetector_lbReadMode;
         managed XmLabel cUIeditdetector_lbBinMode;
         managed XmForm cUIeditdetector_cUIomDezingerMode;
         managed XmForm cUIeditdetector_cUIomReadMode;
         managed XmForm cUIeditdetector_cUIomBinMode;
    };
    callbacks {
    };
};

object cUIeditdetector_sdEditDetector : XmSelectionBox widget {
    arguments {
!(BX) BxNclassOnly = "CUIeditdetector";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIeditdetectorDerived";
!(BX) BxNfilebase = "CUIeditdetectorDerived";
!(BX) BxNclassFilebase = "CUIeditdetector";
!(BX) BxNclassGeometry = "452x545+116+220";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIeditdetector";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
!(BX)   _XmNdialogTitle = compound_string("dtcollect - Edit detector proper" &
!(BX) "ties");
!(BX)   cUIeditdetector_sdEditDetector _XmNdialogTitle = compound_string("dtcollect - Edit detector proper" &
!(BX) "ties");
        XmNdialogType = XmDIALOG_SELECTION;
        XmNchildPlacement = XmPLACE_TOP;
        XmNx = 116;
        XmNy = 220;
        XmNwidth = 452;
        XmNheight = 545;
    };
    controls {
        Xm_Apply managed {
        };
         managed XmForm cUIeditdetector_foEditDetector;
    };
    callbacks {
        XmNhelpCallback = procedure vEditDetectorCB();
        XmNokCallback = procedure vEditDetectorCB();
        XmNcancelCallback = procedure vEditDetectorCB();
        XmNapplyCallback = procedure vEditDetectorCB();
    };
};

object CUIom8 : XmForm widget {
    arguments {
!(BX) BxNclassBase = "CUIom9";
!(BX) BxNclassOnly = "CUIom8";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIom8D";
!(BX) BxNfilebase = "CUIom8D";
!(BX) BxNclassFilebase = "CUIom8";
!(BX) BxNclassGeometry = "159x37+966+227";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIom8";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 966;
        XmNy = 227;
        XmNwidth = 159;
        XmNheight = 37;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("Reserved");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("-Y -X");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("-Y +X");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("+Y -X");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("+Y +X");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("-X -Y");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("-X +Y");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("+X -Y");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("+X +Y");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object CUIom2 : XmForm widget {
    arguments {
!(BX) BxNclassBase = "CUIom9";
!(BX) BxNclassOnly = "CUIom2";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIom2D";
!(BX) BxNfilebase = "CUIom2D";
!(BX) BxNclassFilebase = "CUIom2";
!(BX) BxNclassGeometry = "147x37+954+143";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIom2";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 954;
        XmNy = 143;
        XmNwidth = 147;
        XmNheight = 37;
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("No");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Yes");
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIom9_pb0 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb0 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Black");
!(BX)   cUIom9_pb0 _XmNlabelString = compound_string("Black");
        XmNuserData = 0;
!(BX)   cUIom9_pb0 XmNuserData = 0;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb1 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb1 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Red");
!(BX)   cUIom9_pb1 _XmNlabelString = compound_string("Red");
        XmNuserData = 1;
!(BX)   cUIom9_pb1 XmNuserData = 1;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb2 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb2 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Orange");
!(BX)   cUIom9_pb2 _XmNlabelString = compound_string("Orange");
        XmNuserData = 2;
!(BX)   cUIom9_pb2 XmNuserData = 2;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb3 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb3 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Yellow");
!(BX)   cUIom9_pb3 _XmNlabelString = compound_string("Yellow");
        XmNuserData = 3;
!(BX)   cUIom9_pb3 XmNuserData = 3;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb4 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb4 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Green");
!(BX)   cUIom9_pb4 _XmNlabelString = compound_string("Green");
        XmNuserData = 4;
!(BX)   cUIom9_pb4 XmNuserData = 4;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb5 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb5 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Blue");
!(BX)   cUIom9_pb5 _XmNlabelString = compound_string("Blue");
        XmNuserData = 5;
!(BX)   cUIom9_pb5 XmNuserData = 5;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb6 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb6 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Magenta");
!(BX)   cUIom9_pb6 _XmNlabelString = compound_string("Magenta");
        XmNuserData = 6;
!(BX)   cUIom9_pb6 XmNuserData = 6;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb7 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb7 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("Cyan");
!(BX)   cUIom9_pb7 _XmNlabelString = compound_string("Cyan");
        XmNuserData = 7;
!(BX)   cUIom9_pb7 XmNuserData = 7;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pb8 : XmPushButton widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_pb8 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("White");
!(BX)   cUIom9_pb8 _XmNlabelString = compound_string("White");
        XmNuserData = 8;
!(BX)   cUIom9_pb8 XmNuserData = 8;
    };
    controls {
    };
    callbacks {
    };
};

object cUIom9_pm9 : XmPulldownMenu widget {
    arguments {
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 98;
        XmNheight = 247;
    };
    controls {
         managed XmPushButton cUIom9_pb0;
         managed XmPushButton cUIom9_pb1;
         managed XmPushButton cUIom9_pb2;
         managed XmPushButton cUIom9_pb3;
         managed XmPushButton cUIom9_pb4;
         managed XmPushButton cUIom9_pb5;
         managed XmPushButton cUIom9_pb6;
         managed XmPushButton cUIom9_pb7;
         managed XmPushButton cUIom9_pb8;
    };
    callbacks {
    };
};

object cUIom9_om9 : XmOptionMenu widget {
    arguments {
!(BX)   _XmNsensitive = true;
!(BX)   cUIom9_om9 _XmNsensitive = true;
!(BX)   _XmNlabelString = compound_string("");
!(BX)   cUIom9_om9 _XmNlabelString = compound_string("");
        XmNnavigationType = XmTAB_GROUP;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 147;
        XmNheight = 37;
    };
    controls {
         unmanaged XmPulldownMenu cUIom9_pm9;
    };
    callbacks {
    };
};

object cUIom9_form : XmForm widget {
    arguments {
!(BX) BxNclassOnly = "CUIom9";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIom9D";
!(BX) BxNfilebase = "CUIom9D";
!(BX) BxNclassFilebase = "CUIom9";
!(BX) BxNclassGeometry = "147x37+1060+139";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIom9";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 1060;
        XmNy = 139;
        XmNwidth = 147;
        XmNheight = 37;
    };
    controls {
         managed XmOptionMenu cUIom9_om9;
    };
    callbacks {
    };
};

object cUIimagefileSelect_messageBox : XmMessageDialog widget {
    arguments {
        XmNdialogStyle = XmDIALOG_FULL_APPLICATION_MODAL;
!(BX)   _XmNdialogTitle = compound_string("d*TREK - Image directory DOES NO" &
!(BX) "T EXIST");
!(BX)   cUIimagefileSelect_messageBox _XmNdialogTitle = compound_string("d*TREK - Image directory DOES NO" &
!(BX) "T EXIST");
        XmNdialogType = XmDIALOG_QUESTION;
        XmNokLabelString = compound_string("OK, Create");
!(BX)   _XmNmessageString = compound_string("Image directory DOES NOT EXIST.", separate=true) &
!(BX) compound_string("Create it?");
!(BX)   cUIimagefileSelect_messageBox _XmNmessageString = compound_string("Image directory DOES NOT EXIST.", separate=true) &
!(BX) compound_string("Create it?");
        XmNx = 608;
        XmNy = 529;
        XmNwidth = 478;
        XmNheight = 135;
    };
    controls {
    };
    callbacks {
        XmNokCallback = procedure vMessageBoxCB();
        XmNcancelCallback = procedure vMessageBoxCB();
    };
};

!(BX)object cUIimagefileSelect_xmDialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 608;
!(BX)        XmNy = 529;
!(BX)        XmNwidth = 478;
!(BX)        XmNheight = 135;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmMessageDialog cUIimagefileSelect_messageBox;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object cUIimagefileSelect_seqStart : XmForm widget {
    arguments {
!(BX) BxNclass = "CUInumberField";
!(BX) BxNsubclassDerived = "False";
!(BX)   cUIimagefileSelect_seqStart _XmNsensitive = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 100;
!(BX)   cUIimagefileSelect_seqStart XmNwidth = 100;
!(BX)   cUIimagefileSelect_seqStart XmNheight = 110;
!(BX)   cUInumberField_textField _XmNvalue = "%.0f";
!(BX)   cUInumberField_label _XmNlabelString = compound_string("Seq", separate=true) &
!(BX) compound_string("start");
    };
    controls {
         managed XmScrollBar cUInumberField_scrollBar;
         managed XmTextField cUInumberField_textField;
         managed XmLabel cUInumberField_label;
         managed XmFrame cUInumberField_frame;
    };
    callbacks {
    };
};

object cUIimagefileSelect_seqIncr : XmForm widget {
    arguments {
!(BX) BxNclass = "CUInumberField";
!(BX) BxNsubclassDerived = "False";
!(BX)   cUIimagefileSelect_seqIncr _XmNsensitive = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmForm cUIimagefileSelect_seqStart;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 100;
!(BX)   cUIimagefileSelect_seqIncr XmNwidth = 100;
!(BX)   cUIimagefileSelect_seqIncr XmNheight = 110;
!(BX)   cUInumberField_textField _XmNvalue = "%.0f";
!(BX)   cUInumberField_label _XmNlabelString = compound_string("Seq", separate=true) &
!(BX) compound_string("incr");
    };
    controls {
         managed XmScrollBar cUInumberField_scrollBar;
         managed XmTextField cUInumberField_textField;
         managed XmLabel cUInumberField_label;
         managed XmFrame cUInumberField_frame;
    };
    callbacks {
    };
};

object cUIimagefileSelect_numImages : XmForm widget {
    arguments {
!(BX) BxNclass = "CUInumberField";
!(BX) BxNsubclassDerived = "False";
!(BX)   cUIimagefileSelect_numImages _XmNsensitive = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNrightAttachment = XmATTACH_NONE;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmForm cUIimagefileSelect_seqIncr;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 100;
!(BX)   cUIimagefileSelect_numImages XmNwidth = 100;
!(BX)   cUIimagefileSelect_numImages XmNheight = 110;
!(BX)   cUInumberField_scrollBar _XmNminimum = 0;
!(BX)   cUInumberField_scrollBar _XmNmaximum = 111;
!(BX)   cUInumberField_textField _XmNvalue = "%.0f";
!(BX)   cUInumberField_label _XmNlabelString = compound_string("Num", separate=true) &
!(BX) compound_string("images");
    };
    controls {
         managed XmScrollBar cUInumberField_scrollBar;
         managed XmTextField cUInumberField_textField;
         managed XmLabel cUInumberField_label;
         managed XmFrame cUInumberField_frame;
    };
    callbacks {
    };
};

object cUIimagefileSelect_text : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
        XmNcursorPositionVisible = false;
!(BX)   _XmNvalue = "Disk space:  %d kbytes\n\
!(BX)Free s" &
!(BX) "pace:  %d kbytes\n\
!(BX)Free space:  %d images";
        XmNscrollLeftSide = true;
        XmNscrollTopSide = true;
        XmNautoShowCursorPosition = false;
        XmNrows = 6;
        XmNtraversalOn = false;
        XmNeditable = false;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmForm cUIimagefileSelect_numImages;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNleftWidget = XmForm cUIimagefileSelect_numImages;
        XmNtopWidget = XmForm cUIimagefileSelect_numImages;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 270;
    };
    controls {
    };
    callbacks {
    };
};

object cUIimagefileSelect_form : XmForm widget {
    arguments {
    };
    controls {
         managed XmText cUIimagefileSelect_text;
         managed XmForm cUIimagefileSelect_numImages;
         managed XmForm cUIimagefileSelect_seqIncr;
         managed XmForm cUIimagefileSelect_seqStart;
!(BX)         unmanaged XmDialogShell cUIimagefileSelect_xmDialogShell;
    };
    callbacks {
    };
};

object cUIimagefileSelect_cUIimagefileSelect : XmFileSelectionDialog widget {
    arguments {
!(BX) BxNclassOnly = "CUIimagefileSelect";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIimagefileSelectD";
!(BX) BxNfilebase = "CUIimagefileSelectD";
!(BX) BxNclassFilebase = "CUIimagefileSelect";
!(BX) BxNclassGeometry = "592x552+551+236";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIimagefileSelect";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
!(BX)   _XmNdialogTitle = compound_string("Select image file and/or templat" &
!(BX) "e name");
!(BX)   cUIimagefileSelect_cUIimagefileSelect _XmNdialogTitle = compound_string("Select image file and/or templat" &
!(BX) "e name");
!(BX)   _XmNselectionLabelString = compound_string("Image file");
!(BX)   cUIimagefileSelect_cUIimagefileSelect _XmNselectionLabelString = compound_string("Image file");
!(BX)   _XmNokLabelString = compound_string("OK");
!(BX)   cUIimagefileSelect_cUIimagefileSelect _XmNokLabelString = compound_string("OK");
!(BX)   _XmNfilterLabelString = compound_string("Filter or Template");
!(BX)   cUIimagefileSelect_cUIimagefileSelect _XmNfilterLabelString = compound_string("Filter or Template");
        XmNx = 551;
        XmNy = 236;
        XmNwidth = 592;
        XmNheight = 552;
    };
    controls {
         managed XmForm cUIimagefileSelect_form;
    };
    callbacks {
        XmNokCallback = procedure vImagefileSelectCB();
        XmNcancelCallback = procedure vImagefileSelectCB();
        XmNapplyCallback = procedure vImagefileSelectCB();
    };
};

object cUInumberField_frame : XmFrame widget {
    arguments {
        XmNtraversalOn = false;
        XmNnavigationType = XmNONE;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 0;
        XmNx = 0;
        XmNy = 0;
    };
    controls {
    };
    callbacks {
    };
};

object cUInumberField_label : XmLabel widget {
    arguments {
!(BX)   _XmNlabelString = compound_string("label");
!(BX)   cUInumberField_label _XmNlabelString = compound_string("label");
        XmNtraversalOn = false;
        XmNrecomputeSize = true;
        XmNtopAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmTextField cUInumberField_textField;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 2;
        XmNleftWidget = XmFrame cUInumberField_frame;
        XmNrightWidget = XmFrame cUInumberField_frame;
        XmNtopWidget = XmFrame cUInumberField_frame;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 96;
        XmNheight = 46;
    };
    controls {
    };
    callbacks {
    };
};

object cUInumberField_textField : XmTextField widget {
    arguments {
!(BX)   _XmNvalue = "%.2f";
!(BX)   cUInumberField_textField _XmNvalue = "%.2f";
        XmNhighlightOnEnter = true;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_WIDGET;
        XmNresizable = false;
        XmNbottomOffset = 0;
        XmNbottomWidget = XmScrollBar cUInumberField_scrollBar;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame cUInumberField_frame;
        XmNrightWidget = XmFrame cUInumberField_frame;
        XmNx = 0;
        XmNy = 48;
        XmNwidth = 96;
        XmNheight = 35;
    };
    controls {
    };
    callbacks {
        XmNlosingFocusCallback = procedure vTextFieldCB();
        XmNactivateCallback = procedure vTextFieldCB();
    };
};

object cUInumberField_scrollBar : XmScrollBar widget {
    arguments {
!(BX)   _XmNminimum = -500;
!(BX)   cUInumberField_scrollBar _XmNminimum = -500;
!(BX)   _XmNvalue = 1;
!(BX)   cUInumberField_scrollBar _XmNvalue = 1;
!(BX)   _XmNmaximum = 611;
!(BX)   cUInumberField_scrollBar _XmNmaximum = 611;
!(BX)   _XmNpageIncrement = 10;
!(BX)   cUInumberField_scrollBar _XmNpageIncrement = 10;
        XmNhighlightOnEnter = true;
        XmNorientation = XmHORIZONTAL;
        XmNtopAttachment = XmATTACH_NONE;
        XmNrightAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNleftAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNbottomAttachment = XmATTACH_OPPOSITE_WIDGET;
        XmNresizable = false;
        XmNbottomOffset = 2;
        XmNbottomWidget = XmFrame cUInumberField_frame;
        XmNleftOffset = 2;
        XmNrightOffset = 2;
        XmNtopOffset = 0;
        XmNleftWidget = XmFrame cUInumberField_frame;
        XmNrightWidget = XmFrame cUInumberField_frame;
        XmNx = 0;
        XmNy = 83;
        XmNwidth = 96;
        XmNheight = 25;
    };
    controls {
    };
    callbacks {
        XmNtoTopCallback = procedure vScrollBarCB();
        XmNtoBottomCallback = procedure vScrollBarCB();
        XmNpageIncrementCallback = procedure vScrollBarCB();
        XmNpageDecrementCallback = procedure vScrollBarCB();
        XmNincrementCallback = procedure vScrollBarCB();
        XmNdragCallback = procedure vScrollBarCB();
        XmNdecrementCallback = procedure vScrollBarCB();
    };
};

object cUInumberField_form : XmForm widget {
    arguments {
!(BX) BxNclassOnly = "CUInumberField";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUInumberFieldD";
!(BX) BxNfilebase = "CUInumberFieldD";
!(BX) BxNclassFilebase = "CUInumberField";
!(BX) BxNclassGeometry = "100x110+1052+198";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUInumberField";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
!(BX)   _XmNsensitive = true;
!(BX)   cUInumberField_form _XmNsensitive = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNx = 1052;
        XmNy = 198;
        XmNwidth = 100;
!(BX)   cUInumberField_form XmNwidth = 100;
        XmNheight = 110;
!(BX)   cUInumberField_form XmNheight = 110;
    };
    controls {
         managed XmScrollBar cUInumberField_scrollBar;
         managed XmTextField cUInumberField_textField;
         managed XmLabel cUInumberField_label;
         managed XmFrame cUInumberField_frame;
    };
    callbacks {
    };
};

object cUIPSfileSelect_tfComment : XmText widget {
    arguments {
        XmNeditMode = XmMULTI_LINE_EDIT;
    };
    controls {
    };
    callbacks {
    };
};

object cUIPSfileSelect_scrolledWindow : XmScrolledWindow widget {
    arguments {
        XmNscrollingPolicy = XmAPPLICATION_DEFINED;
        XmNtopAttachment = XmATTACH_FORM;
        XmNrightAttachment = XmATTACH_FORM;
        XmNleftAttachment = XmATTACH_FORM;
        XmNbottomAttachment = XmATTACH_FORM;
        XmNbottomOffset = 0;
        XmNleftOffset = 0;
        XmNrightOffset = 0;
        XmNtopOffset = 30;
        XmNx = 0;
        XmNy = 30;
        XmNwidth = 465;
        XmNheight = 90;
    };
    controls {
         managed XmText cUIPSfileSelect_tfComment;
    };
    callbacks {
    };
};

object cUIPSfileSelect_lbComment : XmLabel widget {
    arguments {
        XmNalignment = XmALIGNMENT_BEGINNING;
!(BX)   _XmNlabelString = compound_string("Comment");
!(BX)   cUIPSfileSelect_lbComment _XmNlabelString = compound_string("Comment");
        XmNtraversalOn = false;
        XmNx = 0;
        XmNy = 0;
        XmNwidth = 208;
        XmNheight = 30;
    };
    controls {
    };
    callbacks {
    };
};

object cUIPSfileSelect_form : XmForm widget {
    arguments {
        XmNresizePolicy = XmRESIZE_GROW;
        XmNheight = 120;
    };
    controls {
         managed XmLabel cUIPSfileSelect_lbComment;
         managed XmScrolledWindow cUIPSfileSelect_scrolledWindow;
    };
    callbacks {
    };
};

object cUIPSfileSelect_cUIPSfileSelect : XmFileSelectionDialog widget {
    arguments {
!(BX) BxNclassOnly = "CUIPSfileSelect";
!(BX) BxNsubclassDerived = "False";
!(BX) BxNclassOnlyFile = "False";
!(BX) BxNbaseInclude = asciz_string_table('');
!(BX) BxNderivedInclude = asciz_string_table('');
!(BX) BxNderived = "CUIPSfileSelectD";
!(BX) BxNfilebase = "CUIPSfileSelectD";
!(BX) BxNclassFilebase = "CUIPSfileSelect";
!(BX) BxNclassGeometry = "487x562+755+95";
!(BX) BxNgenerate = "False";
!(BX) BxNreference = "True";
!(BX) BxNpaletteGroup = "User Classes";
!(BX) BxNpaletteName = "cUIPSfileSelect";
!(BX) BxNpaletteGeom = "+0+0";
!(BX) BxNpalettePixmapName = "Class";
!(BX)   _XmNdialogTitle = compound_string("Select PostScript file name");
!(BX)   cUIPSfileSelect_cUIPSfileSelect _XmNdialogTitle = compound_string("Select PostScript file name");
!(BX)   _XmNselectionLabelString = compound_string("PostScript file");
!(BX)   cUIPSfileSelect_cUIPSfileSelect _XmNselectionLabelString = compound_string("PostScript file");
!(BX)   _XmNokLabelString = compound_string("OK");
!(BX)   cUIPSfileSelect_cUIPSfileSelect _XmNokLabelString = compound_string("OK");
!(BX)   _XmNfilterLabelString = compound_string("Filter");
!(BX)   cUIPSfileSelect_cUIPSfileSelect _XmNfilterLabelString = compound_string("Filter");
        XmNx = 755;
        XmNy = 95;
        XmNwidth = 487;
        XmNheight = 562;
    };
    controls {
         managed XmForm cUIPSfileSelect_form;
    };
    callbacks {
        XmNokCallback = procedure vPSfileSelectCB();
        XmNcancelCallback = procedure vPSfileSelectCB();
        XmNapplyCallback = procedure vPSfileSelectCB();
    };
};
end module;
